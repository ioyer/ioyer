<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>解决方案 on 七习--高效能人士</title>
    <link>https://it-boyer.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
    <description>Recent content in 解决方案 on 七习--高效能人士</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 21 Jul 2021 16:40:00 +0800</lastBuildDate><atom:link href="https://it-boyer.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解决appstore安装app过程进度停止问题</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</link>
      <pubDate>Wed, 21 Jul 2021 16:40:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</guid>
      <description>问题情况描述 解决办法 问题情况描述 在appstore安装过程中，有可能因为网络异常导致安装异常中止，但是进度依然显示安装中，此时无法通过app</description>
    </item>
    
    <item>
      <title>trime,emacs-rime和squirrel输入法和配置管理</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 22 Jun 2021 11:50:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;TODO&amp;rdquo; [2021-06-25 Fri 10:09] 在安卓上安装rime 同文输入法。 使用输入法配置库：rimerc, 大牛配置好的配置，包括同文和squirrel 配置。 配置路径在`</description>
    </item>
    
    <item>
      <title>禁止 APP 页面自动旋转,对指定页面实现手动切换横竖屏</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E7%A6%81%E6%AD%A2-app-%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%8A%A8%E6%97%8B%E8%BD%AC%E5%AF%B9%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2%E6%89%8B%E5%8A%A8%E5%88%87%E6%8D%A2%E6%A8%AA%E7%AB%96%E5%B1%8F/</link>
      <pubDate>Thu, 20 May 2021 08:20:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E7%A6%81%E6%AD%A2-app-%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%8A%A8%E6%97%8B%E8%BD%AC%E5%AF%B9%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2%E6%89%8B%E5%8A%A8%E5%88%87%E6%8D%A2%E6%A8%AA%E7%AB%96%E5%B1%8F/</guid>
      <description>项目遇到的实际问题 在实现 单个页面支持横竖屏 的需求,有两种解决方案. 实际案例:在项目中,针对电子巡查有直播功能,需要支持全屏查看直播,同时支持</description>
    </item>
    
    <item>
      <title>swift 的 doom 环境</title>
      <link>https://it-boyer.github.io/post/old/swift-%E5%9C%A8-doom-%E4%B8%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sun, 13 Sep 2020 22:40:23 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift-%E5%9C%A8-doom-%E4%B8%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5/</guid>
      <description>安装 swift-mode swift 自动补齐相关插件 swift-mode State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;DELEGATED&amp;rdquo; [2019-12-11 三 09:30][终端支持 swift 自动补齐](post/shell/终端支持 swift 自动补齐) flycheck-swift nathankot/company-sourcekit swift-emacs/swift-mode 创建可执行项目 spi &amp;ndash;type</description>
    </item>
    
    <item>
      <title>Github集成plantuml代理服务绘制uml图</title>
      <link>https://it-boyer.github.io/post/old/github%E9%9B%86%E6%88%90plantuml%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E7%BB%98%E5%88%B6uml%E5%9B%BE/</link>
      <pubDate>Thu, 05 Sep 2019 20:13:28 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/github%E9%9B%86%E6%88%90plantuml%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E7%BB%98%E5%88%B6uml%E5%9B%BE/</guid>
      <description>使用此stackoverflow讨论中描述的PlantUML 代理服务。这种方式的工作原理是，我们定义了一个远程URL，而不是传递PlantU</description>
    </item>
    
    <item>
      <title>优化网络实现方式,重构SDImage组件调用接口</title>
      <link>https://it-boyer.github.io/post/old/%E4%BC%98%E5%8C%96%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F-%E9%87%8D%E6%9E%84sdimage%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Fri, 09 Aug 2019 11:47:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%BC%98%E5%8C%96%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F-%E9%87%8D%E6%9E%84sdimage%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3/</guid>
      <description>&amp;mdash;&amp;ndash;BEGIN PGP MESSAGE&amp;mdash;&amp;ndash; jA0EBwMCUlTuBCTI8Rbk0ukBersHDQQnHsO5+FaUQKR/ZYY6m1lxq+gbwYyCaV0y rDRbuteR30Hqyipc72CjIUWnE1DdqbSsiy7GZdh+oWUPb/cxZUFvZ0tOXStliAHC wGsqab2ewbfstgM9vfHv2dMmfUvbFIFBED0z8Oo7psXyjvUv/06yMLM07Ap9C7jD kARn3Q88hdeHTorDGKPF4sPteAyCA/h0kdgglUSlpAOZP+KqDyz8kj4gGPp/zW3t zJHuYjS8ZrtWjhr0UifLAmgOjIS7glKX2clOTVGv7nyUCfK3ctWOxjtA1Rbf6cKA LTgVrwwLps7E8oe8ATgi4H+0FyQ0gwpt/y6fDzmoelEzHD1MhFkNWAlZJn5USaGI 2E425Zv4MgzfmwAYbr65JUmyNuZAq2JlkvSFFDNZPQ1N2edmpyZf8ZB2LQf9bOcy 836RjOmebZca5ARuFHcUAG/5SjoXf5vL2hPusWhHhPlK9oJNr15rwNt5tFQVv0zL YQUGUtzSAe5iN08sgb7Vj5ZeRDqcIfAm+QbTGSSe5jFIIt3zR4lfaATz7f6g797h vPm11zneE6wu90ltmdZQVkwE2Mq3zGpN5NUwoDDpehoGReZszLfPr+in0khzxgYj bNjeT95BDAHqMdQp/g6YJItGsdlcJzMrcU1JoQkVu4t1pBsz4JSpxqu2VbJCQqDq OsEVNzys/TACtP35rqD3HVPpCypp79gjb+/vTcUlESYRQvHUlemGAJTMGqiu6GUu VwhGvW2+Xii1UJtlN1h0XqKddb6cNJXnjSMaGQOH1mnSVxn5OZxrVm9UCqm8pN1G 9WMEzB8lcJo5nS5DdzbsD/X7hydnARX//Ge/aTQ8Cruw7CTILwqnBaw529HMP8Q4 iFBJcacVfnYz4AEeevvIGXSavzrUkTQGViaoHh/t5rHRLnW7V4EYmykUrbqVKohs pmy77RuQfMA3r37qVKqmKE7Qxy04EGyh/JDhYXCZWmoDW6C1amJfmHzJcKENo22P 577ldYhgZ5GUQ9IEWN/RqxT4sD+2RY+YTf+Ja1jRisN7ocdg7JOLo776MsohS99C XHUv+NhaZC0rWoqX3ge652TmZJp9cDEeE6PxgWPRHKRPHTQeDdErSQSTjfQCUnGT szvB7XFJh/SEf4PjyeWqV5t9d+lLlW37EwuB+ovzFd94GU8tnNlTNnkjPpqobsWy JaljzhDDQXomL+EDaGePIBKB9/fi6CChFNNnGtuuSPCpK6c7/XlUNIRVsI1pOWcs FU29dsxewXfclRW7jl3hs1+FVwErKHwpPVXYTGkIaCSkBUpiDo11Yg== =2Zpw &amp;mdash;&amp;ndash;END PGP MESSAGE&amp;mdash;&amp;ndash;</description>
    </item>
    
    <item>
      <title>SSH命令安装及使用</title>
      <link>https://it-boyer.github.io/post/old/shell/ssh%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 26 Feb 2019 18:16:23 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/ssh%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
      <description>写下这篇文章的目的是为了更清楚的讲解和展现ssh的用法和操作，避免网上庞杂的文章和材料影响新手的学习过程。所以如果你是为老手，可以略过这篇文</description>
    </item>
    
    <item>
      <title>iOS系统的shell工具blink</title>
      <link>https://it-boyer.github.io/post/old/shell/ios%E7%B3%BB%E7%BB%9F%E7%9A%84shell%E5%B7%A5%E5%85%B7blink/</link>
      <pubDate>Tue, 26 Feb 2019 18:11:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/ios%E7%B3%BB%E7%BB%9F%E7%9A%84shell%E5%B7%A5%E5%85%B7blink/</guid>
      <description>简介 用于iOS的Blink Shell(为更多Shell util进行了编辑) Blink是第一个利用Mosh和SSH支持的专业桌面级iOS终端。</description>
    </item>
    
    <item>
      <title>Chisel-xcodeproj框架的使用</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/chisel-xcodeproj%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 09 Nov 2018 13:05:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/chisel-xcodeproj%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github it-boyer chisel f331dc6 width = 30% %} 这个pull请求添加findinstances命令，该命令完成Add findinstances, and new support framework in Chisel.xcodeproj 和Add Makefile for installing framework的工作。</description>
    </item>
    
    <item>
      <title>makefile自动化编译工具</title>
      <link>https://it-boyer.github.io/post/old/shell/makefile%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 08 Nov 2018 20:30:54 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/makefile%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</guid>
      <description>make命令执行时，需要一个makefile文件，以告诉make命令需要怎么样的去编译和链接程序。 首先，我们用一个示例来说明makefile</description>
    </item>
    
    <item>
      <title>使用screen在后台运行进程</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8screen%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Sun, 21 Oct 2018 22:42:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8screen%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E8%BF%9B%E7%A8%8B/</guid>
      <description>screen 支持会话恢复 当我们开启screen后，只要screen进程没有终止，其内部运行的会话都可以恢复。网络连接中断临时，用户也可以进入开启的sc</description>
    </item>
    
    <item>
      <title>基于Chisel自定义python调试命令</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E5%9F%BA%E4%BA%8Echisel%E8%87%AA%E5%AE%9A%E4%B9%89python%E8%B0%83%E8%AF%95%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 21 Oct 2018 09:03:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E5%9F%BA%E4%BA%8Echisel%E8%87%AA%E5%AE%9A%E4%B9%89python%E8%B0%83%E8%AF%95%E5%91%BD%E4%BB%A4/</guid>
      <description>{% github it-boyer chisel 56d0e0d width = 30% %} 管理.lldbinit .lldbinit每次启动Xcode 都会加载lldb环境，故当自定义命令写好之后，可以通过这里加载。</description>
    </item>
    
    <item>
      <title>安装ruby及chruby版本管理</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%AE%89%E8%A3%85ruby%E5%8F%8Achruby%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 19 Oct 2018 15:58:23 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E5%AE%89%E8%A3%85ruby%E5%8F%8Achruby%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</guid>
      <description>{% github postmodern ruby-install ea2b8bb width = 30% %} 安装工具ruby-install 1 $ brew install ruby-install 安装指定 Ruby 版本 方式一：使用Homebrew安装 1 2 $ ruby-install ruby 2.4.1 $ ruby-install --system ruby #覆盖系统版本</description>
    </item>
    
    <item>
      <title>xcode调试中引用python脚本</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/xcode%E8%B0%83%E8%AF%95%E4%B8%AD%E5%BC%95%E7%94%A8python%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 17 Oct 2018 19:47:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/xcode%E8%B0%83%E8%AF%95%E4%B8%AD%E5%BC%95%E7%94%A8python%E8%84%9A%E6%9C%AC/</guid>
      <description>Xcode集成了LLDB，进一步简化了程序调试流程。虽然LLDB很强大，但是它的命令很有限。所幸的是，lldb包含了对python的支持，使</description>
    </item>
    
    <item>
      <title>swift调用pngquant批量压缩图片</title>
      <link>https://it-boyer.github.io/post/old/macos/swift%E8%B0%83%E7%94%A8pngquant%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/</link>
      <pubDate>Mon, 15 Oct 2018 20:51:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/swift%E8%B0%83%E7%94%A8pngquant%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/</guid>
      <description>{% github amosavian FileProvider b597244 width = 30% %} 安装FilesProvider 使用FilesProvider来做文件处理，通过SPM管理库依赖 配置Package.swif</description>
    </item>
    
    <item>
      <title>批量压缩png图片工具</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9png%E5%9B%BE%E7%89%87%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 15 Oct 2018 15:21:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9png%E5%9B%BE%E7%89%87%E5%B7%A5%E5%85%B7/</guid>
      <description>{% github it-boyer width = 30% %} pngquant 使用pngquant批量压缩png 编写批量处理脚本 vi compresspng.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35</description>
    </item>
    
    <item>
      <title>自动生成icon@2x@1x</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90icon2x1x/</link>
      <pubDate>Mon, 15 Oct 2018 15:21:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90icon2x1x/</guid>
      <description>{% github rickytan RTImageAssets cf0a641 width = 30% %} 自动生成所有所需的应用程序图标 https://github.com/rickytan/RTImageAssets iOS开发工具：自动生成@2x,@3x图片 IconMaker程序生成icon {% gist 816b7ef296219d14edac %} 通过原</description>
    </item>
    
    <item>
      <title>Zsh插件之github使用</title>
      <link>https://it-boyer.github.io/post/old/git/zsh%E6%8F%92%E4%BB%B6%E4%B9%8Bgithub%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 15 Oct 2018 08:26:32 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/zsh%E6%8F%92%E4%BB%B6%E4%B9%8Bgithub%E4%BD%BF%E7%94%A8/</guid>
      <description>github插件 This plugin supports working with GitHub from the command line. It provides a few things: Sets up the hub wrapper and completions for the git command if you have hub installed. Completion for the github Ruby gem. Convenience functions for working with repos and URLs. Functions empty_gh - Creates a new empty repo (with a README.md) and pushes it to GitHub new_gh</description>
    </item>
    
    <item>
      <title>Android安装BusyBox</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/android%E5%AE%89%E8%A3%85busybox/</link>
      <pubDate>Mon, 15 Oct 2018 08:10:09 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/android%E5%AE%89%E8%A3%85busybox/</guid>
      <description>大家是否有过这样的经历，在命令行里输入adb shell，然后使用命令操作你的手机或模拟器，但是那些命令都是常见Linux命令的阉割缩水版，用</description>
    </item>
    
    <item>
      <title>Docker安装在android系统</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/docker%E5%AE%89%E8%A3%85%E5%9C%A8android%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 14 Oct 2018 23:47:06 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/docker%E5%AE%89%E8%A3%85%E5%9C%A8android%E7%B3%BB%E7%BB%9F/</guid>
      <description>Using Docker on Android - Stack Overflow Installing, running, using docker on armhf (ARMv7)devices</description>
    </item>
    
    <item>
      <title>package_json文件配置说明</title>
      <link>https://it-boyer.github.io/post/old/shell/package_json%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Sun, 14 Oct 2018 23:47:05 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/package_json%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</guid>
      <description>npm 与 package.json 快速入门教程 每个项目的根目录下一般都有一个package.json文件，定义项目所需要的各种模块，以及项目的配置信息。npm insta</description>
    </item>
    
    <item>
      <title>opkg在小米路由器的使用</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/opkg%E5%9C%A8%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 14 Oct 2018 23:27:01 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/opkg%E5%9C%A8%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github openwrt openwrt 759f111 width = 30% %} openwrt.io 小米路由器固件信息 路由器read-only file system怎么改权限 1 mount -o remount,rw / 新建配置 备份初始conf 1 mv /etc/opkg.conf /etc/opkg.conf.bak 开始配置 vim /etc/opkg.conf</description>
    </item>
    
    <item>
      <title>brew升级git版本</title>
      <link>https://it-boyer.github.io/post/old/git/brew%E5%8D%87%E7%BA%A7git%E7%89%88%E6%9C%AC/</link>
      <pubDate>Fri, 12 Oct 2018 19:56:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/brew%E5%8D%87%E7%BA%A7git%E7%89%88%E6%9C%AC/</guid>
      <description>1 2 3 4 $ brew doctor $ brew install git $ brew link --overwrite git Linking /usr/local/Cellar/git/2.19.1... 216 symlinks created</description>
    </item>
    
    <item>
      <title>zsh插件之gi使用说明</title>
      <link>https://it-boyer.github.io/post/old/git/zsh%E6%8F%92%E4%BB%B6%E4%B9%8Bgi%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Tue, 09 Oct 2018 12:04:55 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/zsh%E6%8F%92%E4%BB%B6%E4%B9%8Bgi%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>{% github joeblau gitignore.io a09921d width = 30% %} 配置zsh支持插件gi命令 先浏览oh-my-zsh/plugins目录下支持所有插件,找到gi命令的插件名称：gitign</description>
    </item>
    
    <item>
      <title>使用gem升级pod方法</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8gem%E5%8D%87%E7%BA%A7pod%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 06 Oct 2018 14:50:12 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8gem%E5%8D%87%E7%BA%A7pod%E6%96%B9%E6%B3%95/</guid>
      <description>升级cocopods 1 2 3 4 5 6 sudo gem update --system gem source -l pod setup pod repo update --verbose sudo gem install cocoapods --pre sudo gem cleanup gem source 1 2 3 4 $ gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/ $ gem sources -l https://gems.ruby-china.com # 确保只有 gems.ruby-china.com 腾讯云： https://gems.ruby-china.com/ 淘宝：h</description>
    </item>
    
    <item>
      <title>设置环境变量的profile与bash_profile区别</title>
      <link>https://it-boyer.github.io/post/old/shell/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84profile%E4%B8%8Ebash_profile%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 05 Oct 2018 09:32:44 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84profile%E4%B8%8Ebash_profile%E5%8C%BA%E5%88%AB/</guid>
      <description>profile文件 1.1 profile文件的作用 profile(/etc/profile)，用于设置系统级的环境变量和启动程序，在这个文件下配置</description>
    </item>
    
    <item>
      <title>vim一般模式下查找和替换命令</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 04 Oct 2018 23:48:08 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/vim%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4/</guid>
      <description>/,?查找命令 /word 向下查找word字符串 ?word向上查找word字符串 组合查找 n: 代表重复前一个查找的操作 N:反向进行前一个查找操作 s/old</description>
    </item>
    
    <item>
      <title>shell脚本路径和执行的路径区别</title>
      <link>https://it-boyer.github.io/post/old/shell/shell%E8%84%9A%E6%9C%AC%E8%B7%AF%E5%BE%84%E5%92%8C%E6%89%A7%E8%A1%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 04 Oct 2018 13:52:19 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/shell%E8%84%9A%E6%9C%AC%E8%B7%AF%E5%BE%84%E5%92%8C%E6%89%A7%E8%A1%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E5%8C%BA%E5%88%AB/</guid>
      <description>获取shell脚本文件的绝对路径 basepath=$(cd dirname $0; pwd) echo &amp;ldquo;sh脚本文件的绝对路径：$basepath&amp;rdquo; 当前执行脚本的路径 echo &amp;ldq</description>
    </item>
    
    <item>
      <title>Instrument使用Signposts工具</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/instrument%E4%BD%BF%E7%94%A8signposts%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 02 Oct 2018 23:19:55 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/instrument%E4%BD%BF%E7%94%A8signposts%E5%B7%A5%E5%85%B7/</guid>
      <description>引言 性能是实现卓越的用户体验的关键之一。当应用或者游戏表现的运行迅速，反应灵敏时，用户会更喜欢。但是软件是很复杂的，当你的应用视图做某事时，</description>
    </item>
    
    <item>
      <title>修改Mac用户名导致丢失管理员权限问题修复</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%BF%AE%E6%94%B9mac%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%BC%E8%87%B4%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</link>
      <pubDate>Tue, 25 Sep 2018 19:16:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%BF%AE%E6%94%B9mac%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%BC%E8%87%B4%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</guid>
      <description>出现的问题主要有两点 数据恢复问题 1）修改用户名后，mac系统认为是创建了一个新的用户，这时候，之前管理员账号的数据在当前用户的finder里</description>
    </item>
    
    <item>
      <title>在Codeanywhere上使用zsh终端及高亮样式</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%9C%A8codeanywhere%E4%B8%8A%E4%BD%BF%E7%94%A8zsh%E7%BB%88%E7%AB%AF%E5%8F%8A%E9%AB%98%E4%BA%AE%E6%A0%B7%E5%BC%8F/</link>
      <pubDate>Thu, 13 Sep 2018 11:25:14 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E5%9C%A8codeanywhere%E4%B8%8A%E4%BD%BF%E7%94%A8zsh%E7%BB%88%E7%AB%AF%E5%8F%8A%E9%AB%98%E4%BA%AE%E6%A0%B7%E5%BC%8F/</guid>
      <description>检查是否安装： 1 chsh 打印： 安装 Debian / Ubuntu 安装： 1 $ sudo apt-get install zsh zsh直接启动： 1 zsh 安装oh-my-zsh样式工具 在hexoDeploy项目根目录执行：</description>
    </item>
    
    <item>
      <title>zeroTier内网穿透</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/zerotier%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Wed, 05 Sep 2018 18:29:50 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/zerotier%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>LaunchPad打击垫学习</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/launchpad%E6%89%93%E5%87%BB%E5%9E%AB%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 05 Sep 2018 15:52:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/launchpad%E6%89%93%E5%87%BB%E5%9E%AB%E5%AD%A6%E4%B9%A0/</guid>
      <description>trello卡片 第二期：Chain的选择与设置/页数的映射 分轨和音频采样 音频轨道 拖拽音频文件或视频文件到Simple采样轨道中，视频格式会生</description>
    </item>
    
    <item>
      <title>使用LLDB独立调试APP</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8lldb%E7%8B%AC%E7%AB%8B%E8%B0%83%E8%AF%95app/</link>
      <pubDate>Wed, 05 Sep 2018 14:03:39 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8lldb%E7%8B%AC%E7%AB%8B%E8%B0%83%E8%AF%95app/</guid>
      <description>参考 lldb官方文档 苹果文档 LLDB调试器使用简介 南峰子译 调试：案例学习 系统翻译文章 Debugging iOS binaries with LLDB 高级LLDB调试 LLDB中使用python概览</description>
    </item>
    
    <item>
      <title>shadowrocket无需越狱重签翻墙</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/shadowrocket%E6%97%A0%E9%9C%80%E8%B6%8A%E7%8B%B1%E9%87%8D%E7%AD%BE%E7%BF%BB%E5%A2%99/</link>
      <pubDate>Wed, 05 Sep 2018 12:11:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/shadowrocket%E6%97%A0%E9%9C%80%E8%B6%8A%E7%8B%B1%E9%87%8D%E7%AD%BE%E7%BF%BB%E5%A2%99/</guid>
      <description>{% github it-boyer WCShadowrocket f101e23 width = 30% %} 一次讲透：IOS翻墙利器“小火箭（Shadowrocket）”上手、进阶、配合Workflow获取免费节点攻略 iOS版Sh</description>
    </item>
    
    <item>
      <title>Thisdeviceisnotcurrentlyonline</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/thisdeviceisnotcurrentlyonline/</link>
      <pubDate>Fri, 31 Aug 2018 16:58:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/thisdeviceisnotcurrentlyonline/</guid>
      <description>参考 you can restart your device! then connect your device to your mac-&amp;gt;open Xcode-&amp;gt;press command + i I&amp;rsquo;ve encountered this issue today. The record button is disabled and the tooltip says &amp;ldquo;This device is not currently online&amp;rdquo;. However my iPhone is connecting with my Mac and can be debugged with Xcode without any problem.</description>
    </item>
    
    <item>
      <title>使用Instruments的工具</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8instruments%E7%9A%84%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Fri, 31 Aug 2018 16:58:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8instruments%E7%9A%84%E5%B7%A5%E5%85%B7/</guid>
      <description>检测app内存爆增代码，优化性能 Instruments工具使用办法 整理Demo，列出几种常用instrument的场景。来熟悉具体操作 demo</description>
    </item>
    
    <item>
      <title>Chisel-LLDB命令插件</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/chisel-lldb%E5%91%BD%E4%BB%A4%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Fri, 31 Aug 2018 16:20:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/chisel-lldb%E5%91%BD%E4%BB%A4%E6%8F%92%E4%BB%B6/</guid>
      <description>{% github facebook chisel 56d0e0d width = 30% %} LLDB 是一个有着 REPL 的特性和 C++ ,Python 插件的开源调试器。LLDB 绑定在 Xcode 内部，存在于主窗口底部的控制台中。调试器允许你在程序运行的特定</description>
    </item>
    
    <item>
      <title>LLDB命令使用</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/lldb%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 31 Aug 2018 16:20:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/lldb%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github it-boyer width = 30% %} help 最简单命令是 help，它会列举出所有的命令。如果你忘记了一个命令是做什么的，或者想知道更多的话，你可以通过 help 来了解更多细节，</description>
    </item>
    
    <item>
      <title>解决Xcode代码高亮提示功能失效</title>
      <link>https://it-boyer.github.io/post/old/xcode/%E8%A7%A3%E5%86%B3xcode%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD%E5%A4%B1%E6%95%88/</link>
      <pubDate>Fri, 31 Aug 2018 16:20:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/%E8%A7%A3%E5%86%B3xcode%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD%E5%A4%B1%E6%95%88/</guid>
      <description>方法一 打开失效的项目，选择菜单：Xcode-&amp;gt;File-&amp;gt;Project Settings -&amp;gt; Advanced..， 删除图上所示的位置目录，重启x</description>
    </item>
    
    <item>
      <title>使用Safari浏览器调试WebView</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8safari%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B0%83%E8%AF%95webview/</link>
      <pubDate>Thu, 23 Aug 2018 13:34:25 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8safari%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B0%83%E8%AF%95webview/</guid>
      <description>{% github it-boyer width = 30% %} 使用RxSwift开发爬虫工具 设置真机 首先打开模拟器或者真机设置中&amp;quot;Safari浏览器&amp;quot;→&amp;quot;高级</description>
    </item>
    
    <item>
      <title>SwiftLint检查代码使用</title>
      <link>https://it-boyer.github.io/post/old/shell/swiftlint%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 21 Aug 2018 17:02:47 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/swiftlint%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github realm SwiftLint 8deb453 width = 30% %} 安装配置swiftlint语法矫正工具 安装包方式 brew install swiftlint 或下载[swiftlint.pkg][https://github.</description>
    </item>
    
    <item>
      <title>终端支持swift自动补齐</title>
      <link>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E6%94%AF%E6%8C%81swift%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90/</link>
      <pubDate>Tue, 21 Aug 2018 15:48:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E6%94%AF%E6%8C%81swift%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90/</guid>
      <description>终端支持swift自动补齐 keith/sourcekittendaemon.vim：这个插件提供了Vim集成SourceKittenDaem</description>
    </item>
    
    <item>
      <title>markdown-preview实现md预览</title>
      <link>https://it-boyer.github.io/post/old/shell/markdown-preview%E5%AE%9E%E7%8E%B0md%E9%A2%84%E8%A7%88/</link>
      <pubDate>Tue, 21 Aug 2018 10:40:31 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/markdown-preview%E5%AE%9E%E7%8E%B0md%E9%A2%84%E8%A7%88/</guid>
      <description>{% github iamcco markdown-preview.vim c09a1ca width = 30% %} nisha 命令行使用 1 2 3 4 5 MarkdownPreview &amp;#34; open preview window in markdown buffer MarkdownPreviewStop &amp;#34; close the preview window and server 插件运行效果预览</description>
    </item>
    
    <item>
      <title>iCompleteMe支持swift语法提示</title>
      <link>https://it-boyer.github.io/post/old/shell/icompleteme%E6%94%AF%E6%8C%81swift%E8%AF%AD%E6%B3%95%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Fri, 10 Aug 2018 16:40:19 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/icompleteme%E6%94%AF%E6%8C%81swift%E8%AF%AD%E6%B3%95%E6%8F%90%E7%A4%BA/</guid>
      <description>{% github jerrymarino iCompleteMe ad0e1fe width = 30% %} iCompleteMe是基于YouCompleteMe。在花了一年多的时间试图实现对YouCompleteMe的快速支持之</description>
    </item>
    
    <item>
      <title>SwiftPlayground命令操作</title>
      <link>https://it-boyer.github.io/post/old/shell/swiftplayground%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 10 Aug 2018 15:50:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/swiftplayground%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</guid>
      <description>{% github jerrymarino SwiftPlayground.vim f603700 width = 30% %} 执行环境 在playgrounds后缀的目录中执行swift文件 熟悉vim快捷键用法 空格 + fs 保存文件：此时插件会自动运行pl</description>
    </item>
    
    <item>
      <title>使用tag管理多个相关组件的版本发布</title>
      <link>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8tag%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83/</link>
      <pubDate>Wed, 20 Jun 2018 17:22:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8tag%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83/</guid>
      <description>tag标签自增新建脚本 1 2 3 4 5 6 #!/bin/sh tag=$(git describe --tags `git rev-list --tags --max-count=1`) version=${tag##*.} let &amp;#34;version+=1&amp;#34; newTag=${tag%.*}.${version} echo &amp;#39;Create New Tag &amp;#39;$newTag 修改tag版本号的方法 方法一：覆盖 已有v1.0.2.8要覆盖该版本 1 git tag</description>
    </item>
    
    <item>
      <title>使用curl命令管理远程github库</title>
      <link>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8curl%E5%91%BD%E4%BB%A4%E7%AE%A1%E7%90%86%E8%BF%9C%E7%A8%8Bgithub%E5%BA%93/</link>
      <pubDate>Wed, 20 Jun 2018 11:14:00 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8curl%E5%91%BD%E4%BB%A4%E7%AE%A1%E7%90%86%E8%BF%9C%E7%A8%8Bgithub%E5%BA%93/</guid>
      <description>使用curl命令管理远程github库 新建远程仓库 在本地准备工作 进入一个目录，这个目录是本地仓库的目录； 在本地建立仓库 1 git init &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m</description>
    </item>
    
    <item>
      <title>MacOS系统下运行exe小程序</title>
      <link>https://it-boyer.github.io/post/old/macos/macos%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BF%90%E8%A1%8Cexe%E5%B0%8F%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Tue, 19 Jun 2018 18:09:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/macos%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BF%90%E8%A1%8Cexe%E5%B0%8F%E7%A8%8B%E5%BA%8F/</guid>
      <description>场景 例如，当急需在Mac系统上，安装abletonLive，涉及到破解机exe小程序，使用文中提到的两种方法，就解了燃眉之急。 方法一 crossover Wra</description>
    </item>
    
    <item>
      <title>在GarageBand中使用LaunchPad</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E5%9C%A8garageband%E4%B8%AD%E4%BD%BF%E7%94%A8launchpad/</link>
      <pubDate>Tue, 19 Jun 2018 15:39:56 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E5%9C%A8garageband%E4%B8%AD%E4%BD%BF%E7%94%A8launchpad/</guid>
      <description>Garageband不支持控件表面，因此无法使用Launchpad/LaunchKey的全部功能。 在Garageband中，仅可以使用Lau</description>
    </item>
    
    <item>
      <title>AbletonLive10安装使用</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/abletonlive10%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 19 Jun 2018 14:23:13 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/abletonlive10%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid>
      <description>launchPad 设备官网 官方教程资源 官方工程试听资源支持下载 ableton live 软件 官网下载 中国社区 ABLETON LIVE 10.0.1 SUITE 破解版下载 WINDOWS &amp;amp; MAC ABLETON LIVE10.0.1破解机下载 下载 安装 {% post_path M</description>
    </item>
    
    <item>
      <title>LaunchPadMini说明书</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/launchpadmini%E8%AF%B4%E6%98%8E%E4%B9%A6/</link>
      <pubDate>Tue, 19 Jun 2018 14:23:13 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/launchpadmini%E8%AF%B4%E6%98%8E%E4%B9%A6/</guid>
      <description>工程demo 官方资源 Launchpad几种模式视频教程 硬件设置 贴纸：确保标签与相应的按钮对齐。 使用USB连接线将你的Launchpad Min</description>
    </item>
    
    <item>
      <title>Git如何永久删除文件(包括历史记录)</title>
      <link>https://it-boyer.github.io/post/old/git/git%E5%A6%82%E4%BD%95%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%8C%85%E6%8B%AC%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 11 Jun 2018 20:32:02 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/git%E5%A6%82%E4%BD%95%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%8C%85%E6%8B%AC%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid>
      <description>有些时候不小心上传了一些敏感文件(例如密码), 或者不想上传的文件(没及时或忘了加到.gitignore里的), 而且上传的文件又特别大的时候,</description>
    </item>
    
    <item>
      <title>在Mac安装Fiddler</title>
      <link>https://it-boyer.github.io/post/old/macos/%E5%9C%A8mac%E5%AE%89%E8%A3%85fiddler/</link>
      <pubDate>Thu, 31 May 2018 16:38:52 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E5%9C%A8mac%E5%AE%89%E8%A3%85fiddler/</guid>
      <description>安装Mono Mac下需要使用.Net编译后的程序，首先需要用到跨平台的方案Mono(现阶段微软已推出跨平台的方案.Net Core，不过暂时只</description>
    </item>
    
    <item>
      <title>&#43;0800格式转NSDate</title>
      <link>https://it-boyer.github.io/post/old/ios/&#43;0800%E6%A0%BC%E5%BC%8F%E8%BD%ACnsdate/</link>
      <pubDate>Wed, 30 May 2018 18:42:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/&#43;0800%E6%A0%BC%E5%BC%8F%E8%BD%ACnsdate/</guid>
      <description>1 2 3 4 NSString *timstr = [resData objectForKey:@&amp;#34;Data&amp;#34;]; timstr = [timstr stringByReplacingOccurrencesOfString:@&amp;#34;/Date(&amp;#34; withString:@&amp;#34;&amp;#34;]; timstr = [timstr stringByReplacingOccurrencesOfString:@&amp;#34;+0800)/&amp;#34; withString:@&amp;#34;&amp;#34;]; model.time = [NSDate dateWithTimeIntervalSince1970:timstr.longLongValue/1000];</description>
    </item>
    
    <item>
      <title>使用nvm或n管理node和npm版本</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8nvm%E6%88%96n%E7%AE%A1%E7%90%86node%E5%92%8Cnpm%E7%89%88%E6%9C%AC/</link>
      <pubDate>Tue, 29 May 2018 12:06:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8nvm%E6%88%96n%E7%AE%A1%E7%90%86node%E5%92%8Cnpm%E7%89%88%E6%9C%AC/</guid>
      <description>问题 1 2 3 Fatal error in , line 0 # Check failed: !value_obj-&amp;gt;IsJSReceiver() || value_obj-&amp;gt;IsTemplateInfo(). #FailureMessage Object: 0x7ffeefbf25c0[1] 22749 illegal hardware instruction he 参考Fatal error in ../deps/v8/src/api.cc, line 1197 when gulp watch,需要降级node版本。 nvm工具 nvm是node版</description>
    </item>
    
    <item>
      <title>终端实现预览plantuml的插件</title>
      <link>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E5%AE%9E%E7%8E%B0%E9%A2%84%E8%A7%88plantuml%E7%9A%84%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 29 May 2018 11:32:04 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E5%AE%9E%E7%8E%B0%E9%A2%84%E8%A7%88plantuml%E7%9A%84%E6%8F%92%E4%BB%B6/</guid>
      <description>{% github weirongxu plantuml-previewer.vim bf4b3e5 width = 30% %} 安装依赖 1 2 3 Plug &amp;#39;it-boyer/plantuml-syntax&amp;#39; &amp;#34;plantuml语法高亮 Plug &amp;#39;aklt/plantuml-syntax&amp;#39; Plug &amp;#39;tyru/open-browser.vim&amp;#39; Plug &amp;#39;weirongxu/plantuml-previewer.vim&amp;#39; &amp;#34;在线工具：http://sujoyu.githu</description>
    </item>
    
    <item>
      <title>汉字拼音排序方法</title>
      <link>https://it-boyer.github.io/post/old/ios/%E6%B1%89%E5%AD%97%E6%8B%BC%E9%9F%B3%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 17 May 2018 10:46:57 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E6%B1%89%E5%AD%97%E6%8B%BC%E9%9F%B3%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/</guid>
      <description>{% github it-boyer sortChinese 2deab8b width = 30% %} 方法一 实现模型对象排序，当万条数据时，出现卡顿问题。 方法二 实现字符串数组的排序，暂时没有验证大量排序情况，尝试优化第一种方</description>
    </item>
    
    <item>
      <title>Otherlinkerflags设置ld命令执行的参数</title>
      <link>https://it-boyer.github.io/post/old/xcode/otherlinkerflags%E8%AE%BE%E7%BD%AEld%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8F%82%E6%95%B0/</link>
      <pubDate>Wed, 11 Apr 2018 16:42:57 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/otherlinkerflags%E8%AE%BE%E7%BD%AEld%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8F%82%E6%95%B0/</guid>
      <description>Other linker flags设置的值实际上就是ld命令执行时后面所加的参数。 3个常用参数： -ObjC：加了这个参数后，链接器就会把静态库中所有的Objec</description>
    </item>
    
    <item>
      <title>当项目过大需要通过SSH方式Clone</title>
      <link>https://it-boyer.github.io/post/old/git/%E5%BD%93%E9%A1%B9%E7%9B%AE%E8%BF%87%E5%A4%A7%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87ssh%E6%96%B9%E5%BC%8Fclone/</link>
      <pubDate>Wed, 04 Apr 2018 17:44:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E5%BD%93%E9%A1%B9%E7%9B%AE%E8%BF%87%E5%A4%A7%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87ssh%E6%96%B9%E5%BC%8Fclone/</guid>
      <description>设置全局提交信息 1 2 git config --global user.email &amp;#34;you@example.com&amp;#34; git config --global user.name &amp;#34;Your Name&amp;#34; 修改最后一次提交的用户名信息 ``git git config user.name &amp;lsquo;wangz&amp;rsquo; git config user.email &amp;lsquo;wangz@alib.com&amp;rsquo; git commit &amp;ndash;amend &amp;ndash;author=wangz 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ### 项目过大问题</description>
    </item>
    
    <item>
      <title>隐藏导航条底部黑线</title>
      <link>https://it-boyer.github.io/post/old/ios/%E9%9A%90%E8%97%8F%E5%AF%BC%E8%88%AA%E6%9D%A1%E5%BA%95%E9%83%A8%E9%BB%91%E7%BA%BF/</link>
      <pubDate>Mon, 12 Mar 2018 13:51:07 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E9%9A%90%E8%97%8F%E5%AF%BC%E8%88%AA%E6%9D%A1%E5%BA%95%E9%83%A8%E9%BB%91%E7%BA%BF/</guid>
      <description>当需要导航条为透明色，与背景色一体时，需要去除底边线： 如下代码：使用空图片设置背景图，并指定bar的样式。 1 2 self.navigationController.navigationBar setBackgroundImage:[UIImage new] forBarMetrics:UIBarMetricsDefault]; self.navigationController.navigationBar.barStyle = UIBarStyleBlackTranslucent;</description>
    </item>
    
    <item>
      <title>MVVM介绍</title>
      <link>https://it-boyer.github.io/post/old/ios/mvvm%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 24 Sep 2017 19:26:28 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/mvvm%E4%BB%8B%E7%BB%8D/</guid>
      <description>MVVM 所以，MVVM 到底是什么？与其专注于说明 MVVM 的来历，不如让我们看一个典型的 iOS 是如何构建的，并从那里了解 MVVM： 我们看到的是一个典型的 MVC 设置</description>
    </item>
    
    <item>
      <title>线程安全类的设计</title>
      <link>https://it-boyer.github.io/post/old/ios/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%B1%BB%E7%9A%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 24 Sep 2017 19:06:03 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%B1%BB%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>这篇文章将专注于实用技巧，设计模式，以及对于写出线程安全类和使用 GCD 来说所特别需要注意的一些反面模式。 线程安全 Apple 的框架 首先让我们来看看 Apple 的框架</description>
    </item>
    
    <item>
      <title>支持OSX浏览PDF简单视图</title>
      <link>https://it-boyer.github.io/post/old/macos/%E6%94%AF%E6%8C%81osx%E6%B5%8F%E8%A7%88pdf%E7%AE%80%E5%8D%95%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Fri, 08 Sep 2017 18:48:43 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E6%94%AF%E6%8C%81osx%E6%B5%8F%E8%A7%88pdf%E7%AE%80%E5%8D%95%E8%A7%86%E5%9B%BE/</guid>
      <description>运行scheme： PDFReaderForOSX 即可 {% github it-boyer PDFReader 737a7e %} 支持iOS pageViewController: pdf翻页效果视图控制器 startingViewController:DataViewCon</description>
    </item>
    
    <item>
      <title>在space-vim平台安装若干插件</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%9C%A8space-vim%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%E8%8B%A5%E5%B9%B2%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Thu, 17 Aug 2017 14:26:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E5%9C%A8space-vim%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%E8%8B%A5%E5%B9%B2%E6%8F%92%E4%BB%B6/</guid>
      <description>space-vim 首次启用一个 layer，需要执行 SPC f R, 或者 :so $MYVIMRC, 重新加载 .vimrc 并执行 :PlugInstall 安装所需的相关插件 。或者退出重新打开 vim, vim-plug 将会检测并自动安装缺失的插件。 基于</description>
    </item>
    
    <item>
      <title>vim编辑器键盘映射命令map</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%91%BD%E4%BB%A4map/</link>
      <pubDate>Tue, 04 Jul 2017 15:06:52 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%91%BD%E4%BB%A4map/</guid>
      <description>使用:map命令，可以将键盘上的某个按键与Vim的命令绑定起来。 例如使用以下命令，可以通过F5键将单词用花括号括起来： 1 :map &amp;lt;F5&amp;gt; i{e&amp;lt;Esc&amp;gt;a}&amp;lt;Esc&amp;gt; 执行过程：i{</description>
    </item>
    
    <item>
      <title>vim编辑器的基本用法</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 04 Jul 2017 10:09:29 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>参考 基本操作 基本概念 动作：是指移动光标的操作，你肯定很熟悉 h、j、k 和 l，以及 w 和 b。但其实，/ 也是一个动作。 1 :h navigation 操作符： 对某个区域文本执</description>
    </item>
    
    <item>
      <title>SourceKittenSwift语法自动补齐工具</title>
      <link>https://it-boyer.github.io/post/old/shell/sourcekittenswift%E8%AF%AD%E6%B3%95%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 29 Jun 2017 10:08:50 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/sourcekittenswift%E8%AF%AD%E6%B3%95%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90%E5%B7%A5%E5%85%B7/</guid>
      <description>vim插件工具：Vundle 主题色： |组合键 | Description| 空格 + T + n| 随机切换颜色主题。 SPC T s |使用unite buffer方式切换一个主题 插件 Unite 预定义</description>
    </item>
    
    <item>
      <title>shell命令处理字符串</title>
      <link>https://it-boyer.github.io/post/old/shell/shell%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Fri, 23 Jun 2017 10:32:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/shell%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>截取字符串 %+字符+正则表达式 删除字符及右边内容，从源字符串右边开始匹配 % 单井号表示一旦匹配成功立即删除 %% 双井号表示一直等相匹配到最后一个字</description>
    </item>
    
    <item>
      <title>mupdf使用说明</title>
      <link>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/mupdf%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 19 Jun 2017 18:25:32 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/mupdf%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>需求描述 目前手机端使用mupdf，通过在底层添加加密方法实现定制pbb阅读器功能。 资源获取如下： {% blockquote %} Download packages of the latest release for your system: Source code for all platforms. Windows viewer and tools. Android</description>
    </item>
    
    <item>
      <title>WacomSlate笔记本使用</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/wacomslate%E7%AC%94%E8%AE%B0%E6%9C%AC%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 03 Jun 2017 23:32:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/wacomslate%E7%AC%94%E8%AE%B0%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid>
      <description>使用场景 梳理任务列表，整理阅读笔记和思维导图，来配合iPad完成每日工作任务 使用效率 按时出图，分解任务，规划职业 带来的回报 Starter.playgroundbook iPad学习开发</description>
    </item>
    
    <item>
      <title>麦步第一天体验</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E9%BA%A6%E6%AD%A5%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Fri, 02 Jun 2017 14:39:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E9%BA%A6%E6%AD%A5%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%BD%93%E9%AA%8C/</guid>
      <description>开源 开发文档 gitHub源码库 效率 可用功能 滴答清单，同步神速，可以使用麦步来标记完成任务 表盘：纯黑背景比较适合，内置白底表盘无法卸载 工具：计</description>
    </item>
    
    <item>
      <title>calibre一站式电子书解决方案</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/calibre%E4%B8%80%E7%AB%99%E5%BC%8F%E7%94%B5%E5%AD%90%E4%B9%A6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 25 May 2017 14:26:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/calibre%E4%B8%80%E7%AB%99%E5%BC%8F%E7%94%B5%E5%AD%90%E4%B9%A6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>Calibre，是一个免费的开源的“一站式”的电子书解决方案，它可以全面满足你的电子书需求。Calibre 是免费的，源代码开放，拥有跨平台的</description>
    </item>
    
    <item>
      <title>Xcode8插件制作替代Alcatraz</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode8%E6%8F%92%E4%BB%B6%E5%88%B6%E4%BD%9C%E6%9B%BF%E4%BB%A3alcatraz/</link>
      <pubDate>Mon, 15 May 2017 14:09:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode8%E6%8F%92%E4%BB%B6%E5%88%B6%E4%BD%9C%E6%9B%BF%E4%BB%A3alcatraz/</guid>
      <description>背景 Xcode7插件工具Alcatraz 开发者可以在Xcode运行的时候通过注入代码去实现插件的功能。插件可以在一个Alcatraz这个优秀</description>
    </item>
    
    <item>
      <title>从UIKit到AppKit</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%BB%8Euikit%E5%88%B0appkit/</link>
      <pubDate>Fri, 03 Mar 2017 17:55:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%BB%8Euikit%E5%88%B0appkit/</guid>
      <description>不同点 NSWindowController 在Mac上应用都支持多窗口（NSWindowController），AppKit 中都有 NSWindowController担当着类似</description>
    </item>
    
    <item>
      <title>更改设备屏幕上显示的应用程序图标下方的名称</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/%E6%9B%B4%E6%94%B9%E8%AE%BE%E5%A4%87%E5%B1%8F%E5%B9%95%E4%B8%8A%E6%98%BE%E7%A4%BA%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87%E4%B8%8B%E6%96%B9%E7%9A%84%E5%90%8D%E7%A7%B0/</link>
      <pubDate>Fri, 24 Feb 2017 14:23:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/%E6%9B%B4%E6%94%B9%E8%AE%BE%E5%A4%87%E5%B1%8F%E5%B9%95%E4%B8%8A%E6%98%BE%E7%A4%BA%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87%E4%B8%8B%E6%96%B9%E7%9A%84%E5%90%8D%E7%A7%B0/</guid>
      <description>修改APP启动图标上的名称，需配置Info.plist文件，增加CFBundleDisplayName属性键值对。 进入到如下界面： 在Info</description>
    </item>
    
    <item>
      <title>macOS支持JavaScript自动化组件基础</title>
      <link>https://it-boyer.github.io/post/old/macos/macos%E6%94%AF%E6%8C%81javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 15 Feb 2017 17:19:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/macos%E6%94%AF%E6%8C%81javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</guid>
      <description>苹果 OS X Yosemite系统把 JavaScript作为 AppleScript的另一选择。Automation 是 OS X 10.10版本中的新特性，</description>
    </item>
    
    <item>
      <title>通过沙盒中JS脚本访问其他APP</title>
      <link>https://it-boyer.github.io/post/old/macos/%E9%80%9A%E8%BF%87%E6%B2%99%E7%9B%92%E4%B8%ADjs%E8%84%9A%E6%9C%AC%E8%AE%BF%E9%97%AE%E5%85%B6%E4%BB%96app/</link>
      <pubDate>Tue, 14 Feb 2017 18:25:29 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E9%80%9A%E8%BF%87%E6%B2%99%E7%9B%92%E4%B8%ADjs%E8%84%9A%E6%9C%AC%E8%AE%BF%E9%97%AE%E5%85%B6%E4%BB%96app/</guid>
      <description>如何使用脚本字典里的命令和对象来与其他的应用进行通讯? 这个教程将向您展示现在使用 AppleScript 来控制别的应用的最佳方式。我也会告诉您一些小技巧以帮助您和</description>
    </item>
    
    <item>
      <title>Fabric对macOS系统的支持</title>
      <link>https://it-boyer.github.io/post/old/macos/fabric%E5%AF%B9macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%94%AF%E6%8C%81%E8%B0%83%E7%A0%94/</link>
      <pubDate>Tue, 14 Feb 2017 11:14:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/fabric%E5%AF%B9macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%94%AF%E6%8C%81%E8%B0%83%E7%A0%94/</guid>
      <description>Fabric Fabric 是Twitter的移动应用开发平台，一个模块化、跨平台的移动开发套件，该博文主要研究crashlytics在app中的运用。 注册新的账户</description>
    </item>
    
    <item>
      <title>Java​Script​Core实现swift混编</title>
      <link>https://it-boyer.github.io/post/old/swift/javascriptcore%E5%AE%9E%E7%8E%B0swift%E6%B7%B7%E7%BC%96/</link>
      <pubDate>Sun, 12 Feb 2017 13:34:06 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/javascriptcore%E5%AE%9E%E7%8E%B0swift%E6%B7%B7%E7%BC%96/</guid>
      <description>OS X Mavericks 和 iOS 7 引入了 JavaScriptCore 库，它把 WebKit 的 JavaScript 引擎用 Objective-C 封装，提供了简单，快速以及安全的方式接入世界上最流行的语言。不管你爱它还是恨它，JavaScrip</description>
    </item>
    
    <item>
      <title>用Git将代码恢复到一个历史的版本</title>
      <link>https://it-boyer.github.io/post/old/git/%E7%94%A8git%E5%B0%86%E4%BB%A3%E7%A0%81%E6%81%A2%E5%A4%8D%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8E%86%E5%8F%B2%E7%9A%84%E7%89%88%E6%9C%AC/</link>
      <pubDate>Fri, 10 Feb 2017 18:19:48 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E7%94%A8git%E5%B0%86%E4%BB%A3%E7%A0%81%E6%81%A2%E5%A4%8D%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8E%86%E5%8F%B2%E7%9A%84%E7%89%88%E6%9C%AC/</guid>
      <description>经历：将代码全提交到默认的head分支中，切换分支后，无法找到分支的严重后果： 目的：在当前分支上，将代码恢复到一个历史的提交版本上。 暴力的方</description>
    </item>
    
    <item>
      <title>bilibiliForMac版之mpv依赖编译</title>
      <link>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/bilibili%E4%B9%8Bmac%E7%89%88ffmpeg%E4%BE%9D%E8%B5%96%E7%BC%96%E8%AF%91/</link>
      <pubDate>Fri, 10 Feb 2017 10:45:03 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/bilibili%E4%B9%8Bmac%E7%89%88ffmpeg%E4%BE%9D%E8%B5%96%E7%BC%96%E8%AF%91/</guid>
      <description>Bilibili Mac Client 一款基于mpv和ffmpeg底层库实现的播放器. 项目依赖库 编译在项目中所需的相关依赖库 下载资源 下载mpv-build {% codeblock lang:git %} git clone https://github.com/mpv-player/mpv-build.git {% endcodeblock</description>
    </item>
    
    <item>
      <title>Crash文件分析方法</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/crash%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 07 Feb 2017 12:38:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/crash%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/</guid>
      <description>第一步：在任意目录创建调试crash的目录 第二步：将之前Archive的文件copy到crash目录里面,其中包括两个文件.app和.app</description>
    </item>
    
    <item>
      <title>开发Mac上的App插件</title>
      <link>https://it-boyer.github.io/post/old/macos/%E5%BC%80%E5%8F%91mac%E4%B8%8A%E7%9A%84app%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 07 Feb 2017 12:38:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E5%BC%80%E5%8F%91mac%E4%B8%8A%E7%9A%84app%E6%8F%92%E4%BB%B6/</guid>
      <description>在以前的 OS X 系统中，给你的 App 在运行时动态载入可执行代码比较困难。现在可以通过NSBundle和 plug-ins插件,可以很方便的向原有APP</description>
    </item>
    
    <item>
      <title>Kindle114 资源集[转]</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/kindle%E8%B5%84%E6%BA%90/</link>
      <pubDate>Mon, 23 Jan 2017 12:49:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/kindle%E8%B5%84%E6%BA%90/</guid>
      <description>鸣谢 hi-pda dtgc Kindle115 综合类 青风乘翼 最近出版的译著 更新中 周旋久 按字母排列的书籍 提取码：djhp F、H、J、R字母 提取码 39bd S、T、Y字母 提取码 42b1 烫伤关东煮</description>
    </item>
    
    <item>
      <title>Kindle之ResilioSync索引</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/kindle%E4%B9%8Bresiliosync%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Mon, 23 Jan 2017 12:49:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/kindle%E4%B9%8Bresiliosync%E7%B4%A2%E5%BC%95/</guid>
      <description>Kindle伴侣精品书库 Kindle伴原文 Resilio Sync同步密钥 {% codeblock lang:basnh %} BOC3NIGPF2DOKETOF2FAHXJXE2HF24QWC {% endcodeblock %} 精品书库 精品库 {% iframe https://kindlefere.github.io/share/ebook/ 800 400 %} 每周一书 每周一书 {% iframe https://kindlefere.github.io/share/weekly/index.html 800 400 %} 国外书籍 国</description>
    </item>
    
    <item>
      <title>迁移SVN库到git库保留branchs和tags</title>
      <link>https://it-boyer.github.io/post/old/git/%E8%BF%81%E7%A7%BBsvn%E5%BA%93%E5%88%B0git%E5%BA%93%E4%BF%9D%E7%95%99branchs%E5%92%8Ctags/</link>
      <pubDate>Wed, 18 Jan 2017 12:21:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E8%BF%81%E7%A7%BBsvn%E5%BA%93%E5%88%B0git%E5%BA%93%E4%BF%9D%E7%95%99branchs%E5%92%8Ctags/</guid>
      <description>SVN was a great advance in its day, but it’s now clear that distributed version control systems are the way forward and that Git is the de facto standard. Having helped many clients migrate from SVN to Git, here are my notes for a pain-free transition that will preserve the tags and branches in your SVN repository. 首先导入一个本地存储</description>
    </item>
    
    <item>
      <title>在OC和swift中区分多个targets</title>
      <link>https://it-boyer.github.io/post/old/ios/%E5%9C%A8oc%E5%92%8Cswift%E4%B8%AD%E5%8C%BA%E5%88%86%E5%A4%9A%E4%B8%AAtargets/</link>
      <pubDate>Wed, 11 Jan 2017 13:49:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E5%9C%A8oc%E5%92%8Cswift%E4%B8%AD%E5%8C%BA%E5%88%86%E5%A4%9A%E4%B8%AAtargets/</guid>
      <description>build setting预编译位置 Preprocessor Macros Other Swift Flags 为生产和开发target配置预处理宏/编译器标识。之后我们就可以使用该标识在我们的代码来检测应用程序正在</description>
    </item>
    
    <item>
      <title>GTD任务清单整理技巧</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/gtd%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95%E6%95%B4%E7%90%86%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 07 Jan 2016 16:00:53 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/gtd%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95%E6%95%B4%E7%90%86%E6%8A%80%E5%B7%A7/</guid>
      <description>什么是GTD？ GTD 的基本理论是把一个人所要要完成的任务和事件全部从大脑中移出来，记录到纸上。这样，大脑便会不被多余的事情打搅而集中于现在所需完</description>
    </item>
    
    <item>
      <title>git svn桥接命令的基础</title>
      <link>https://it-boyer.github.io/post/old/git/gitsvn%E6%A1%A5%E6%8E%A5%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 05 Jan 2016 14:18:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/gitsvn%E6%A1%A5%E6%8E%A5%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E7%A1%80/</guid>
      <description>git svn 通过几个简单的工作流程了解到git svn常见命令： 值得警戒的是，在使用 git svn 的时候，你实际是在与 Subversion 交互，Git 比它要高级复杂的多。尽管可以</description>
    </item>
    
    <item>
      <title>OC与swift相互调用</title>
      <link>https://it-boyer.github.io/post/old/swift/oc%E4%B8%8Eswift%E7%9B%B8%E4%BA%92%E8%B0%83%E7%94%A8/</link>
      <pubDate>Tue, 01 Dec 2015 11:42:18 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/oc%E4%B8%8Eswift%E7%9B%B8%E4%BA%92%E8%B0%83%E7%94%A8/</guid>
      <description>Swift中使用OC的类声明 &amp;ndash; 实现配置 桥接的头文件 方式一：自动添加桥接头文件 在一个全新的Swift，利用第一次新建提示的方式自动添加桥接头文</description>
    </item>
    
    <item>
      <title>UIImage的渲染模式</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/uiimage%E7%9A%84%E6%B8%B2%E6%9F%93%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 26 Nov 2015 16:15:11 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/uiimage%E7%9A%84%E6%B8%B2%E6%9F%93%E6%A8%A1%E5%BC%8F/</guid>
      <description>设置UIImage的渲染模式：UIImage.renderingMode 在 iOS 7 中 UIImage 添加了一个 renderingMode 属性。我们可以使用 imageWithRende</description>
    </item>
    
    <item>
      <title>使用SmartSVN创建版本库</title>
      <link>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8smartsvn%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93/</link>
      <pubDate>Mon, 05 Oct 2015 19:16:47 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8smartsvn%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93/</guid>
      <description>&lt;p&gt;SmartSVN有以下版本：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SmartSVN enterprise 9 企业版&lt;/li&gt;
&lt;li&gt;SmartSVN foundation 8 基础版&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于企业版只能建立本地的版本库，无法创建&amp;amp;使用svn://localhost方式。&lt;/p&gt;
&lt;h4 id=&#34;用基础版来说明创建版本库&#34;&gt;用基础版来说明创建版本库。&lt;/h4&gt;
&lt;p&gt;参考：&lt;a href=&#34;http://hammadk.com/how-to-create-repository-in-smartsvn-tutorial/&#34;&gt;Create Repository in SmartSVN – Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启动SmartSVN SmartSVN foundation 8 基础版&lt;/li&gt;
&lt;li&gt;菜单栏Project-&amp;gt; set up Local Repository&amp;hellip;   &lt;br&gt;
需要设置如下两个参数：&lt;br&gt;
3. svnadmin 在终端执行： whereis svnadmin&lt;br&gt;
4. svnserve 在终端执行： whereis svnserve&lt;br&gt;
￼&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/adeb039a-b429-481a-ac25-2044b871e45e/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;li&gt;指定版本库的目录位置：&lt;br&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/a3f00903-101c-4848-a10a-3479643baea7/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;li&gt;初始化账户密码：&lt;br&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/140f257e-e452-47ea-8317-34a5ed8d6c7f/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;li&gt;完成。&lt;br&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/ed975623-72bb-4132-8d04-ac9a7b1d2fc9/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/53306789-9d97-485c-a54d-a143e7b078f1/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Mac安装gitLab服务器</title>
      <link>https://it-boyer.github.io/post/old/git/mac%E5%AE%89%E8%A3%85gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Sun, 27 Sep 2015 19:25:38 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/mac%E5%AE%89%E8%A3%85gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>必要配置 *创建一个名称为&amp;quot;gitlab&amp;quot;管理员用户，然后再创建一个名称为&amp;quot;gitlab&amp;quot;的群组 *开启</description>
    </item>
    
    <item>
      <title>小米路由常用操作</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 25 Sep 2015 23:59:16 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;h4 id=&#34;常用命令&#34;&gt;常用命令&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ssh登录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 局域网登录:
 ssh [user@]hostname [command]
  例如：ssh root@192.168.31.1  或  远程登录：ssh root@222.35.145.28 -p 2195
 回车
 输入密码

 **修改密码：**
 root@xiaoqiang:~#passwd   
 回车
 输入新密码
 回车
 再次输入新密码
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;远程拷贝数据&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; scp Desktop/ar71xx/* root@192.168.31.1:/userdisk/myWorkspace/ar71xx
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每次重启路由获取IP:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; vi /etc/rc.local
 sh /etc/getIP.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;//启动后，等待20秒，然后，获取当前时间作为文件名称
//使用ifconfig 获取路由器的ip信息
//使用 | grep 通道，和grep正则来过滤出，wan口的ip所在行
// &amp;gt; 使用重定向，将过滤的ip行，写入路由硬盘/userdisk/data/my/ip目录中
//通过小米路由手机客户端，找到该txt文件，并下载到手机sd卡中
//查看该文件，既有路由重启后的当前IP&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Xcode7编译发布问题</title>
      <link>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/xcode7%E7%BC%96%E8%AF%91%E5%8F%91%E5%B8%83%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 25 Sep 2015 15:58:17 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/xcode7%E7%BC%96%E8%AF%91%E5%8F%91%E5%B8%83%E9%97%AE%E9%A2%98/</guid>
      <description>Xcode7编译发布问题 ERROR ITMS-90535: &amp;ldquo;Unexpected CFBundleExecutable Key. The bundle at &amp;lsquo;Payload/PBBReader.app/TencentOpenApi_IOS_Bundle.bundle&amp;rsquo; does not contain a bundle executable. If this bundle intentionally does not contain an executable, consider removing the CFBundleExecutable key from its Info.plist and using a CFBundlePackageType of BNDL. If this bundle is part of a third-party framework, consider contacting the developer of the framework for an update to</description>
    </item>
    
    <item>
      <title>快速正确的安装Ruby,Rails运行环境</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%BF%AB%E9%80%9F%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%89%E8%A3%85rubyrails%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 21 Jan 2015 23:00:39 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E5%BF%AB%E9%80%9F%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%89%E8%A3%85rubyrails%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</guid>
      <description>&lt;p&gt;安装ruby环境：
方法一：下载源码，编译安装：&lt;a href=&#34;http://fsjoy.blog.51cto.com/318484/115045/&#34;&gt;配置中制定安装目录&lt;/a&gt;&lt;br&gt;
方法二：使用rvm安装：&lt;a href=&#34;https://ruby-china.org/wiki/rvm-guide&#34;&gt;可以提供一个便捷的多版本 Ruby 环境的管理和切换&lt;/a&gt;&lt;br&gt;
方法三：使用macport安装 &lt;code&gt;port install ruby&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ruby-china.org/wiki/install_ruby_guide&#34;&gt;详细教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;br&gt;
&lt;code&gt;ERROR: While executing gem ... (Errno::EPERM) Operation not permitted - /usr/bin/rake&lt;/code&gt;
&lt;a href=&#34;http://stackoverflow.com/questions/30812777/cannot-install-cocoa-pods-after-uninstalling-results-in-error/30851030#30851030&#34;&gt;stackoverflow方法&lt;/a&gt;测试结果没走通。&lt;br&gt;
最终通过&lt;a href=&#34;http://tadaland.com/os-x-rootless.html&#34;&gt;OS X 10.11中Rootless的实现与解释以及关闭方法&lt;/a&gt;解决.&lt;/p&gt;
&lt;h4 id=&#34;gem介绍&#34;&gt;Gem介绍&lt;/h4&gt;
&lt;p&gt;Gem是一个ruby库和程序的标准包，它通过RubyGem来定位、安装、升级和卸载，非常的便捷。&lt;/p&gt;
&lt;p&gt;Ruby 1.9.2版本默认安装RubyGem，如果你使用其它版本，请参考如何安装RubyGem。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>代码实现AutoLayout相关特性</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0autolayout%E7%9B%B8%E5%85%B3%E7%89%B9%E6%80%A7/</link>
      <pubDate>Tue, 02 Sep 2014 15:53:11 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0autolayout%E7%9B%B8%E5%85%B3%E7%89%B9%E6%80%A7/</guid>
      <description>&lt;h2 id=&#34;按比例缩放&#34;&gt;按比例缩放&lt;/h2&gt;
&lt;p&gt;按比例缩放，这是在Interface Builder中无法设置的内容。&lt;br&gt;
而在代码中，有如下两种实现方式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;NSLayoutConstraint&lt;/code&gt;类型的初始化函数中的&lt;code&gt;multiplier&lt;/code&gt;参数就可以非常简单的设置按比例缩放。&lt;/li&gt;
&lt;li&gt;同时也可以设置不同&lt;code&gt;NSLayoutAttribute&lt;/code&gt;参数来达到意想不到的效果，比如“A的Width等于B的Height的2倍”这样的效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在就拿一个简单的**&lt;code&gt;UIButton&lt;/code&gt;**做示例，在ViewController中创建一个UIButton字段：&lt;br&gt;
{%codeblock lang:objc%}
UIButton *btn;&lt;br&gt;
{%endcodeblock%}&lt;/p&gt;
&lt;h4 id=&#34;需求-1&#34;&gt;需求 1：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;要求**&lt;code&gt;UIButton&lt;/code&gt;**水平居中，始终距离父View底部**20**单位，其高度是父View高度的三分之一。&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;KVO&lt;/strong&gt;来监控**&lt;code&gt;UIButton&lt;/code&gt;**的大小并实时输出到屏幕上。&lt;br&gt;
{%codeblock lang:objc%}&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(void)viewDidLoad
{
[super viewDidLoad];&lt;/p&gt;
&lt;p&gt;//创建UIButton，不需要设置frame
btn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
[btn setTitle:@&amp;ldquo;mgen&amp;rdquo; forState:UIControlStateNormal];
btn.backgroundColor = [UIColor greenColor];
[self.view addSubview:btn];&lt;/p&gt;
&lt;p&gt;//禁止自动转换AutoresizingMask
btn.translatesAutoresizingMaskIntoConstraints = NO;&lt;/p&gt;
&lt;p&gt;//居中
[self.view addConstraint:[NSLayoutConstraint
constraintWithItem:btn
attribute:NSLayoutAttributeCenterX
relatedBy:NSLayoutRelationEqual
toItem:self.view
attribute:NSLayoutAttributeCenterX
multiplier:1
constant:0]];&lt;/p&gt;
&lt;p&gt;//距离底部20单位
//注意NSLayoutConstraint创建的constant是加在toItem参数的，所以需要-20。
[self.view addConstraint:[NSLayoutConstraint
constraintWithItem:btn
attribute:NSLayoutAttributeBottom
relatedBy:NSLayoutRelationEqual
toItem:self.view
attribute:NSLayoutAttributeBottom
multiplier:1
constant:-20]];&lt;/p&gt;
&lt;p&gt;//定义高度是父View的三分之一
[self.view addConstraint:[NSLayoutConstraint
constraintWithItem:btn
attribute:NSLayoutAttributeHeight
relatedBy:NSLayoutRelationEqual
toItem:self.view
attribute:NSLayoutAttributeHeight
multiplier:0.3
constant:0]];&lt;/p&gt;
&lt;p&gt;//注册KVO方法
[btn addObserver:self forKeyPath:@&amp;ldquo;bounds&amp;rdquo; options:NSKeyValueObservingOptionNew | NSKeyValueObservingOptionInitial context:nil]; &lt;br&gt;
}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>instrument之Zombie工具</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/instrument%E4%B9%8Bzombie%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 01 Jul 2014 19:54:02 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/instrument%E4%B9%8Bzombie%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;Zombie:针对&lt;strong&gt;僵尸对象&lt;/strong&gt;导致应用程序崩溃，即已经&lt;code&gt;deallocated&lt;/code&gt;的对象，它们的&lt;code&gt;retainCount&lt;/code&gt;计数器已经为0，通过正常的手段是无法在&lt;code&gt;debug&lt;/code&gt;中跟踪和观察到的。&lt;/p&gt;
&lt;p&gt;如果你开启了 &lt;code&gt;Zombie Enabled&lt;/code&gt; ，则当 Zombie 问题出现时，控制台会输出 Zombie 对象的地址，且程序会在此处产生断点：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; -[CALayer retainCount]: message sent to deallocated instance &amp;lt;memoryaddress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>在IOS中像SnapChat一样监控screenshots</title>
      <link>https://it-boyer.github.io/post/old/ios/%E5%9C%A8ios%E4%B8%AD%E5%83%8Fsnapchat%E4%B8%80%E6%A0%B7%E7%9B%91%E6%8E%A7screenshots/</link>
      <pubDate>Tue, 10 Jun 2014 18:45:37 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E5%9C%A8ios%E4%B8%AD%E5%83%8Fsnapchat%E4%B8%80%E6%A0%B7%E7%9B%91%E6%8E%A7screenshots/</guid>
      <description>A number of Stack Overflowquestions were having issues with this, so I figured I’d explain. From reverse engineering, this is the exact method used by SnapChat, but it’s also pretty much what I’d have done myself. The process is pretty simple, and relies on a quirk of iOS: taking a screenshot cancels all touches on the screen. Because of that, anything that you</description>
    </item>
    
    <item>
      <title>IOS7截屏问题</title>
      <link>https://it-boyer.github.io/post/old/ios/ios7%E6%88%AA%E5%B1%8F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 10 Jun 2014 18:29:31 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ios7%E6%88%AA%E5%B1%8F%E9%97%AE%E9%A2%98/</guid>
      <description>iOS 7截图最新变化: 不再影响用户其他操作 在 iOS 7 中，截图动作已经发生了变化，就如苹果在版本说明中描述的那样：用户截图时，有效点击不会再失效了。这</description>
    </item>
    
  </channel>
</rss>
