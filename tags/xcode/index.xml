<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xcode on 习七</title>
    <link>https://it-boyer.github.io/tags/xcode/</link>
    <description>Recent content in xcode on 习七</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 19 Jul 2020 21:31:04 +0800</lastBuildDate><atom:link href="https://it-boyer.github.io/tags/xcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Xcode 快捷键使用</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 19 Jul 2020 21:31:04 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;TODO&amp;rdquo; [2020-05-16 六 20:45] State &amp;ldquo;TODO&amp;rdquo; from &amp;ldquo;DONE&amp;rdquo; [2020-05-16 六 20:45] State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;CANCEL&amp;rdquo; [2020-03-07 六 10:21] 新建 Tab 页： command + t 关闭 tab 页： command + w 左右切换 tab 页： shift + command + [ 或 ] 预览所有 tab 页： shift + command + \ 选中激活 tab 页：</description>
    </item>
    
    <item>
      <title>自定义Xcode支持Vim快捷键</title>
      <link>https://it-boyer.github.io/post/old/xcode/%E8%87%AA%E5%AE%9A%E4%B9%89xcode%E6%94%AF%E6%8C%81vim%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Thu, 20 Sep 2018 21:12:51 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/%E8%87%AA%E5%AE%9A%E4%B9%89xcode%E6%94%AF%E6%8C%81vim%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>使用了Vim之后，被其强大的文本编辑能力吸引, 于是每天都在寻找 Vim 插件, 试图用 Vim 代替 Xcode 进行日常开发. 直到有一天突然发现, 我想要的就是一个拥有强</description>
    </item>
    
    <item>
      <title>解决Xcode代码高亮提示功能失效</title>
      <link>https://it-boyer.github.io/post/old/xcode/%E8%A7%A3%E5%86%B3xcode%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD%E5%A4%B1%E6%95%88/</link>
      <pubDate>Fri, 31 Aug 2018 16:20:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/%E8%A7%A3%E5%86%B3xcode%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD%E5%A4%B1%E6%95%88/</guid>
      <description>方法一 打开失效的项目，选择菜单：Xcode-&amp;gt;File-&amp;gt;Project Settings -&amp;gt; Advanced..， 删除图上所示的位置目录，重启x</description>
    </item>
    
    <item>
      <title>Otherlinkerflags设置ld命令执行的参数</title>
      <link>https://it-boyer.github.io/post/old/xcode/otherlinkerflags%E8%AE%BE%E7%BD%AEld%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8F%82%E6%95%B0/</link>
      <pubDate>Wed, 11 Apr 2018 16:42:57 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/otherlinkerflags%E8%AE%BE%E7%BD%AEld%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8F%82%E6%95%B0/</guid>
      <description>Other linker flags设置的值实际上就是ld命令执行时后面所加的参数。 3个常用参数： -ObjC：加了这个参数后，链接器就会把静态库中所有的Objec</description>
    </item>
    
    <item>
      <title>Xcode8中SB适配横竖屏按钮VaryforTraits</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode8%E4%B8%ADsb%E9%80%82%E9%85%8D%E6%A8%AA%E7%AB%96%E5%B1%8F%E6%8C%89%E9%92%AEvaryfortraits/</link>
      <pubDate>Tue, 13 Jun 2017 17:33:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode8%E4%B8%ADsb%E9%80%82%E9%85%8D%E6%A8%AA%E7%AB%96%E5%B1%8F%E6%8C%89%E9%92%AEvaryfortraits/</guid>
      <description>升级xcode8之后，打开storyboard发现xcode7适配界面的size class被Trait Variations所取代: Trait Vari</description>
    </item>
    
    <item>
      <title>在OC和swift中区分多个targets</title>
      <link>https://it-boyer.github.io/post/old/ios/%E5%9C%A8oc%E5%92%8Cswift%E4%B8%AD%E5%8C%BA%E5%88%86%E5%A4%9A%E4%B8%AAtargets/</link>
      <pubDate>Wed, 11 Jan 2017 13:49:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E5%9C%A8oc%E5%92%8Cswift%E4%B8%AD%E5%8C%BA%E5%88%86%E5%A4%9A%E4%B8%AAtargets/</guid>
      <description>build setting预编译位置 Preprocessor Macros Other Swift Flags 为生产和开发target配置预处理宏/编译器标识。之后我们就可以使用该标识在我们的代码来检测应用程序正在</description>
    </item>
    
  </channel>
</rss>
