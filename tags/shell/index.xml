<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shell on 习七</title>
    <link>https://it-boyer.github.io/tags/shell/</link>
    <description>Recent content in shell on 习七</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>itboyer@qq.com (iTBoyer)</managingEditor>
    <webMaster>itboyer@qq.com (iTBoyer)</webMaster>
    <lastBuildDate>Fri, 09 Aug 2019 15:22:00 +0800</lastBuildDate><atom:link href="https://it-boyer.github.io/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>借助环境变量简化shell脚本</title>
      <link>https://it-boyer.github.io/post/old/%E5%80%9F%E5%8A%A9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%AE%80%E5%8C%96shell%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Fri, 09 Aug 2019 15:22:00 +0800</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/%E5%80%9F%E5%8A%A9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%AE%80%E5%8C%96shell%E8%84%9A%E6%9C%AC/</guid>
      <description>需求描述 本人使用oh-my-zsh终端主题，它提供了很多快捷命令，还有平时也积累的一些alias快捷命令,配置在.zshrc中，方便每次打开</description>
    </item>
    
    <item>
      <title>SSH命令安装及使用</title>
      <link>https://it-boyer.github.io/post/old/shell/ssh%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 26 Feb 2019 18:16:23 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/ssh%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
      <description>写下这篇文章的目的是为了更清楚的讲解和展现ssh的用法和操作，避免网上庞杂的文章和材料影响新手的学习过程。所以如果你是为老手，可以略过这篇文</description>
    </item>
    
    <item>
      <title>iOS系统的shell工具blink</title>
      <link>https://it-boyer.github.io/post/old/shell/ios%E7%B3%BB%E7%BB%9F%E7%9A%84shell%E5%B7%A5%E5%85%B7blink/</link>
      <pubDate>Tue, 26 Feb 2019 18:11:37 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/ios%E7%B3%BB%E7%BB%9F%E7%9A%84shell%E5%B7%A5%E5%85%B7blink/</guid>
      <description>简介 用于iOS的Blink Shell(为更多Shell util进行了编辑) Blink是第一个利用Mosh和SSH支持的专业桌面级iOS终端。</description>
    </item>
    
    <item>
      <title>makefile自动化编译工具</title>
      <link>https://it-boyer.github.io/post/old/shell/makefile%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 08 Nov 2018 20:30:54 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/makefile%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</guid>
      <description>make命令执行时，需要一个makefile文件，以告诉make命令需要怎么样的去编译和链接程序。 首先，我们用一个示例来说明makefile</description>
    </item>
    
    <item>
      <title>使用screen在后台运行进程</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8screen%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Sun, 21 Oct 2018 22:42:59 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8screen%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E8%BF%9B%E7%A8%8B/</guid>
      <description>screen 支持会话恢复 当我们开启screen后，只要screen进程没有终止，其内部运行的会话都可以恢复。网络连接中断临时，用户也可以进入开启的sc</description>
    </item>
    
    <item>
      <title>安装ruby及chruby版本管理</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%AE%89%E8%A3%85ruby%E5%8F%8Achruby%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 19 Oct 2018 15:58:23 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E5%AE%89%E8%A3%85ruby%E5%8F%8Achruby%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</guid>
      <description>{% github postmodern ruby-install ea2b8bb width = 30% %} 安装工具ruby-install 1 $ brew install ruby-install 安装指定 Ruby 版本 方式一：使用Homebrew安装 1 2 $ ruby-install ruby 2.4.1 $ ruby-install --system ruby #覆盖系统版本</description>
    </item>
    
    <item>
      <title>package_json文件配置说明</title>
      <link>https://it-boyer.github.io/post/old/shell/package_json%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Sun, 14 Oct 2018 23:47:05 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/package_json%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</guid>
      <description>npm 与 package.json 快速入门教程 每个项目的根目录下一般都有一个package.json文件，定义项目所需要的各种模块，以及项目的配置信息。npm insta</description>
    </item>
    
    <item>
      <title>使用gem升级pod方法</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8gem%E5%8D%87%E7%BA%A7pod%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 06 Oct 2018 14:50:12 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8gem%E5%8D%87%E7%BA%A7pod%E6%96%B9%E6%B3%95/</guid>
      <description>升级cocopods 1 2 3 4 5 6 sudo gem update --system gem source -l pod setup pod repo update --verbose sudo gem install cocoapods --pre sudo gem cleanup gem source 1 2 3 4 $ gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/ $ gem sources -l https://gems.ruby-china.com # 确保只有 gems.ruby-china.com 腾讯云： https://gems.ruby-china.com/ 淘宝：h</description>
    </item>
    
    <item>
      <title>设置环境变量的profile与bash_profile区别</title>
      <link>https://it-boyer.github.io/post/old/shell/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84profile%E4%B8%8Ebash_profile%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 05 Oct 2018 09:32:44 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84profile%E4%B8%8Ebash_profile%E5%8C%BA%E5%88%AB/</guid>
      <description>profile文件 1.1 profile文件的作用 profile(/etc/profile)，用于设置系统级的环境变量和启动程序，在这个文件下配置</description>
    </item>
    
    <item>
      <title>vim一般模式下查找和替换命令</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 04 Oct 2018 23:48:08 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/vim%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4/</guid>
      <description>/,?查找命令 /word 向下查找word字符串 ?word向上查找word字符串 组合查找 n: 代表重复前一个查找的操作 N:反向进行前一个查找操作 s/old</description>
    </item>
    
    <item>
      <title>shell脚本路径和执行的路径区别</title>
      <link>https://it-boyer.github.io/post/old/shell/shell%E8%84%9A%E6%9C%AC%E8%B7%AF%E5%BE%84%E5%92%8C%E6%89%A7%E8%A1%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 04 Oct 2018 13:52:19 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/shell%E8%84%9A%E6%9C%AC%E8%B7%AF%E5%BE%84%E5%92%8C%E6%89%A7%E8%A1%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E5%8C%BA%E5%88%AB/</guid>
      <description>获取shell脚本文件的绝对路径 basepath=$(cd dirname $0; pwd) echo &amp;ldquo;sh脚本文件的绝对路径：$basepath&amp;rdquo; 当前执行脚本的路径 echo &amp;ldq</description>
    </item>
    
    <item>
      <title>在Codeanywhere上使用zsh终端及高亮样式</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%9C%A8codeanywhere%E4%B8%8A%E4%BD%BF%E7%94%A8zsh%E7%BB%88%E7%AB%AF%E5%8F%8A%E9%AB%98%E4%BA%AE%E6%A0%B7%E5%BC%8F/</link>
      <pubDate>Thu, 13 Sep 2018 11:25:14 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E5%9C%A8codeanywhere%E4%B8%8A%E4%BD%BF%E7%94%A8zsh%E7%BB%88%E7%AB%AF%E5%8F%8A%E9%AB%98%E4%BA%AE%E6%A0%B7%E5%BC%8F/</guid>
      <description>检查是否安装： 1 chsh 打印： 安装 Debian / Ubuntu 安装： 1 $ sudo apt-get install zsh zsh直接启动： 1 zsh 安装oh-my-zsh样式工具 在hexoDeploy项目根目录执行：</description>
    </item>
    
    <item>
      <title>SwiftLint检查代码使用</title>
      <link>https://it-boyer.github.io/post/old/shell/swiftlint%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 21 Aug 2018 17:02:47 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/swiftlint%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github realm SwiftLint 8deb453 width = 30% %} 安装配置swiftlint语法矫正工具 安装包方式 brew install swiftlint 或下载[swiftlint.pkg][https://github.</description>
    </item>
    
    <item>
      <title>终端支持swift自动补齐</title>
      <link>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E6%94%AF%E6%8C%81swift%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90/</link>
      <pubDate>Tue, 21 Aug 2018 15:48:24 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E6%94%AF%E6%8C%81swift%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90/</guid>
      <description>终端支持swift自动补齐 keith/sourcekittendaemon.vim：这个插件提供了Vim集成SourceKittenDaem</description>
    </item>
    
    <item>
      <title>markdown-preview实现md预览</title>
      <link>https://it-boyer.github.io/post/old/shell/markdown-preview%E5%AE%9E%E7%8E%B0md%E9%A2%84%E8%A7%88/</link>
      <pubDate>Tue, 21 Aug 2018 10:40:31 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/markdown-preview%E5%AE%9E%E7%8E%B0md%E9%A2%84%E8%A7%88/</guid>
      <description>{% github iamcco markdown-preview.vim c09a1ca width = 30% %} nisha 命令行使用 1 2 3 4 5 MarkdownPreview &amp;#34; open preview window in markdown buffer MarkdownPreviewStop &amp;#34; close the preview window and server 插件运行效果预览</description>
    </item>
    
    <item>
      <title>iCompleteMe支持swift语法提示</title>
      <link>https://it-boyer.github.io/post/old/shell/icompleteme%E6%94%AF%E6%8C%81swift%E8%AF%AD%E6%B3%95%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Fri, 10 Aug 2018 16:40:19 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/icompleteme%E6%94%AF%E6%8C%81swift%E8%AF%AD%E6%B3%95%E6%8F%90%E7%A4%BA/</guid>
      <description>{% github jerrymarino iCompleteMe ad0e1fe width = 30% %} iCompleteMe是基于YouCompleteMe。在花了一年多的时间试图实现对YouCompleteMe的快速支持之</description>
    </item>
    
    <item>
      <title>SwiftPlayground命令操作</title>
      <link>https://it-boyer.github.io/post/old/shell/swiftplayground%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 10 Aug 2018 15:50:21 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/swiftplayground%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</guid>
      <description>{% github jerrymarino SwiftPlayground.vim f603700 width = 30% %} 执行环境 在playgrounds后缀的目录中执行swift文件 熟悉vim快捷键用法 空格 + fs 保存文件：此时插件会自动运行pl</description>
    </item>
    
    <item>
      <title>使用nvm或n管理node和npm版本</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8nvm%E6%88%96n%E7%AE%A1%E7%90%86node%E5%92%8Cnpm%E7%89%88%E6%9C%AC/</link>
      <pubDate>Tue, 29 May 2018 12:06:24 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8nvm%E6%88%96n%E7%AE%A1%E7%90%86node%E5%92%8Cnpm%E7%89%88%E6%9C%AC/</guid>
      <description>问题 1 2 3 Fatal error in , line 0 # Check failed: !value_obj-&amp;gt;IsJSReceiver() || value_obj-&amp;gt;IsTemplateInfo(). #FailureMessage Object: 0x7ffeefbf25c0[1] 22749 illegal hardware instruction he 参考Fatal error in ../deps/v8/src/api.cc, line 1197 when gulp watch,需要降级node版本。 nvm工具 nvm是node版</description>
    </item>
    
    <item>
      <title>终端实现预览plantuml的插件</title>
      <link>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E5%AE%9E%E7%8E%B0%E9%A2%84%E8%A7%88plantuml%E7%9A%84%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 29 May 2018 11:32:04 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E5%AE%9E%E7%8E%B0%E9%A2%84%E8%A7%88plantuml%E7%9A%84%E6%8F%92%E4%BB%B6/</guid>
      <description>{% github weirongxu plantuml-previewer.vim bf4b3e5 width = 30% %} 安装依赖 1 2 3 Plug &amp;#39;it-boyer/plantuml-syntax&amp;#39; &amp;#34;plantuml语法高亮 Plug &amp;#39;aklt/plantuml-syntax&amp;#39; Plug &amp;#39;tyru/open-browser.vim&amp;#39; Plug &amp;#39;weirongxu/plantuml-previewer.vim&amp;#39; &amp;#34;在线工具：http://sujoyu.githu</description>
    </item>
    
    <item>
      <title>在space-vim平台安装若干插件</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%9C%A8space-vim%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%E8%8B%A5%E5%B9%B2%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Thu, 17 Aug 2017 14:26:46 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/%E5%9C%A8space-vim%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%E8%8B%A5%E5%B9%B2%E6%8F%92%E4%BB%B6/</guid>
      <description>space-vim 首次启用一个 layer，需要执行 SPC f R, 或者 :so $MYVIMRC, 重新加载 .vimrc 并执行 :PlugInstall 安装所需的相关插件 。或者退出重新打开 vim, vim-plug 将会检测并自动安装缺失的插件。 基于</description>
    </item>
    
    <item>
      <title>vim编辑器键盘映射命令map</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%91%BD%E4%BB%A4map/</link>
      <pubDate>Tue, 04 Jul 2017 15:06:52 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%91%BD%E4%BB%A4map/</guid>
      <description>使用:map命令，可以将键盘上的某个按键与Vim的命令绑定起来。 例如使用以下命令，可以通过F5键将单词用花括号括起来： 1 :map &amp;lt;F5&amp;gt; i{e&amp;lt;Esc&amp;gt;a}&amp;lt;Esc&amp;gt; 执行过程：i{</description>
    </item>
    
    <item>
      <title>vim编辑器的基本用法</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 04 Jul 2017 10:09:29 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>参考 基本操作 基本概念 动作：是指移动光标的操作，你肯定很熟悉 h、j、k 和 l，以及 w 和 b。但其实，/ 也是一个动作。 1 :h navigation 操作符： 对某个区域文本执</description>
    </item>
    
    <item>
      <title>SourceKittenSwift语法自动补齐工具</title>
      <link>https://it-boyer.github.io/post/old/shell/sourcekittenswift%E8%AF%AD%E6%B3%95%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 29 Jun 2017 10:08:50 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/sourcekittenswift%E8%AF%AD%E6%B3%95%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90%E5%B7%A5%E5%85%B7/</guid>
      <description>vim插件工具：Vundle 主题色： |组合键 | Description| 空格 + T + n| 随机切换颜色主题。 SPC T s |使用unite buffer方式切换一个主题 插件 Unite 预定义</description>
    </item>
    
    <item>
      <title>shell命令处理字符串</title>
      <link>https://it-boyer.github.io/post/old/shell/shell%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Fri, 23 Jun 2017 10:32:45 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://it-boyer.github.io/post/old/shell/shell%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>截取字符串 %+字符+正则表达式 删除字符及右边内容，从源字符串右边开始匹配 % 单井号表示一旦匹配成功立即删除 %% 双井号表示一直等相匹配到最后一个字</description>
    </item>
    
  </channel>
</rss>
