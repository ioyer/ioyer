<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>线程 on 习七</title>
    <link>https://ioyer.github.io/tags/%E7%BA%BF%E7%A8%8B/</link>
    <description>Recent content in 线程 on 习七</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>itboyer@qq.com (iTBoyer)</managingEditor>
    <webMaster>itboyer@qq.com (iTBoyer)</webMaster>
    <lastBuildDate>Sun, 24 Sep 2017 19:06:03 +0000</lastBuildDate><atom:link href="https://ioyer.github.io/tags/%E7%BA%BF%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>线程安全类的设计</title>
      <link>https://ioyer.github.io/post/old/ios/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%B1%BB%E7%9A%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 24 Sep 2017 19:06:03 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://ioyer.github.io/post/old/ios/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%B1%BB%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>这篇文章将专注于实用技巧，设计模式，以及对于写出线程安全类和使用 GCD 来说所特别需要注意的一些反面模式。 线程安全 Apple 的框架 首先让我们来看看 Apple 的框架</description>
    </item>
    
    <item>
      <title>GCD底层并发API</title>
      <link>https://ioyer.github.io/post/old/ios/gcd%E5%BA%95%E5%B1%82%E5%B9%B6%E5%8F%91api/</link>
      <pubDate>Sun, 24 Sep 2017 18:21:38 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://ioyer.github.io/post/old/ios/gcd%E5%BA%95%E5%B1%82%E5%B9%B6%E5%8F%91api/</guid>
      <description>这篇文章里，我们将会讨论一些 iOS 和 OS X 都可以使用的底层 API。除了 dispatch_once ，我们一般不鼓励使用其中的任何一种技术。 但是我们想要揭示出表面之下深层次的</description>
    </item>
    
    <item>
      <title>iOS多线程API介绍</title>
      <link>https://ioyer.github.io/post/old/ios/ios%E5%A4%9A%E7%BA%BF%E7%A8%8Bapi%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 24 Sep 2017 09:18:49 +0000</pubDate>
      <author>itboyer@qq.com (iTBoyer)</author>
      <guid>https://ioyer.github.io/post/old/ios/ios%E5%A4%9A%E7%BA%BF%E7%A8%8Bapi%E4%BB%8B%E7%BB%8D/</guid>
      <description>并发所描述的概念就是同时运行多个任务。这些任务可能是以在单核 CPU 上分时（时间共享）的形式同时运行，也可能是在多核 CPU 上以真正的并行方式来运行。 OS</description>
    </item>
    
  </channel>
</rss>
