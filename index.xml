<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>习七</title>
    <link>https://it-boyer.github.io/</link>
    <description>Recent content on 习七</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 19 Oct 2021 18:50:00 +0800</lastBuildDate><atom:link href="https://it-boyer.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于阿里云盘资源学习思考</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E8%B5%84%E6%BA%90%E5%AD%A6%E4%B9%A0%E6%80%9D%E8%80%83/</link>
      <pubDate>Tue, 19 Oct 2021 18:50:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E8%B5%84%E6%BA%90%E5%AD%A6%E4%B9%A0%E6%80%9D%E8%80%83/</guid>
      <description>I:辨别知识和信息 现在在网上的知识资源，例如：严选、喜马拉雅、网易公开课、得到、攀登阅读等，资源越来越多，少则几百G，多则几T 。 之前借助过R</description>
    </item>
    
    <item>
      <title>在mac系统上使用webdav工具挂载阿里云盘</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%9C%A8mac%E7%B3%BB%E7%BB%9F%E4%B8%8A%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/</link>
      <pubDate>Tue, 19 Oct 2021 18:49:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%9C%A8mac%E7%B3%BB%E7%BB%9F%E4%B8%8A%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/</guid>
      <description>阿里云盘挂在到本地硬盘 安装webdav 工具 安装docker docker mac 版本，直接只用官网dmg 安装。 使用brew 安装，会出现缺少组件问题：Canno</description>
    </item>
    
    <item>
      <title>hugo导出roam链接失败相关问题总结</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%88%86%E6%9E%90hugo%E5%AF%BC%E5%87%BAroam%E5%87%BA%E7%8E%B0%E7%9A%84%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 18 Oct 2021 18:44:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%88%86%E6%9E%90hugo%E5%AF%BC%E5%87%BAroam%E5%87%BA%E7%8E%B0%E7%9A%84%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/</guid>
      <description>I:辨别知识和信息 在hugo导出过程中，文中如果出现roam链接，导出会出现问题。 目前现象，如果roam链接的节点在同一个文件时，可以导出成</description>
    </item>
    
    <item>
      <title>七个习惯和taskjuggler整合</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E6%95%B4%E5%90%88%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF%E5%92%8Ctaskjuggler%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 18 Oct 2021 18:44:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E6%95%B4%E5%90%88%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF%E5%92%8Ctaskjuggler%E5%B7%A5%E5%85%B7/</guid>
      <description>A1:追问和反思经验 在以前项目中，仅注重代码实现，对效率和回报没有概念，后来加入了项目愿景和项目宣言，来弥补管理上的缺陷，先明确目标，演练整</description>
    </item>
    
    <item>
      <title>知识体系思维模式</title>
      <link>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/%E5%87%A0%E4%B8%AA%E9%80%82%E7%94%A8%E7%9A%84%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Fri, 15 Oct 2021 11:11:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/%E5%87%A0%E4%B8%AA%E9%80%82%E7%94%A8%E7%9A%84%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%85%B7/</guid>
      <description>在管理上已经确定在使用taskjuggler 工具做心灵演练，安排工作和生活日常。让生活在有计划的进行，包括技能提升。 在工作上，管理上的定型，</description>
    </item>
    
    <item>
      <title>设置even主题色</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/even%E4%B8%BB%E9%A2%98%E8%89%B2%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 14 Oct 2021 11:50:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/even%E4%B8%BB%E9%A2%98%E8%89%B2%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/</guid>
      <description>设置主题色 主题的样式文件的位置： ${Hugo-Site}/themes/even/assets/sass/_variables.scss 先确定配色方案 背景色： #002b36 字体色： #839496 可以在 Solarized Color Scheme 找到更多的配色方案。 下面步骤将用这个色值设置even 主题色，</description>
    </item>
    
    <item>
      <title>emacs中使用telega客户端</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/telega%E9%9B%86%E6%88%90%E5%88%B0emacs%E4%B8%AD/</link>
      <pubDate>Wed, 13 Oct 2021 22:07:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/telega%E9%9B%86%E6%88%90%E5%88%B0emacs%E4%B8%AD/</guid>
      <description>安装tdlib 安装方式有两种，一种使用brew, 一种使用源码编译tdlib 在使用 brew install tdlib 之后，显示版本过时，无法使用，只能借助编译方式获得最新</description>
    </item>
    
    <item>
      <title>org-roam-v2迁移过程的预研</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/org-roam%E6%94%B9%E5%8F%98%E7%AC%94%E8%AE%B0%E4%B9%A0%E6%83%AF/</link>
      <pubDate>Wed, 13 Oct 2021 12:48:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/org-roam%E6%94%B9%E5%8F%98%E7%AC%94%E8%AE%B0%E4%B9%A0%E6%83%AF/</guid>
      <description>理解卡片笔记法的原则 玩转 Obsidian | 打造知识循环利器 - 少数派 对比使用目录和标签管理的弊端 了解卡片的定义 知识循环体系 知识循环，指的是我们整理知识的目标</description>
    </item>
    
    <item>
      <title>默克尔总理的精神</title>
      <link>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E4%BA%BA%E7%89%A9%E4%BC%A0%E8%AE%B0-%E9%BB%98%E5%85%8B%E5%B0%94/</link>
      <pubDate>Wed, 13 Oct 2021 12:39:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E4%BA%BA%E7%89%A9%E4%BC%A0%E8%AE%B0-%E9%BB%98%E5%85%8B%E5%B0%94/</guid>
      <description>拆页 默克尔的另一个“信条”，是严格遵循秩序，缜密制定计划。崇尚计划的缘起，或许也可以向她的孩提时代寻求解答：因为成长期间的“一个问题”，她在</description>
    </item>
    
    <item>
      <title>禅道使用入门</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%A6%85%E9%81%93%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 13 Oct 2021 12:30:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%A6%85%E9%81%93%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</guid>
      <description>简介 禅道有三个版本:开源版 演示、专业版 演示 、企业版 演示 专业版：禅道专业版使用帮助 性价比 专业版与开源版对比 愿景：禅道项目管理软件是做什么的？ 它</description>
    </item>
    
    <item>
      <title>连锁集团</title>
      <link>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E8%BF%9E%E9%94%81%E9%9B%86%E5%9B%A2/</link>
      <pubDate>Mon, 11 Oct 2021 18:26:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E8%BF%9E%E9%94%81%E9%9B%86%E5%9B%A2/</guid>
      <description>立项 访问taskjuggler版本 连锁集团 项目愿景 项目宣言 以终为始：两次创造，做第一创造者，改写剧本，确定项目目标愿景和项目宣言，做到在项目</description>
    </item>
    
    <item>
      <title>富人思维</title>
      <link>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/%E5%9F%B9%E5%85%BB%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4/</link>
      <pubDate>Mon, 13 Sep 2021 12:18:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/%E5%9F%B9%E5%85%BB%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>cashflow现金流游戏教程</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/cashflowgame-%E6%B8%B8%E6%88%8F%E8%A7%84%E5%88%99%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 10 Sep 2021 18:44:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/cashflowgame-%E6%B8%B8%E6%88%8F%E8%A7%84%E5%88%99%E4%BB%8B%E7%BB%8D/</guid>
      <description>目的 安装过程 游戏规则 《富爸爸穷爸爸》里的3张图-泽图专题 其他概念 体验游戏 目的 游戏的最终目的是使被动收入（非工资收入）大于总支出。在游戏中体会</description>
    </item>
    
    <item>
      <title>Beancount 常用术语和报表模版</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%90%86%E8%B4%A2%E6%8A%95%E8%B5%84%E6%9C%AF%E8%AF%AD%E5%92%8C%E6%8A%A5%E8%A1%A8/</link>
      <pubDate>Fri, 10 Sep 2021 15:03:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%90%86%E8%B4%A2%E6%8A%95%E8%B5%84%E6%9C%AF%E8%AF%AD%E5%92%8C%E6%8A%A5%E8%A1%A8/</guid>
      <description>术语 报表工具 术语 Beancount读记 · GitHub 损益表：Income Statement 将一段时间内所有Income和Expenses类账号相关的transacti</description>
    </item>
    
    <item>
      <title>find-grep-dired在目录中批量替换字符串</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/find-grep-dired/</link>
      <pubDate>Thu, 09 Sep 2021 18:19:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/find-grep-dired/</guid>
      <description>目的 学习emacs 中搜索和替换字符串的方法 使用find-grep-dired 在指定的目录中批量替换字符串的操作流程 EmacsWiki: Dired Search And Replace 例如：在文件夹/</description>
    </item>
    
    <item>
      <title>使用swift开发telegram机器人方案</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/telegam%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%BC%80%E5%8F%91/</link>
      <pubDate>Thu, 09 Sep 2021 16:19:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/telegam%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%BC%80%E5%8F%91/</guid>
      <description>启发 开发bot 机器人 启发 在了解现金流游戏的过程，意外发现记账工具costflow 结合telegram 机器人，实现记账功能的方法。 所以，萌生了</description>
    </item>
    
    <item>
      <title>猜旗子</title>
      <link>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E7%8C%9C%E6%97%97%E5%AD%90%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 08 Sep 2021 15:35:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E7%8C%9C%E6%97%97%E5%AD%90%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/</guid>
      <description>知识点 行动 总结 猜谜游戏，用来记住世界上的很多标志。 知识点 stacks, buttons, images, alerts, asset catalogs, and more. 行动 创建GuessTheFlag项目。 Using stacks to arrange views Colors and frames Gradients Buttons and images Showing alert messages</description>
    </item>
    
    <item>
      <title>WeSplit</title>
      <link>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E9%A1%B9%E7%9B%AEwesplit%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 08 Sep 2021 15:32:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E9%A1%B9%E7%9B%AEwesplit%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</guid>
      <description>知识点： 知识点： WeSplit简介 了解SwiftUI应用的基本架构 创建表格 添加导航条 修改程序状态 将状态绑定到用户界面控件 循环创建视图 从Tex</description>
    </item>
    
    <item>
      <title>学习elgantt.el</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/elgantt%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 06 Sep 2021 17:44:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/elgantt%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>目的 使用 问题 目的 在学习taskjuggler 工具过程中，碰巧一起学习emacs 中绘制甘特图的工具elgantt. 在taskjuggler 实战</description>
    </item>
    
    <item>
      <title>使用tj3 制定周计划培养七习知识体系</title>
      <link>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/%E4%BD%BF%E7%94%A8tj3-%E5%88%B6%E5%AE%9A%E5%91%A8%E8%AE%A1%E5%88%92/</link>
      <pubDate>Wed, 01 Sep 2021 18:01:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/%E4%BD%BF%E7%94%A8tj3-%E5%88%B6%E5%AE%9A%E5%91%A8%E8%AE%A1%E5%88%92/</guid>
      <description>目的 在学习tj3 过程中，考虑到是针对项目管理才会用到的技巧，学习中途搁置，没有产生归档文档。 本次，受到亿学堂课程计划和七个习惯周计划的思想中</description>
    </item>
    
    <item>
      <title>重新阅读七个习惯，提高习惯三的执行力</title>
      <link>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E5%B0%9D%E8%AF%95%E9%87%8D%E6%96%B0%E9%98%85%E8%AF%BB%E4%B8%83%E4%B9%A0%E5%85%88%E8%AE%A1%E5%88%92%E8%A7%84%E8%8C%83%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 01 Sep 2021 11:38:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E5%B0%9D%E8%AF%95%E9%87%8D%E6%96%B0%E9%98%85%E8%AF%BB%E4%B8%83%E4%B9%A0%E5%85%88%E8%AE%A1%E5%88%92%E8%A7%84%E8%8C%83%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/</guid>
      <description>每天拿出半个小时，确定一天要做什么要事第一的原则要铭记愿景，才能提高行动力使用emacs 管理任务，用番茄钟记录时间购房计划理财计划阅读计划不</description>
    </item>
    
    <item>
      <title>确定重要的思维方式着重目标培养习惯</title>
      <link>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E7%A1%AE%E5%AE%9A%E9%87%8D%E8%A6%81%E6%80%9D%E7%BB%B4%E6%96%B9%E5%BC%8F%E5%9F%B9%E5%85%BB%E9%94%BB%E7%82%BC%E9%80%BB%E8%BE%91%E6%80%9D%E7%BB%B4/</link>
      <pubDate>Wed, 01 Sep 2021 11:26:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E7%A1%AE%E5%AE%9A%E9%87%8D%E8%A6%81%E6%80%9D%E7%BB%B4%E6%96%B9%E5%BC%8F%E5%9F%B9%E5%85%BB%E9%94%BB%E7%82%BC%E9%80%BB%E8%BE%91%E6%80%9D%E7%BB%B4/</guid>
      <description>养成七个习惯的应该怎么实施？ 素材的获取 回顾之前失败的原因在哪里？ 入手 确定要做哪些思想上的改变，带着目的阅读七个习惯的书籍。 目前知道的习惯一：</description>
    </item>
    
    <item>
      <title>Doom自力更生</title>
      <link>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/doom-%E8%87%AA%E5%8A%9B%E6%9B%B4%E7%94%9F/</link>
      <pubDate>Mon, 30 Aug 2021 17:20:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/doom-%E8%87%AA%E5%8A%9B%E6%9B%B4%E7%94%9F/</guid>
      <description>目的 在使命宣言中已经确定使用 emacs 作为唯一官方的时间管理工具，以后在生活中，会遇到其他效率问题，激发出各种提高效能的灵感和想法，如果能掌握 emacs 开发</description>
    </item>
    
    <item>
      <title>emacs中汉化显示星期遇到的问题</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/emacs-%E6%B1%89%E5%8C%96%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Mon, 30 Aug 2021 09:58:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/emacs-%E6%B1%89%E5%8C%96%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>设置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ;; 设置agenda 显示中文 月、周、日 ;; https://emacs-china.org/t/agenda/7711/4 (setq-default ;; inhibit-startup-screen t;隐藏启动显示画面 ;; calendar-date-style &amp;#39;iso calendar-day-abbrev-array [&amp;#34;周七&amp;#34;</description>
    </item>
    
    <item>
      <title>org-mode和google日历同步和相关技巧</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/org-mode%E5%90%8C%E6%AD%A5%E8%B0%B7%E6%AD%8C%E6%97%A5%E5%8E%86%E5%90%8C%E6%AD%A5%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/org-mode%E5%90%8C%E6%AD%A5%E8%B0%B7%E6%AD%8C%E6%97%A5%E5%8E%86%E5%90%8C%E6%AD%A5%E5%AE%9E%E7%8E%B0/</guid>
      <description>目的 在doom上开启google工具 ox-trello和gcal同步协作 目的 通过gtd 提高执行力。相关的技巧工具： org-roam agenda org-gcal 谷歌日历APP创建申</description>
    </item>
    
    <item>
      <title>使用swift版XcodeProj读取和修改项目的build配置</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/xcodeproj%E5%9F%BA%E7%A1%80%E6%96%B9%E6%B3%95%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 20 Aug 2021 18:36:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/xcodeproj%E5%9F%BA%E7%A1%80%E6%96%B9%E6%B3%95%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</guid>
      <description>目的 主要的依赖设置 通过xcodeproj在工程的xxx group下引入xx.h和xx.m文件 通过xcodeproj在工程中引入framwor</description>
    </item>
    
    <item>
      <title>学习创建自己的SPM新增库集合package-collection</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/swift-package-collection%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 20 Aug 2021 14:08:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/swift-package-collection%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>目的 制作 目的 学习swift集成库的管理方法，掌握包集合的制作和使用方法 主要 Swift.org - Package Collections Swift 新闻之 Package Collections 是什么 - SwiftUI自学网站 包集合 主要使用j</description>
    </item>
    
    <item>
      <title>开发二维码扫描功能学习</title>
      <link>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%8A%9F%E8%83%BD%E9%A2%84%E7%A0%94%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Tue, 17 Aug 2021 18:51:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%8A%9F%E8%83%BD%E9%A2%84%E7%A0%94%E5%AE%9E%E7%8E%B0/</guid>
      <description>相机权限 layer 导致问题 UIButton layer层无法点击问题 RichScanDemo 相机权限 奔溃问题： 1 [access] This app has crashed because it attempted to access privacy-sensitive data without a usage description. The app&amp;#39;s Info.plist must contain an NSCameraUsageDescription key with a string value explaining to the user how the app uses this</description>
    </item>
    
    <item>
      <title>【第二课：复利】0813 从穷人思维过度富人思维</title>
      <link>https://it-boyer.github.io/post/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E4%BB%8E%E7%A9%B7%E4%BA%BA%E6%80%9D%E7%BB%B4%E8%BF%87%E5%BA%A6%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4/</link>
      <pubDate>Fri, 13 Aug 2021 14:35:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/%E4%BB%8E%E7%A9%B7%E4%BA%BA%E6%80%9D%E7%BB%B4%E8%BF%87%E5%BA%A6%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4/</guid>
      <description>早读 量化思维 🌟量化思维的价值取向 量化实战 午间防骗 晚课 早读 量化思维 .巍巍老师: 老师一直强调说要有富人思维 那什么是富人思维呢？ 穷人思维富人思维有</description>
    </item>
    
    <item>
      <title>【第一课：生钱资产】0812 富人思维和生钱资</title>
      <link>https://it-boyer.github.io/post/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/12%E6%97%A9%E8%AF%BB%E5%AD%A6%E4%B9%A0%E7%90%86%E8%B4%A2%E8%83%BD%E6%94%B6%E8%8E%B7%E4%BB%80%E4%B9%88%E7%9A%84%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Thu, 12 Aug 2021 10:37:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%8A%95%E8%B5%84%E7%90%86%E8%B4%A2/12%E6%97%A9%E8%AF%BB%E5%AD%A6%E4%B9%A0%E7%90%86%E8%B4%A2%E8%83%BD%E6%94%B6%E8%8E%B7%E4%BB%80%E4%B9%88%E7%9A%84%E6%A1%88%E4%BE%8B/</guid>
      <description>早读：在案例中学习并确定理财的愿景目的 晚课：人生穷富的关键：生钱资产和耗钱资产 🌟核心重点一：【理财】 🌟核心重点二：【三大资产】 ⭐生钱资产 ⭐耗</description>
    </item>
    
    <item>
      <title>plantuml-mode使用问题汇总</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/plantuml-modeissues/</link>
      <pubDate>Tue, 10 Aug 2021 19:26:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/plantuml-modeissues/</guid>
      <description>目的 plantuml-mode介绍 plantuml-mode 支持设置几个属性输出格式：svg png txt 执行方式：jar server executable 预览命令：C+c C+c 输出格式：仅在eamcs-pl</description>
    </item>
    
    <item>
      <title>使用forge工具管理issue支持多平台或代理服务</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/forge%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 10 Aug 2021 14:42:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/forge%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>目的 过度依赖github，长期受网速问题的困扰，尝试使用forge工具，通过接口，将issues暂存到本地，快速预览和管理issues 在使用</description>
    </item>
    
    <item>
      <title>借助plantuml代理服务实现在markdown中绘制原型图</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/plantuml%E4%BB%A3%E7%90%86%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Mon, 09 Aug 2021 22:33:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/plantuml%E4%BB%A3%E7%90%86%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/</guid>
      <description>目的 了解plantuml server 强大的代理功能，实现在github上插入uml原型图。目前使用的方式，在org中插入脚本，生成本地文件，再加载到o</description>
    </item>
    
    <item>
      <title>Xournal&#43;&#43;涂鸦笔记使用</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/xournal%E6%B6%82%E9%B8%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 09 Aug 2021 16:20:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/xournal%E6%B6%82%E9%B8%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>目的 资源： 目的 看到画图软件，而且是开源APP, 没有抵抗力，收藏。 配合slate 本绘图。手上又一个 wacom slate 智能本，吃土了好多年，据说支持mac端连</description>
    </item>
    
    <item>
      <title>org-mode插入图片的方法</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/org-download%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 09 Aug 2021 14:31:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/org-download%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>1目的 使用图床方式托管图片，减小hugo源文件对github库的占用控件。 在使用markdown时，可以使用 ！[](imgUrl) 语法加载图</description>
    </item>
    
    <item>
      <title>ox-hugo托管图库，轻量化hugo站库（废弃）</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/%E5%AD%A6%E4%B9%A0ox-hugo%E6%89%98%E7%AE%A1%E5%9B%BE%E5%BA%93/</link>
      <pubDate>Mon, 09 Aug 2021 14:31:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/%E5%AD%A6%E4%B9%A0ox-hugo%E6%89%98%E7%AE%A1%E5%9B%BE%E5%BA%93/</guid>
      <description>警告 本文前期思路：借助hugo 和ox-hugo 之间 static 目录的特征，以static 作为github托管目录，由于hugo 在编译过程中，会直接将 static</description>
    </item>
    
    <item>
      <title>emacs-管理学 [0/0]</title>
      <link>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/emacs%E7%AE%A1%E7%90%86%E5%AD%A6/</link>
      <pubDate>Thu, 05 Aug 2021 11:42:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%88%91%E7%9A%84%E6%80%9D%E7%BB%B4/emacs%E7%AE%A1%E7%90%86%E5%AD%A6/</guid>
      <description>时间管理 agenda 项目管理 todo 目标管理 使命宣言 愿景 知识体系管理 博客管理 ox-hugo 使用plantuml梳理emacs体系 Doom自力更生 想要掌控人生，要有工具和</description>
    </item>
    
    <item>
      <title>《这样读书就够了》读后感</title>
      <link>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E6%8B%86%E4%B8%BA%E5%B7%B1%E7%94%A8%E8%AF%BB%E5%90%8E%E6%84%9F/</link>
      <pubDate>Tue, 03 Aug 2021 18:44:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E6%8B%86%E4%B8%BA%E5%B7%B1%E7%94%A8%E8%AF%BB%E5%90%8E%E6%84%9F/</guid>
      <description>这本书的契机 学习这本书的契机，是在听得到资源的音频课程，意外发现的，它有六节课，每节课一个小时，刚听时比较难以接受的，当时正在收集书籍，来规</description>
    </item>
    
    <item>
      <title>我的宣言</title>
      <link>https://it-boyer.github.io/habit/habit1/</link>
      <pubDate>Tue, 03 Aug 2021 16:15:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/habit/habit1/</guid>
      <description>制定自己的使命宣言，最基本的原则和愿景 [0%]:I 卡: 我要铭记目标愿景，恪守产出与产能平衡的原则 积极主动，选择自由的原则 以终为始，两次创造，自我领导的</description>
    </item>
    
    <item>
      <title>我的愿景</title>
      <link>https://it-boyer.github.io/habit/habit/</link>
      <pubDate>Tue, 03 Aug 2021 16:13:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/habit/habit/</guid>
      <description>生活美满</description>
    </item>
    
    <item>
      <title>使用Fuse.js实现hugo站内搜索功能</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/hugo%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Tue, 03 Aug 2021 14:00:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/hugo%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/</guid>
      <description>hugo中集成Fuse.js实现站内搜索 hugo中集成Fuse.js实现站内搜索 5分钟给Hugo博客增加搜索功能 :: /dev/ttyS3 — 回首向来萧瑟处 也无荒野</description>
    </item>
    
    <item>
      <title>沉闷酷热早晨，一篇朴实无华的公众号，带来了些许凉意</title>
      <link>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E6%B2%89%E9%97%B7%E7%9A%84%E4%B8%80%E5%A4%A9/</link>
      <pubDate>Wed, 28 Jul 2021 11:06:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E6%B2%89%E9%97%B7%E7%9A%84%E4%B8%80%E5%A4%A9/</guid>
      <description>我以前常以诗篇的形式，反思、畅想、记录生活的点滴，一篇几十字下来，半个小时已经过去，在这个等同冥想的体验，身心得到了短暂的释放，把内心的喜怒</description>
    </item>
    
    <item>
      <title>金才计划培训中的收获和感想</title>
      <link>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E9%87%91%E6%89%8D%E8%AE%A1%E5%88%92%E5%9F%B9%E8%AE%AD%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 23 Jul 2021 15:27:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E9%87%91%E6%89%8D%E8%AE%A1%E5%88%92%E5%9F%B9%E8%AE%AD%E6%80%BB%E7%BB%93/</guid>
      <description>写作目的 迷茫期 写作目的 公司要求，需要结合培训内容，来理解公司的价值观，使命，责任，让后在这些思想上武装自己，做好自己的工作。 迷茫期 最近处于迷</description>
    </item>
    
    <item>
      <title>解决appstore安装app过程进度停止问题</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</link>
      <pubDate>Wed, 21 Jul 2021 16:40:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</guid>
      <description>问题情况描述 解决办法 问题情况描述 在appstore安装过程中，有可能因为网络异常导致安装异常中止，但是进度依然显示安装中，此时无法通过app</description>
    </item>
    
    <item>
      <title>ox-hugo在博客写作过程积累总结</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/ox-hugo%E5%B7%A5%E5%85%B7%E7%BB%8F%E9%AA%8C%E7%A7%AF%E7%B4%AF/</link>
      <pubDate>Fri, 16 Jul 2021 12:43:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/ox-hugo%E5%B7%A5%E5%85%B7%E7%BB%8F%E9%AA%8C%E7%A7%AF%E7%B4%AF/</guid>
      <description>DONE写作目的 导出时todo 状态隐藏的问题 隐藏todo 状态转换之后的时间戳的方法 自定义todo 关键字的样式 温习了几个标签的使用 意外收获 DO</description>
    </item>
    
    <item>
      <title>博主的写作日常，是否可以利用emacs提升一些效率</title>
      <link>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/emacs%E7%BC%96%E5%86%99%E5%85%AC%E4%BC%97%E5%8F%B7%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B%E6%8E%A2%E7%B4%A2/</link>
      <pubDate>Thu, 15 Jul 2021 11:05:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/emacs%E7%BC%96%E5%86%99%E5%85%AC%E4%BC%97%E5%8F%B7%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B%E6%8E%A2%E7%B4%A2/</guid>
      <description>沉闷酷热早晨，一篇朴实无华的公众号，带来了些许凉意 我以前常以诗篇的形式，反思、畅想、记录生活的点滴，一篇几十字下来，半个小时已经过去，在这个</description>
    </item>
    
    <item>
      <title>苦闷天,尝鲜空调公交的浪漫行</title>
      <link>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E7%A9%BA%E8%B0%83%E5%85%AC%E4%BA%A4%E5%B0%9D%E8%AF%95%E7%BC%96%E5%86%99%E4%B8%80%E7%89%87%E7%9F%AD%E6%96%87/</link>
      <pubDate>Wed, 14 Jul 2021 18:55:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%97%A5%E5%BF%97%E9%9A%8F%E7%AC%94/%E7%A9%BA%E8%B0%83%E5%85%AC%E4%BA%A4%E5%B0%9D%E8%AF%95%E7%BC%96%E5%86%99%E4%B8%80%E7%89%87%E7%9F%AD%E6%96%87/</guid>
      <description>飞快的车轮 第一次下班,这么期待坐公交车 我想在第一时间,感受转换思维之后 emacs会对我的生活带来哪些改变 以前,耗尽心血在丰富插件,完善它功能</description>
    </item>
    
    <item>
      <title>trime,emacs-rime和squirrel输入法和配置管理</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 22 Jun 2021 00:00:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/</guid>
      <description>rime rime 是一款输入引擎，它开放了一套配置协议，为多元的输入法（同文输入法、鼠须管输入法等）的基础，输入法和rime引擎之间通过这套协议实现多样化</description>
    </item>
    
    <item>
      <title>iOS 通知提醒几种展示方式和具体代码配置</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%BF%9C%E7%A8%8B%E9%80%9A%E7%9F%A5%E7%9A%84%E6%B6%88%E6%81%AF%E7%9A%84%E5%B1%95%E7%A4%BA%E6%9D%A1%E4%BB%B6%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Wed, 16 Jun 2021 12:54:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%BF%9C%E7%A8%8B%E9%80%9A%E7%9F%A5%E7%9A%84%E6%B6%88%E6%81%AF%E7%9A%84%E5%B1%95%E7%A4%BA%E6%9D%A1%E4%BB%B6%E6%8E%A7%E5%88%B6/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;TODO&amp;rdquo; [2021-06-20 Sun 19:43] 场景描述 ios 通知提醒有三种展示样式：铃声、震动、弹出条。 通知提醒有哪些开关，可以通过几种方式来控制? 开关可以分为两种，系统开关和</description>
    </item>
    
    <item>
      <title>禁止 APP 页面自动旋转,对指定页面实现手动切换横竖屏</title>
      <link>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E7%A6%81%E6%AD%A2-app-%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%8A%A8%E6%97%8B%E8%BD%AC%E5%AF%B9%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2%E6%89%8B%E5%8A%A8%E5%88%87%E6%8D%A2%E6%A8%AA%E7%AB%96%E5%B1%8F/</link>
      <pubDate>Thu, 20 May 2021 08:20:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E7%A6%81%E6%AD%A2-app-%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%8A%A8%E6%97%8B%E8%BD%AC%E5%AF%B9%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2%E6%89%8B%E5%8A%A8%E5%88%87%E6%8D%A2%E6%A8%AA%E7%AB%96%E5%B1%8F/</guid>
      <description>项目遇到的实际问题 在实现 单个页面支持横竖屏 的需求,有两种解决方案. 实际案例:在项目中,针对电子巡查有直播功能,需要支持全屏查看直播,同时支持</description>
    </item>
    
    <item>
      <title>ox-hugo 常用的导出设置和&#43;OPATIONS:选项</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/ox-hugo-%E4%B8%AD-options-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Fri, 14 May 2021 13:45:59 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/ox-hugo-%E4%B8%AD-options-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B1%9E%E6%80%A7/</guid>
      <description>漫长的经验积累 在工作中，一直在探索如何提高效率，如何把任务合理分解效果，如何坚持知识产出，搭建自己的知识体系。但往往会沉迷在收集工具的使用上</description>
    </item>
    
    <item>
      <title>敏捷管理规范</title>
      <link>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%8F%E6%8D%B7%E7%AE%A1%E7%90%86%E7%9A%84%E8%A7%84%E8%8C%83%E5%92%8C%E6%89%A7%E8%A1%8C%E5%BB%BA%E8%AE%AE/</link>
      <pubDate>Thu, 13 May 2021 11:44:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%95%8F%E6%8D%B7%E7%AE%A1%E7%90%86%E7%9A%84%E8%A7%84%E8%8C%83%E5%92%8C%E6%89%A7%E8%A1%8C%E5%BB%BA%E8%AE%AE/</guid>
      <description>本敏捷规范是在现有正在运行的敏捷实践上的体系化，重点明确项目过程各阶段的动作细节，让整个团队的敏捷管理动作标准化，提升团队敏捷开发的能力. 笔</description>
    </item>
    
    <item>
      <title>2019 项目总结</title>
      <link>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/2019-%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%80%BB%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 13 May 2021 11:33:25 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/2019-%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%80%BB%E6%80%BB%E7%BB%93/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;TODO&amp;rdquo; [2020-01-07 Tue 09:58] 叙述几个比较深刻的项目 拍枪杆 19 年是一个自省年，项目组重组之后，在团队协作上都是一种新的挑战，从拍抢干项目第一次接触新的开发模式</description>
    </item>
    
    <item>
      <title>ox-hugo 使用 org-capture 模版搜集灵感提高效率</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/ox-hugo-%E7%9B%B8%E5%85%B3-capture-%E7%9A%84%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 11 May 2021 17:58:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/ox-hugo-%E7%9B%B8%E5%85%B3-capture-%E7%9A%84%E9%85%8D%E7%BD%AE/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;TODO&amp;rdquo; [2021-05-12 Wed 10:41] 一直在尝试使用 ox-hugo 提升编写博客的效率,苦于资料苦涩难懂,网上资源缺失,一直处于又爱又恨的情绪,导致效率不升反降的尴尬境地. 今天发</description>
    </item>
    
    <item>
      <title>在 emacs 写博客精进手册:搭建 ox-hugo 测试用例站点</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/%E5%88%A9%E7%94%A8%E5%A5%BD-ox-hugo-%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%AB%99%E7%82%B9/</link>
      <pubDate>Mon, 10 May 2021 12:30:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/%E5%88%A9%E7%94%A8%E5%A5%BD-ox-hugo-%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%AB%99%E7%82%B9/</guid>
      <description>ox-hugo 帮助用户很好的使用，专门提供了一个测试用例站点. 下面介绍下如何在本地轻松搭建一个测试用例站点，对于刚刚开始使用 emacs 写博客的新手,有很大的帮助</description>
    </item>
    
    <item>
      <title>在 hugo 站点实时预览 org 生成的 md 效果</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/ox-hugo-%E6%94%AF%E6%8C%81-org-%E5%AF%BC%E5%87%BA-md/</link>
      <pubDate>Sat, 08 May 2021 19:32:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/ox-hugo-%E6%94%AF%E6%8C%81-org-%E5%AF%BC%E5%87%BA-md/</guid>
      <description>目的 要想实现在 hugo 站点实时预览 org 生成的 md 效果,需要借助 ox-hugo 提供的自动导出的功能,配合 hugo server 实时刷新的特性,达到实时预览的目的. 实时预览:hugo server</description>
    </item>
    
    <item>
      <title>hugo中集成Fuse.js实现站内搜索</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/hugo%E4%B8%AD%E9%9B%86%E6%88%90fusejs%E5%AE%9E%E7%8E%B0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Fri, 07 May 2021 21:18:29 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/hugo%E4%B8%AD%E9%9B%86%E6%88%90fusejs%E5%AE%9E%E7%8E%B0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/</guid>
      <description>5分钟给Hugo博客增加搜索功能 :: /dev/ttyS3 — 回首向来萧瑟处 也无荒野也无灯 Fast, instant client side search for Hugo static site generator · GitHub 配置config.toml outputs:支持js</description>
    </item>
    
    <item>
      <title>swift 的 doom 环境</title>
      <link>https://it-boyer.github.io/post/old/swift-%E5%9C%A8-doom-%E4%B8%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sun, 13 Sep 2020 22:40:23 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift-%E5%9C%A8-doom-%E4%B8%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5/</guid>
      <description>安装 swift-mode swift 自动补齐相关插件 swift-mode State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;DELEGATED&amp;rdquo; [2019-12-11 三 09:30][终端支持 swift 自动补齐](post/shell/终端支持 swift 自动补齐) flycheck-swift nathankot/company-sourcekit swift-emacs/swift-mode 创建可执行项目 spi &amp;ndash;type</description>
    </item>
    
    <item>
      <title>创建单个 swift 可执行文件</title>
      <link>https://it-boyer.github.io/post/old/swift-%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 13 Sep 2020 22:33:34 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift-%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>xcrun/swift 命令工具 第一种 vi test.swift #!/usr/bin/env xcrun swift print(&amp;ldquo;hello&amp;rdquo;) $ chmod 755 test.swift $ ./test.swift 第二种 $ cat &amp;laquo;EOF &amp;gt; script #!/usr/bin/swift print(&amp;ldquo;Hi!&amp;quot;) EOF $ chmod u+x script $ ./script Hi! swift-sh 支持库依赖 安装命令 brew install swift-sh 使用 $ cat &amp;laquo;EOF &amp;gt; script #!/usr/bin/swift sh import PromiseKit // @mxcl ~&amp;gt; 6.5 print(Promise.value(&amp;ldquo;Hi!&amp;quot;)) EOF $ chmod</description>
    </item>
    
    <item>
      <title>SPM 管理库依赖和发布私库工具</title>
      <link>https://it-boyer.github.io/post/old/spm-%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 12 Sep 2020 23:14:07 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/spm-%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>问题 1:如何支持 iOS 项目到目前为止，它仅支持命令行工具和服务器端 Swift 应用程序 Swift Package Manager for iOS – Guide &amp;amp; New Features | TSH.io 无论您是使用第三方依赖关系，开发自己的内部框</description>
    </item>
    
    <item>
      <title>Cocoapods 使用</title>
      <link>https://it-boyer.github.io/post/old/pods-%E7%A7%81%E5%BA%93%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 12 Sep 2020 23:04:50 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/pods-%E7%A7%81%E5%BA%93%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>集成命令 配置 spec 索引文件 设置本地依赖库的方式: 库存放地址问题：不支持库外路径例如：~/等，只能在 spec 目录中存放库。在提交到私有仓库的时候需要加上</description>
    </item>
    
    <item>
      <title>plantuml 使用</title>
      <link>https://it-boyer.github.io/post/old/plantuml%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 30 Aug 2020 23:02:53 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/plantuml%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid>
      <description>下载历史 jar包plantuml.jar历史版本路径 命令行 uml 预览 您也可以使用下面的命令行运行 PlantUML: java -jar plantuml.jar file1 file2 file3 这将在 file1, file2 和 file3 中寻找 @startX</description>
    </item>
    
    <item>
      <title>doom 使用</title>
      <link>https://it-boyer.github.io/post/old/doom-%E5%AE%89%E8%A3%85%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 19 Jul 2020 21:41:57 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/doom-%E5%AE%89%E8%A3%85%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>编辑命令 撤销：undo (u) 重做：C + r :undo-fu-only-redo 只读：spc t r 浏览编辑历史树：M-x: undo-tree-visualize(C-x u) 安装和配置 dotfile 中的配置 hugo 项目中管理 doom 版本 doom 工具的基本命令（i</description>
    </item>
    
    <item>
      <title>Instruments 工具使用</title>
      <link>https://it-boyer.github.io/post/old/xcode/instruments%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 19 Jul 2020 21:41:43 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/instruments%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid>
      <description>指南 Xcode调试工具Instruments指南 - CSDN博客 Time Profiler：CPU 分析工具分析代码的执行时间。 Core Animation：离</description>
    </item>
    
    <item>
      <title>APPlink 的使用</title>
      <link>https://it-boyer.github.io/post/old/applink%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 19 Jul 2020 21:40:54 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/applink%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>增加 web 端打开短视频 APP 参考教程：http://docs.getui.com/getui/mobile/ios/applink/ 协调李军峰在分享</description>
    </item>
    
    <item>
      <title>XVim 插件</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode%E5%AE%89%E8%A3%85xvim2%E6%8F%92%E4%BB%B6%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 19 Jul 2020 21:40:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode%E5%AE%89%E8%A3%85xvim2%E6%8F%92%E4%BB%B6%E6%96%B9%E6%B3%95/</guid>
      <description>Xcode 重签名证书：钥匙串访问—证书助理：创建证书 — 名称：XcodeResign 类型：代码签名签名：sudo codesign -f -s XcodeResign（证书名）</description>
    </item>
    
    <item>
      <title>Xcode 快捷键使用</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 19 Jul 2020 21:31:04 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;TODO&amp;rdquo; [2020-05-16 六 20:45] State &amp;ldquo;TODO&amp;rdquo; from &amp;ldquo;DONE&amp;rdquo; [2020-05-16 六 20:45] State &amp;ldquo;DONE&amp;rdquo; from &amp;ldquo;CANCEL&amp;rdquo; [2020-03-07 六 10:21] 新建 Tab 页： command + t 关闭 tab 页： command + w 左右切换 tab 页： shift + command + [ 或 ] 预览所有 tab 页： shift + command + \ 选中激活 tab 页：</description>
    </item>
    
    <item>
      <title>总结集成工具使用文档</title>
      <link>https://it-boyer.github.io/post/old/%E4%BD%BF%E7%94%A8fastlane%E9%9B%86%E6%88%90cocopads%E5%92%8Cjazzy%E5%B7%A5%E5%85%B7%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87/</link>
      <pubDate>Sat, 07 Sep 2019 20:47:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%BD%BF%E7%94%A8fastlane%E9%9B%86%E6%88%90cocopads%E5%92%8Cjazzy%E5%B7%A5%E5%85%B7%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87/</guid>
      <description>DONEjazzy工具使用实现基本的文档的生成,并同步到hugo目录中 支持oc/swift文档 swift文档 oc 文档 .jazzy.yaml配置</description>
    </item>
    
    <item>
      <title>集配门店样式和跳转功能</title>
      <link>https://it-boyer.github.io/post/old/%E5%BC%80%E5%8F%91%E9%9B%86%E9%85%8D%E9%97%A8%E5%BA%97%E6%8F%92%E4%BB%B6%E7%BB%A7%E6%89%BF%E5%88%B0%E9%97%A8%E5%BA%97%E8%AF%A6%E6%83%85/</link>
      <pubDate>Wed, 21 Aug 2019 11:32:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%BC%80%E5%8F%91%E9%9B%86%E9%85%8D%E9%97%A8%E5%BA%97%E6%8F%92%E4%BB%B6%E7%BB%A7%E6%89%BF%E5%88%B0%E9%97%A8%E5%BA%97%E8%AF%A6%E6%83%85/</guid>
      <description>STARTEDUI实现 新建列表UI,继承到门店详情中,实现跳转流程. 集配门店code:StoreDistribution UI:在gb组件中新</description>
    </item>
    
    <item>
      <title>emacs常用快捷键</title>
      <link>https://it-boyer.github.io/post/old/emacs%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Tue, 20 Aug 2019 23:25:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/emacs%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</guid>
      <description>统计命令 org-insert-columns-dblock C-c C-x i 对任务列表生成列表视图.C-c C-x C-c 生成临时的任务列表 org-clock-in C-x C-x C-i 统计实际任务执行时间 org-clock-out C-c C-x C-o 统计任务结束的总时长 org-clock-report C-c C-x C-r 统计光标</description>
    </item>
    
    <item>
      <title>设置局域网内访问 hugo 本地服务 server</title>
      <link>https://it-boyer.github.io/post/old/%E8%AE%BE%E7%BD%AE%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E8%AE%BF%E9%97%AEhugo%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1server/</link>
      <pubDate>Fri, 09 Aug 2019 19:53:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%AE%BE%E7%BD%AE%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E8%AE%BF%E9%97%AEhugo%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1server/</guid>
      <description>场景说明 hugo配合emacs编写博客，借助emacs中org-mode的强大功能，对知识逻辑梳理和层级整理的神级操作，结合hugo+git</description>
    </item>
    
    <item>
      <title>借助环境变量简化shell脚本</title>
      <link>https://it-boyer.github.io/post/old/%E5%80%9F%E5%8A%A9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%AE%80%E5%8C%96shell%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Fri, 09 Aug 2019 15:22:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%80%9F%E5%8A%A9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%AE%80%E5%8C%96shell%E8%84%9A%E6%9C%AC/</guid>
      <description>需求描述 本人使用oh-my-zsh终端主题，它提供了很多快捷命令，还有平时也积累的一些alias快捷命令,配置在.zshrc中，方便每次打开</description>
    </item>
    
    <item>
      <title>hugo文章支持密码访问的小技巧</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/hugo%E6%96%87%E7%AB%A0%E6%94%AF%E6%8C%81%E5%AF%86%E7%A0%81%E8%AE%BF%E9%97%AE%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Fri, 09 Aug 2019 14:00:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/hugo%E6%96%87%E7%AB%A0%E6%94%AF%E6%8C%81%E5%AF%86%E7%A0%81%E8%AE%BF%E9%97%AE%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>给文章添加访问权限,为自己知识产权多一份保障. 本文章基于even主题,添加文章密码. 修改主题even的header.html 1 vi themes/even/layouts/partials/head.html 在head</description>
    </item>
    
    <item>
      <title>优化网络实现方式,重构SDImage组件调用接口</title>
      <link>https://it-boyer.github.io/post/old/%E4%BC%98%E5%8C%96%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F-%E9%87%8D%E6%9E%84sdimage%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Fri, 09 Aug 2019 11:47:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%BC%98%E5%8C%96%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F-%E9%87%8D%E6%9E%84sdimage%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3/</guid>
      <description>&amp;mdash;&amp;ndash;BEGIN PGP MESSAGE&amp;mdash;&amp;ndash; jA0EBwMCUlTuBCTI8Rbk0ukBersHDQQnHsO5+FaUQKR/ZYY6m1lxq+gbwYyCaV0y rDRbuteR30Hqyipc72CjIUWnE1DdqbSsiy7GZdh+oWUPb/cxZUFvZ0tOXStliAHC wGsqab2ewbfstgM9vfHv2dMmfUvbFIFBED0z8Oo7psXyjvUv/06yMLM07Ap9C7jD kARn3Q88hdeHTorDGKPF4sPteAyCA/h0kdgglUSlpAOZP+KqDyz8kj4gGPp/zW3t zJHuYjS8ZrtWjhr0UifLAmgOjIS7glKX2clOTVGv7nyUCfK3ctWOxjtA1Rbf6cKA LTgVrwwLps7E8oe8ATgi4H+0FyQ0gwpt/y6fDzmoelEzHD1MhFkNWAlZJn5USaGI 2E425Zv4MgzfmwAYbr65JUmyNuZAq2JlkvSFFDNZPQ1N2edmpyZf8ZB2LQf9bOcy 836RjOmebZca5ARuFHcUAG/5SjoXf5vL2hPusWhHhPlK9oJNr15rwNt5tFQVv0zL YQUGUtzSAe5iN08sgb7Vj5ZeRDqcIfAm+QbTGSSe5jFIIt3zR4lfaATz7f6g797h vPm11zneE6wu90ltmdZQVkwE2Mq3zGpN5NUwoDDpehoGReZszLfPr+in0khzxgYj bNjeT95BDAHqMdQp/g6YJItGsdlcJzMrcU1JoQkVu4t1pBsz4JSpxqu2VbJCQqDq OsEVNzys/TACtP35rqD3HVPpCypp79gjb+/vTcUlESYRQvHUlemGAJTMGqiu6GUu VwhGvW2+Xii1UJtlN1h0XqKddb6cNJXnjSMaGQOH1mnSVxn5OZxrVm9UCqm8pN1G 9WMEzB8lcJo5nS5DdzbsD/X7hydnARX//Ge/aTQ8Cruw7CTILwqnBaw529HMP8Q4 iFBJcacVfnYz4AEeevvIGXSavzrUkTQGViaoHh/t5rHRLnW7V4EYmykUrbqVKohs pmy77RuQfMA3r37qVKqmKE7Qxy04EGyh/JDhYXCZWmoDW6C1amJfmHzJcKENo22P 577ldYhgZ5GUQ9IEWN/RqxT4sD+2RY+YTf+Ja1jRisN7ocdg7JOLo776MsohS99C XHUv+NhaZC0rWoqX3ge652TmZJp9cDEeE6PxgWPRHKRPHTQeDdErSQSTjfQCUnGT szvB7XFJh/SEf4PjyeWqV5t9d+lLlW37EwuB+ovzFd94GU8tnNlTNnkjPpqobsWy JaljzhDDQXomL+EDaGePIBKB9/fi6CChFNNnGtuuSPCpK6c7/XlUNIRVsI1pOWcs FU29dsxewXfclRW7jl3hs1+FVwErKHwpPVXYTGkIaCSkBUpiDo11Yg== =2Zpw &amp;mdash;&amp;ndash;END PGP MESSAGE&amp;mdash;&amp;ndash;</description>
    </item>
    
    <item>
      <title>hugo 中实现支持 uml 的方式</title>
      <link>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/hugo-%E4%B8%AD%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-uml-%E7%9A%84%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 08 Aug 2019 20:39:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%8A%A1/hugo-%E4%B8%AD%E5%AE%9E%E7%8E%B0%E6%94%AF%E6%8C%81-uml-%E7%9A%84%E6%96%B9%E5%BC%8F/</guid>
      <description>使用 mermaidjs 引入 js 文件:mermaid.min.js 1 2 3 4 5 6 7 vi themes/even/layouts/partials/footer.html #添加下面代码 &amp;lt;!-- mermaid JS --&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; mermaid.initialize({ startOnLoad: true }); &amp;lt;/script&amp;gt; 在 md 文件中添加代码块 1 2 3 4 5 6 &amp;lt;div class=&amp;#34;mermaid&amp;#34;&amp;gt; graph</description>
    </item>
    
    <item>
      <title>ADR和orgmode工具使用</title>
      <link>https://it-boyer.github.io/post/old/adr%E5%92%8Corgmode%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 30 Jul 2019 12:12:32 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/adr%E5%92%8Corgmode%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid>
      <description>工具总结</description>
    </item>
    
    <item>
      <title>VIPER设计模式</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/viper%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 25 Jul 2019 19:27:00 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/viper%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>类图 流程图</description>
    </item>
    
    <item>
      <title>二级布局器流程</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E4%BA%8C%E7%BA%A7%E5%B8%83%E5%B1%80%E5%99%A8%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Mon, 22 Jul 2019 19:35:47 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E4%BA%8C%E7%BA%A7%E5%B8%83%E5%B1%80%E5%99%A8%E6%B5%81%E7%A8%8B/</guid>
      <description>类图 流程图</description>
    </item>
    
    <item>
      <title>用户组管理</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E7%94%A8%E6%88%B7%E7%BB%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 05 Jul 2019 08:26:09 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E7%94%A8%E6%88%B7%E7%BB%84%E7%AE%A1%E7%90%86/</guid>
      <description>扫码登录业务,登录功能新增跳转申请加入业务 .5 配置管理入口:在个人主页添加“用户组管理”(支持修改名入口名)和隐藏显示逻辑 .5 分享二维码:分享组</description>
    </item>
    
    <item>
      <title>定制开源的CLImageEditor图片编辑工具</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E5%AE%9A%E5%88%B6%E5%BC%80%E6%BA%90%E7%9A%84climageeditor%E5%9B%BE%E7%89%87%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 13 Jun 2019 22:19:57 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E5%AE%9A%E5%88%B6%E5%BC%80%E6%BA%90%E7%9A%84climageeditor%E5%9B%BE%E7%89%87%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/</guid>
      <description>定制图片编辑器 关于Other Link Flag的有关说明 1 other link 添加-ObjC 替换为github代理 时序图</description>
    </item>
    
    <item>
      <title>电子巡查项目设计</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Tue, 11 Jun 2019 07:03:20 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/</guid>
      <description>工期预估 整改 录入 用例 时序图 类图 活动图 工期预估 整改 二级布局器入口配置/电子巡查底部详情 1 复用旧版电子整改管理列表(新增过滤器)待定页 1 电子巡查</description>
    </item>
    
    <item>
      <title>iOS使用Realm和FMDB实现弱网下的暂存机制</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E6%9A%82%E5%AD%98%E6%9C%BA%E5%88%B6%E6%97%B6%E5%BA%8F%E5%9B%BE/</link>
      <pubDate>Thu, 30 May 2019 18:46:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E6%9A%82%E5%AD%98%E6%9C%BA%E5%88%B6%E6%97%B6%E5%BA%8F%E5%9B%BE/</guid>
      <description>github项目 UML时序图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 title 时序图 center</description>
    </item>
    
    <item>
      <title>SSH命令安装及使用</title>
      <link>https://it-boyer.github.io/post/old/shell/ssh%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 26 Feb 2019 18:16:23 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/ssh%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
      <description>写下这篇文章的目的是为了更清楚的讲解和展现ssh的用法和操作，避免网上庞杂的文章和材料影响新手的学习过程。所以如果你是为老手，可以略过这篇文</description>
    </item>
    
    <item>
      <title>iOS系统的shell工具blink</title>
      <link>https://it-boyer.github.io/post/old/shell/ios%E7%B3%BB%E7%BB%9F%E7%9A%84shell%E5%B7%A5%E5%85%B7blink/</link>
      <pubDate>Tue, 26 Feb 2019 18:11:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/ios%E7%B3%BB%E7%BB%9F%E7%9A%84shell%E5%B7%A5%E5%85%B7blink/</guid>
      <description>简介 用于iOS的Blink Shell(为更多Shell util进行了编辑) Blink是第一个利用Mosh和SSH支持的专业桌面级iOS终端。</description>
    </item>
    
    <item>
      <title>Guaka快速创建swift命令行CLI的工具</title>
      <link>https://it-boyer.github.io/post/old/macos/guaka%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAswift%E5%91%BD%E4%BB%A4%E8%A1%8Ccli%E7%9A%84%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 18 Nov 2018 19:10:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/guaka%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAswift%E5%91%BD%E4%BB%A4%E8%A1%8Ccli%E7%9A%84%E5%B7%A5%E5%85%B7/</guid>
      <description>{% github nsomar Guaka 7d6135f width = 30% %} Guaka介绍 通过 Guaka Framework 来实现 CLI(command-line interface)。 该框架可以快速实现如下的效果： 1 git checkout -v &amp;#34;url&amp;#34; git 就是一个 CLI，checko</description>
    </item>
    
    <item>
      <title>使用swift命令行抓取WWDC字幕</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%BD%BF%E7%94%A8swift%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%93%E5%8F%96wwdc%E5%AD%97%E5%B9%95/</link>
      <pubDate>Sun, 18 Nov 2018 19:10:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%BD%BF%E7%94%A8swift%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%93%E5%8F%96wwdc%E5%AD%97%E5%B9%95/</guid>
      <description>{% github it-boyer WWDC-Subtitles 84878dc width = 30% %} 平时没有那么大段的时间能去看这些 session 的视频，想先通过字幕能了解到 session 中的内容，所以搜罗了网上大牛抓取WWDC字幕的相关实现。 原</description>
    </item>
    
    <item>
      <title>Swift的动态性</title>
      <link>https://it-boyer.github.io/post/old/swift/swift%E7%9A%84%E5%8A%A8%E6%80%81%E6%80%A7/</link>
      <pubDate>Sat, 10 Nov 2018 09:14:55 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swift%E7%9A%84%E5%8A%A8%E6%80%81%E6%80%A7/</guid>
      <description>Foundation Foundation 框架实现了基于运行时一个特性的两个API： 键值编码 (key-value-coding, KVC) 键值观察 (key-value observing, KVO) KVC 和 KVO 允许我们将 UI 和数据进行绑定，这也是 Rx 以及其他响应式框架实现的基</description>
    </item>
    
    <item>
      <title>Chisel-xcodeproj框架的使用</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/chisel-xcodeproj%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 09 Nov 2018 13:05:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/chisel-xcodeproj%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github it-boyer chisel f331dc6 width = 30% %} 这个pull请求添加findinstances命令，该命令完成Add findinstances, and new support framework in Chisel.xcodeproj 和Add Makefile for installing framework的工作。</description>
    </item>
    
    <item>
      <title>makefile自动化编译工具</title>
      <link>https://it-boyer.github.io/post/old/shell/makefile%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 08 Nov 2018 20:30:54 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/makefile%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</guid>
      <description>make命令执行时，需要一个makefile文件，以告诉make命令需要怎么样的去编译和链接程序。 首先，我们用一个示例来说明makefile</description>
    </item>
    
    <item>
      <title>使用Sphinx制作简洁而又美观的文档</title>
      <link>https://it-boyer.github.io/post/old/hexo/%E4%BD%BF%E7%94%A8sphinx%E5%88%B6%E4%BD%9C%E7%AE%80%E6%B4%81%E8%80%8C%E5%8F%88%E7%BE%8E%E8%A7%82%E7%9A%84%E6%96%87%E6%A1%A3/</link>
      <pubDate>Wed, 07 Nov 2018 12:27:56 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/%E4%BD%BF%E7%94%A8sphinx%E5%88%B6%E4%BD%9C%E7%AE%80%E6%B4%81%E8%80%8C%E5%8F%88%E7%BE%8E%E8%A7%82%E7%9A%84%E6%96%87%E6%A1%A3/</guid>
      <description>{% github it-boyer width = 30% %} 使用 sphinx 制作简洁而又美观的文档 安装 1 2 3 4 5 6 7 8 9 $ easy_install sphinx Searching for sphinx Reading http://pypi.python.org/simple/sphinx/ Reading http://sphinx.pocoo.org/ Best match: Sphinx 1.0.5 Downloading http://pypi.python.org/packages/[...] Processing Sphinx-1.0.5-py2.5.egg [...] Finished processing dependencies for sphinx 创建工程 1 2 3 4 5 6 $ sphinx-quickstart Welcome to</description>
    </item>
    
    <item>
      <title>swift混编及Framework和静态库的支持</title>
      <link>https://it-boyer.github.io/post/old/swift/swift%E6%B7%B7%E7%BC%96%E5%8F%8Aframework%E5%92%8C%E9%9D%99%E6%80%81%E5%BA%93%E7%9A%84%E6%94%AF%E6%8C%81/</link>
      <pubDate>Wed, 31 Oct 2018 21:19:06 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swift%E6%B7%B7%E7%BC%96%E5%8F%8Aframework%E5%92%8C%E9%9D%99%E6%80%81%E5%BA%93%E7%9A%84%E6%94%AF%E6%8C%81/</guid>
      <description>swift和OC混编 OC oc调用swift framework/swift静态库 oc静态库调用swift/oc的framework oc静态库调用</description>
    </item>
    
    <item>
      <title>使用Fastlane持续集成开发</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%BD%BF%E7%94%A8fastlane%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 24 Oct 2018 12:45:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%BD%BF%E7%94%A8fastlane%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91/</guid>
      <description>{% github it-boyer width = 30% %} 持续集成 在框架开发中，一个优秀的持续集成环境是至关重要的。CI 可以保证潜在的贡献者在有保障的情况下对代码进行修改，减小了框架的</description>
    </item>
    
    <item>
      <title>cocoapods如何自动化管理项目依赖</title>
      <link>https://it-boyer.github.io/post/old/macos/cocoapods%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96/</link>
      <pubDate>Tue, 23 Oct 2018 20:29:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/cocoapods%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96/</guid>
      <description>通过介绍项目相关的属性配置，来了解cocoapods如何自动化管理项目依赖的。最后会通过自定义ruby脚本来演示。 cocoapods偶现问题</description>
    </item>
    
    <item>
      <title>将Playground作为项目的单元测试</title>
      <link>https://it-boyer.github.io/post/old/swift/%E5%B0%86playground%E4%BD%9C%E4%B8%BA%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 22 Oct 2018 16:52:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/%E5%B0%86playground%E4%BD%9C%E4%B8%BA%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid>
      <description>在Perfect项目中增加playground： 新建Perfect.xcodeproj和PerfectPlayground 新建一个Xcode</description>
    </item>
    
    <item>
      <title>新组件开发流程及打包证书配置</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E6%96%B0%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B%E5%8F%8A%E6%89%93%E5%8C%85%E8%AF%81%E4%B9%A6%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 22 Oct 2018 16:52:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E6%96%B0%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B%E5%8F%8A%E6%89%93%E5%8C%85%E8%AF%81%E4%B9%A6%E9%85%8D%E7%BD%AE/</guid>
      <description>新组件开发/发布的流程 原理：在build程序包之前，会根据平台提供的程序包的组件依赖信息，来other linker flags进行删减更新，仅保留依赖包</description>
    </item>
    
    <item>
      <title>Swift访问REST服务开发TrelloAPI</title>
      <link>https://it-boyer.github.io/post/old/macos/swift%E8%AE%BF%E9%97%AErest%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91trelloapi/</link>
      <pubDate>Mon, 22 Oct 2018 08:30:26 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/swift%E8%AE%BF%E9%97%AErest%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91trelloapi/</guid>
      <description></description>
    </item>
    
    <item>
      <title>使用screen在后台运行进程</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8screen%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Sun, 21 Oct 2018 22:42:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8screen%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E8%BF%9B%E7%A8%8B/</guid>
      <description>screen 支持会话恢复 当我们开启screen后，只要screen进程没有终止，其内部运行的会话都可以恢复。网络连接中断临时，用户也可以进入开启的sc</description>
    </item>
    
    <item>
      <title>基于Chisel自定义python调试命令</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E5%9F%BA%E4%BA%8Echisel%E8%87%AA%E5%AE%9A%E4%B9%89python%E8%B0%83%E8%AF%95%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 21 Oct 2018 09:03:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E5%9F%BA%E4%BA%8Echisel%E8%87%AA%E5%AE%9A%E4%B9%89python%E8%B0%83%E8%AF%95%E5%91%BD%E4%BB%A4/</guid>
      <description>{% github it-boyer chisel 56d0e0d width = 30% %} 管理.lldbinit .lldbinit每次启动Xcode 都会加载lldb环境，故当自定义命令写好之后，可以通过这里加载。</description>
    </item>
    
    <item>
      <title>fork印象笔记SDK支持pod安装</title>
      <link>https://it-boyer.github.io/post/old/macos/fork%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0sdk%E6%94%AF%E6%8C%81pod%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 21 Oct 2018 00:12:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/fork%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0sdk%E6%94%AF%E6%8C%81pod%E5%AE%89%E8%A3%85/</guid>
      <description>{% github it-boyer evernote-sdk-mac fd5da70 width = 30% %} 制作pod支持 fork 并clone代码 1 git clone https://github.com/evernote/evernote-sdk-mac.git 创建pod spec索引文件 1 2 $ cd evernote-sdk-mac $ pod spec create EvernoteSDK https://github.com/it-boyer/evernote-sdk-mac.git 编写配置文件 设置支持的平台，源码目</description>
    </item>
    
    <item>
      <title>config配置个人文档库专栏</title>
      <link>https://it-boyer.github.io/post/old/hexo/config%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3%E5%BA%93%E4%B8%93%E6%A0%8F/</link>
      <pubDate>Sat, 20 Oct 2018 13:54:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/config%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E6%96%87%E6%A1%A3%E5%BA%93%E4%B8%93%E6%A0%8F/</guid>
      <description>{% github it-boyer blogDocs 978ed39 width = 30% %} 忽略配置 文档库主要整理kindle读书笔记，jazzy文档相关html页面，放在hexo中不需要经过md转换html过程。</description>
    </item>
    
    <item>
      <title>安装ruby及chruby版本管理</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%AE%89%E8%A3%85ruby%E5%8F%8Achruby%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 19 Oct 2018 15:58:23 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E5%AE%89%E8%A3%85ruby%E5%8F%8Achruby%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</guid>
      <description>{% github postmodern ruby-install ea2b8bb width = 30% %} 安装工具ruby-install 1 $ brew install ruby-install 安装指定 Ruby 版本 方式一：使用Homebrew安装 1 2 $ ruby-install ruby 2.4.1 $ ruby-install --system ruby #覆盖系统版本</description>
    </item>
    
    <item>
      <title>用Hexo做个人Wiki知识管理系统</title>
      <link>https://it-boyer.github.io/post/old/hexo/%E7%94%A8hexo%E5%81%9A%E4%B8%AA%E4%BA%BAwiki%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Thu, 18 Oct 2018 20:51:48 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/%E7%94%A8hexo%E5%81%9A%E4%B8%AA%E4%BA%BAwiki%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</guid>
      <description>起始 知识是自己构建出来的，不是别人灌输的，也不是看了各种资料背住就完了。所谓构建，是指接受信息输入之后，通过信息整理加工，消化转变为自己理解</description>
    </item>
    
    <item>
      <title>同步印象笔记到hexo博客</title>
      <link>https://it-boyer.github.io/post/old/hexo/%E5%90%8C%E6%AD%A5%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%88%B0hexo%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 18 Oct 2018 20:25:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/%E5%90%8C%E6%AD%A5%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%88%B0hexo%E5%8D%9A%E5%AE%A2/</guid>
      <description>{% github everblogjs everblog-adaptor-hexo 3c081de width = 30% %} {% github everblogjs everblog b1832a6 width = 30% %} Everblog ——使用 Evernote 写博客 印象笔记+hexo搭建自己的个人博客 申请印象笔记token 邮件申请： 1 2 3 欢迎使用印象</description>
    </item>
    
    <item>
      <title>在我的插件中配置多种类型菜单的步骤</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%9C%A8%E6%88%91%E7%9A%84%E6%8F%92%E4%BB%B6%E4%B8%AD%E9%85%8D%E7%BD%AE%E5%A4%9A%E7%A7%8D%E7%B1%BB%E5%9E%8B%E8%8F%9C%E5%8D%95%E7%9A%84%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Wed, 17 Oct 2018 21:01:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%9C%A8%E6%88%91%E7%9A%84%E6%8F%92%E4%BB%B6%E4%B8%AD%E9%85%8D%E7%BD%AE%E5%A4%9A%E7%A7%8D%E7%B1%BB%E5%9E%8B%E8%8F%9C%E5%8D%95%E7%9A%84%E6%AD%A5%E9%AA%A4/</guid>
      <description>在我的中新增智慧决策菜单 先搜集菜单信息 name:菜单名称，必填，显示在我的页面的cell上。 componentId: 业务ID，必填项，通过该字段控制前端权限/业务</description>
    </item>
    
    <item>
      <title>xcode调试中引用python脚本</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/xcode%E8%B0%83%E8%AF%95%E4%B8%AD%E5%BC%95%E7%94%A8python%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 17 Oct 2018 19:47:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/xcode%E8%B0%83%E8%AF%95%E4%B8%AD%E5%BC%95%E7%94%A8python%E8%84%9A%E6%9C%AC/</guid>
      <description>Xcode集成了LLDB，进一步简化了程序调试流程。虽然LLDB很强大，但是它的命令很有限。所幸的是，lldb包含了对python的支持，使</description>
    </item>
    
    <item>
      <title>CommandLineTool使用pod依赖库开发</title>
      <link>https://it-boyer.github.io/post/old/macos/commandlinetool%E4%BD%BF%E7%94%A8pod%E4%BE%9D%E8%B5%96%E5%BA%93%E5%BC%80%E5%8F%91/</link>
      <pubDate>Tue, 16 Oct 2018 17:08:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/commandlinetool%E4%BD%BF%E7%94%A8pod%E4%BE%9D%E8%B5%96%E5%BA%93%E5%BC%80%E5%8F%91/</guid>
      <description>问题 #3707 1 dyld: Library not loaded: @rpath/FilesProvider.framework/Versions/A/FilesProvider 结论：cocoa pods不支持Command Line Tool项目 Cocoapods + Command Line Tool - dyld: Library not loaded: @rpath/Realm.framework/Versions/A/Realm cocoa pods不支持Command Line Tool项</description>
    </item>
    
    <item>
      <title>swift调用pngquant批量压缩图片</title>
      <link>https://it-boyer.github.io/post/old/macos/swift%E8%B0%83%E7%94%A8pngquant%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/</link>
      <pubDate>Mon, 15 Oct 2018 20:51:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/swift%E8%B0%83%E7%94%A8pngquant%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/</guid>
      <description>{% github amosavian FileProvider b597244 width = 30% %} 安装FilesProvider 使用FilesProvider来做文件处理，通过SPM管理库依赖 配置Package.swif</description>
    </item>
    
    <item>
      <title>使用swift开发自己的命令行工具</title>
      <link>https://it-boyer.github.io/post/old/swift/%E4%BD%BF%E7%94%A8swift%E5%BC%80%E5%8F%91%E8%87%AA%E5%B7%B1%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 15 Oct 2018 19:30:26 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/%E4%BD%BF%E7%94%A8swift%E5%BC%80%E5%8F%91%E8%87%AA%E5%B7%B1%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid>
      <description>{% github it-boyer Panagram_Final 8023350 width = 30% %} Command Line Programs on macOS Tutorial swift编写命令行工具 更新7/21/17:macOS教程上的命令行程序已经更新为Xcode 9和Swift 4。</description>
    </item>
    
    <item>
      <title>Swift直接调用Python函数库</title>
      <link>https://it-boyer.github.io/post/old/swift/swift%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8python%E5%87%BD%E6%95%B0%E5%BA%93/</link>
      <pubDate>Mon, 15 Oct 2018 17:22:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swift%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8python%E5%87%BD%E6%95%B0%E5%BA%93/</guid>
      <description>{% github PerfectlySoft Perfect-Python 63589be width = 30% %} Perfect - Python 本项目提供了在Swift服务器应用上直接引用Python 2.7函数库的简便方法。 本项目采用Swift Package Manager 软件包管理器</description>
    </item>
    
    <item>
      <title>Swift调用AppleScript脚本和Shell脚本</title>
      <link>https://it-boyer.github.io/post/old/swift/swift%E8%B0%83%E7%94%A8applescript%E8%84%9A%E6%9C%AC%E5%92%8Cshell%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Mon, 15 Oct 2018 17:22:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swift%E8%B0%83%E7%94%A8applescript%E8%84%9A%E6%9C%AC%E5%92%8Cshell%E8%84%9A%E6%9C%AC/</guid>
      <description>当想让自己的app支持播放，但有没有足够的时间来开发自己的播放器，可以先考虑用mpv播放器来实现相关功能，这是AppleScript作为互通</description>
    </item>
    
    <item>
      <title>批量压缩png图片工具</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9png%E5%9B%BE%E7%89%87%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 15 Oct 2018 15:21:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9png%E5%9B%BE%E7%89%87%E5%B7%A5%E5%85%B7/</guid>
      <description>{% github it-boyer width = 30% %} pngquant 使用pngquant批量压缩png 编写批量处理脚本 vi compresspng.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35</description>
    </item>
    
    <item>
      <title>自动生成icon@2x@1x</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90icon2x1x/</link>
      <pubDate>Mon, 15 Oct 2018 15:21:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90icon2x1x/</guid>
      <description>{% github rickytan RTImageAssets cf0a641 width = 30% %} 自动生成所有所需的应用程序图标 https://github.com/rickytan/RTImageAssets iOS开发工具：自动生成@2x,@3x图片 IconMaker程序生成icon {% gist 816b7ef296219d14edac %} 通过原</description>
    </item>
    
    <item>
      <title>Zsh插件之github使用</title>
      <link>https://it-boyer.github.io/post/old/git/zsh%E6%8F%92%E4%BB%B6%E4%B9%8Bgithub%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 15 Oct 2018 08:26:32 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/zsh%E6%8F%92%E4%BB%B6%E4%B9%8Bgithub%E4%BD%BF%E7%94%A8/</guid>
      <description>github插件 This plugin supports working with GitHub from the command line. It provides a few things: Sets up the hub wrapper and completions for the git command if you have hub installed. Completion for the github Ruby gem. Convenience functions for working with repos and URLs. Functions empty_gh - Creates a new empty repo (with a README.md) and pushes it to GitHub new_gh</description>
    </item>
    
    <item>
      <title>Android安装BusyBox</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/android%E5%AE%89%E8%A3%85busybox/</link>
      <pubDate>Mon, 15 Oct 2018 08:10:09 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/android%E5%AE%89%E8%A3%85busybox/</guid>
      <description>大家是否有过这样的经历，在命令行里输入adb shell，然后使用命令操作你的手机或模拟器，但是那些命令都是常见Linux命令的阉割缩水版，用</description>
    </item>
    
    <item>
      <title>了解手机处理器ARM</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E4%BA%86%E8%A7%A3%E6%89%8B%E6%9C%BA%E5%A4%84%E7%90%86%E5%99%A8arm/</link>
      <pubDate>Mon, 15 Oct 2018 08:04:57 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E4%BA%86%E8%A7%A3%E6%89%8B%E6%9C%BA%E5%A4%84%E7%90%86%E5%99%A8arm/</guid>
      <description>Arm处理器，因为其低功耗和小尺寸而闻名，几乎所有的手机处理器都基于arm，其在嵌入式系统中的应用非常广泛，它的性能在同等功耗产品中也很出色</description>
    </item>
    
    <item>
      <title>Docker安装在android系统</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/docker%E5%AE%89%E8%A3%85%E5%9C%A8android%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 14 Oct 2018 23:47:06 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/docker%E5%AE%89%E8%A3%85%E5%9C%A8android%E7%B3%BB%E7%BB%9F/</guid>
      <description>Using Docker on Android - Stack Overflow Installing, running, using docker on armhf (ARMv7)devices</description>
    </item>
    
    <item>
      <title>package_json文件配置说明</title>
      <link>https://it-boyer.github.io/post/old/shell/package_json%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Sun, 14 Oct 2018 23:47:05 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/package_json%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</guid>
      <description>npm 与 package.json 快速入门教程 每个项目的根目录下一般都有一个package.json文件，定义项目所需要的各种模块，以及项目的配置信息。npm insta</description>
    </item>
    
    <item>
      <title>opkg在小米路由器的使用</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/opkg%E5%9C%A8%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 14 Oct 2018 23:27:01 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/opkg%E5%9C%A8%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github openwrt openwrt 759f111 width = 30% %} openwrt.io 小米路由器固件信息 路由器read-only file system怎么改权限 1 mount -o remount,rw / 新建配置 备份初始conf 1 mv /etc/opkg.conf /etc/opkg.conf.bak 开始配置 vim /etc/opkg.conf</description>
    </item>
    
    <item>
      <title>brew升级git版本</title>
      <link>https://it-boyer.github.io/post/old/git/brew%E5%8D%87%E7%BA%A7git%E7%89%88%E6%9C%AC/</link>
      <pubDate>Fri, 12 Oct 2018 19:56:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/brew%E5%8D%87%E7%BA%A7git%E7%89%88%E6%9C%AC/</guid>
      <description>1 2 3 4 $ brew doctor $ brew install git $ brew link --overwrite git Linking /usr/local/Cellar/git/2.19.1... 216 symlinks created</description>
    </item>
    
    <item>
      <title>为Pod的库创建演示文件SwiftPlayground</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%B8%BApod%E7%9A%84%E5%BA%93%E5%88%9B%E5%BB%BA%E6%BC%94%E7%A4%BA%E6%96%87%E4%BB%B6swiftplayground/</link>
      <pubDate>Fri, 12 Oct 2018 19:56:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%B8%BApod%E7%9A%84%E5%BA%93%E5%88%9B%E5%BB%BA%E6%BC%94%E7%A4%BA%E6%96%87%E4%BB%B6swiftplayground/</guid>
      <description>{% github asmallteapot cocoapods-playgrounds c54b492 width = 30% %} issues 62 在playground中优雅的使用Pod This Could Be Us But You Playing Generates a Swift Playground for any Pod. Installation $ gem install cocoapods-playgrounds Usage CocoaPods To generate a Playground for a specific Pod: 1 $ pod playgrounds Alamofire To generate a Playground for</description>
    </item>
    
    <item>
      <title>在playground中执行异步方法</title>
      <link>https://it-boyer.github.io/post/old/swift/%E5%9C%A8playground%E4%B8%AD%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 12 Oct 2018 19:56:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/%E5%9C%A8playground%E4%B8%AD%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E6%96%B9%E6%B3%95/</guid>
      <description>PLAYGROUND 延时运行引入 Playground 的XCPlayground扩展包框架,其中就包括使 Playground 能延时执行的黑魔法，needsIndefiniteExecution(需</description>
    </item>
    
    <item>
      <title>安装Material主题</title>
      <link>https://it-boyer.github.io/post/old/hexo/%E5%AE%89%E8%A3%85material%E4%B8%BB%E9%A2%98/</link>
      <pubDate>Fri, 12 Oct 2018 19:33:01 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/%E5%AE%89%E8%A3%85material%E4%B8%BB%E9%A2%98/</guid>
      <description>Hexo + Material + Github 搭建博客与配置 {% github viosey hexo-theme-material d93c5a8 width = 30% %} 注意！ 在主题的开发迭代过程中，主题的配置文件模板 可能会改动。为了避免使用 git pull 更新主题的用户出现冲突</description>
    </item>
    
    <item>
      <title>hexo作图插件</title>
      <link>https://it-boyer.github.io/post/old/hexo/hexo%E4%BD%9C%E5%9B%BE%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Fri, 12 Oct 2018 16:05:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hexo%E4%BD%9C%E5%9B%BE%E6%8F%92%E4%BB%B6/</guid>
      <description>1 2 &amp;#34;hexo-filter-flowchart&amp;#34;: &amp;#34;^1.0.4&amp;#34;, &amp;#34;hexo-filter-sequence&amp;#34;: &amp;#34;^1.0.3&amp;#34;, 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #作图插件 sequence:# webfont: https://cdnjs.cloudflare.com/ajax/libs/webfont/1.6.27/webfontloader.js # snap: https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js # underscore: https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js # sequence: https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js # css: # optional, the url for css, such as hand drawn theme options:theme:simplecss_class:flowchart:# raphael: # optional, the source url of raphael.js # flowchart: # optional, the source url of flowchart.js options:# options</description>
    </item>
    
    <item>
      <title>博客生成restful风格的json数据源</title>
      <link>https://it-boyer.github.io/post/old/hexo/%E5%8D%9A%E5%AE%A2%E7%94%9F%E6%88%90restful%E9%A3%8E%E6%A0%BC%E7%9A%84json%E6%95%B0%E6%8D%AE%E6%BA%90/</link>
      <pubDate>Fri, 12 Oct 2018 15:36:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/%E5%8D%9A%E5%AE%A2%E7%94%9F%E6%88%90restful%E9%A3%8E%E6%A0%BC%E7%9A%84json%E6%95%B0%E6%8D%AE%E6%BA%90/</guid>
      <description>hexo-generator-restful 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ## API接口：以下为默认配置，属性值为 false 表示不生成。 restful: #http://npm.taobao.org/package/hexo-generator-restful # site 可配置为数组选择性生成某些属性 #</description>
    </item>
    
    <item>
      <title>git-lfs命令工具使用</title>
      <link>https://it-boyer.github.io/post/old/git/git-lfs%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 11 Oct 2018 17:58:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/git-lfs%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github git-lfs git-lfs 45c4568 width = 30% %} git-lfs官网 LFS其实是git的一个扩展，并没有改变git的工作方式，有点像耍了个小花招，把指定需要lfs管理的文件</description>
    </item>
    
    <item>
      <title>gist命令工具使用</title>
      <link>https://it-boyer.github.io/post/old/git/gist%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 11 Oct 2018 17:17:52 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/gist%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github defunkt gist 8d86604 width = 30% %} 按照gist 安装gist 1 brew install gist 创建gist 上传a.rb中的代码段： 1 gist a.rb 上传多个文件a.rb,b.rb,c.rb的代码段</description>
    </item>
    
    <item>
      <title>subtree拆分大的git库到多个独立git库</title>
      <link>https://it-boyer.github.io/post/old/git/subtree%E6%8B%86%E5%88%86%E5%A4%A7%E7%9A%84git%E5%BA%93%E5%88%B0%E5%A4%9A%E4%B8%AA%E7%8B%AC%E7%AB%8Bgit%E5%BA%93/</link>
      <pubDate>Tue, 09 Oct 2018 12:07:55 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/subtree%E6%8B%86%E5%88%86%E5%A4%A7%E7%9A%84git%E5%BA%93%E5%88%B0%E5%A4%9A%E4%B8%AA%E7%8B%AC%E7%AB%8Bgit%E5%BA%93/</guid>
      <description>Git 仓库拆拆拆 拆分一个子目录为独立仓库 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 这就是那个大仓库 big-project $ git clone git@github.com:tom/big-project.git $ cd big-project # 把所有 `codes-eiyo` 目录下的相关提交整理为一个新的分</description>
    </item>
    
    <item>
      <title>zsh插件之gi使用说明</title>
      <link>https://it-boyer.github.io/post/old/git/zsh%E6%8F%92%E4%BB%B6%E4%B9%8Bgi%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Tue, 09 Oct 2018 12:04:55 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/zsh%E6%8F%92%E4%BB%B6%E4%B9%8Bgi%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>{% github joeblau gitignore.io a09921d width = 30% %} 配置zsh支持插件gi命令 先浏览oh-my-zsh/plugins目录下支持所有插件,找到gi命令的插件名称：gitign</description>
    </item>
    
    <item>
      <title>使用gem升级pod方法</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8gem%E5%8D%87%E7%BA%A7pod%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 06 Oct 2018 14:50:12 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8gem%E5%8D%87%E7%BA%A7pod%E6%96%B9%E6%B3%95/</guid>
      <description>升级cocopods 1 2 3 4 5 6 sudo gem update --system gem source -l pod setup pod repo update --verbose sudo gem install cocoapods --pre sudo gem cleanup gem source 1 2 3 4 $ gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/ $ gem sources -l https://gems.ruby-china.com # 确保只有 gems.ruby-china.com 腾讯云： https://gems.ruby-china.com/ 淘宝：h</description>
    </item>
    
    <item>
      <title>配置Podfile支持playground导入库</title>
      <link>https://it-boyer.github.io/post/old/macos/%E9%85%8D%E7%BD%AEpodfile%E6%94%AF%E6%8C%81playground%E5%AF%BC%E5%85%A5%E5%BA%93/</link>
      <pubDate>Sat, 06 Oct 2018 14:50:12 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E9%85%8D%E7%BD%AEpodfile%E6%94%AF%E6%8C%81playground%E5%AF%BC%E5%85%A5%E5%BA%93/</guid>
      <description>pod支持问题 xcode-playground-with-cocoapods You could use ThisCouldBeUsButYouPlaying or add this to your Podfile xcode7.3.1和cocoapods1.0版本导致playground无法import相关动态库 Rx</description>
    </item>
    
    <item>
      <title>设置环境变量的profile与bash_profile区别</title>
      <link>https://it-boyer.github.io/post/old/shell/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84profile%E4%B8%8Ebash_profile%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 05 Oct 2018 09:32:44 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84profile%E4%B8%8Ebash_profile%E5%8C%BA%E5%88%AB/</guid>
      <description>profile文件 1.1 profile文件的作用 profile(/etc/profile)，用于设置系统级的环境变量和启动程序，在这个文件下配置</description>
    </item>
    
    <item>
      <title>vim一般模式下查找和替换命令</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 04 Oct 2018 23:48:08 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/vim%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4/</guid>
      <description>/,?查找命令 /word 向下查找word字符串 ?word向上查找word字符串 组合查找 n: 代表重复前一个查找的操作 N:反向进行前一个查找操作 s/old</description>
    </item>
    
    <item>
      <title>shell脚本路径和执行的路径区别</title>
      <link>https://it-boyer.github.io/post/old/shell/shell%E8%84%9A%E6%9C%AC%E8%B7%AF%E5%BE%84%E5%92%8C%E6%89%A7%E8%A1%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 04 Oct 2018 13:52:19 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/shell%E8%84%9A%E6%9C%AC%E8%B7%AF%E5%BE%84%E5%92%8C%E6%89%A7%E8%A1%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E5%8C%BA%E5%88%AB/</guid>
      <description>获取shell脚本文件的绝对路径 basepath=$(cd dirname $0; pwd) echo &amp;ldquo;sh脚本文件的绝对路径：$basepath&amp;rdquo; 当前执行脚本的路径 echo &amp;ldq</description>
    </item>
    
    <item>
      <title>RxSwift应用登录验证</title>
      <link>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/rxswift%E5%BA%94%E7%94%A8%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81/</link>
      <pubDate>Thu, 04 Oct 2018 09:04:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/rxswift%E5%BA%94%E7%94%A8%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81/</guid>
      <description>{% github it-boyer SimpleValidation fb7a58b width = 30% %} {% meting &amp;ldquo;0036mZ7Q1pk7st&amp;rdquo; &amp;ldquo;tencent&amp;rdquo; &amp;ldquo;song&amp;rdquo; %} 使用RxSwift的优点 RxSwift的目的是让让数据/事件流和异步任务能够更方便的序列化处理，能够使用swi</description>
    </item>
    
    <item>
      <title>自动初始化Gitalk和Gitment评论</title>
      <link>https://it-boyer.github.io/post/old/hexo/%E8%87%AA%E5%8A%A8%E5%88%9D%E5%A7%8B%E5%8C%96gitalk%E5%92%8Cgitment%E8%AF%84%E8%AE%BA/</link>
      <pubDate>Wed, 03 Oct 2018 16:16:25 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/%E8%87%AA%E5%8A%A8%E5%88%9D%E5%A7%8B%E5%8C%96gitalk%E5%92%8Cgitment%E8%AF%84%E8%AE%BA/</guid>
      <description>Hexo添加Gitalk评论插件 自动初始化 Gitalk 和 Gitment 评论 Gitment/Gitalk自动初始化</description>
    </item>
    
    <item>
      <title>Heroku部署web服务器</title>
      <link>https://it-boyer.github.io/post/old/hexo/heroku%E9%83%A8%E7%BD%B2web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Wed, 03 Oct 2018 12:29:51 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/heroku%E9%83%A8%E7%BD%B2web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>安装Heroku CLI工具 Mac端 1 brew install heroku/brew/heroku Heroku CLI 命令 1 2 heroku -h heroku login Creating Apps from the CLI 1 2 3 4 5 6 7 $ mkdir example $ cd example $ git init $ heroku apps:create example Creating ⬢ example... done https://example.herokuapp.com/ | https://git.heroku.com/example.git Git remote heroku added 查看现</description>
    </item>
    
    <item>
      <title>hexo集成gitment评论系统</title>
      <link>https://it-boyer.github.io/post/old/hexo/hexo%E9%9B%86%E6%88%90gitment%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 03 Oct 2018 00:54:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hexo%E9%9B%86%E6%88%90gitment%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</guid>
      <description>安装gitment 在package.json文件添加gitment依赖： 1 &amp;#34;gitment&amp;#34;: &amp;#34;^0.0.3&amp;#34; 安装 1 npm install 申请应用 首先去New OAuth App为你的博客应用一个密钥:</description>
    </item>
    
    <item>
      <title>Instrument使用Signposts工具</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/instrument%E4%BD%BF%E7%94%A8signposts%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 02 Oct 2018 23:19:55 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/instrument%E4%BD%BF%E7%94%A8signposts%E5%B7%A5%E5%85%B7/</guid>
      <description>引言 性能是实现卓越的用户体验的关键之一。当应用或者游戏表现的运行迅速，反应灵敏时，用户会更喜欢。但是软件是很复杂的，当你的应用视图做某事时，</description>
    </item>
    
    <item>
      <title>Xcode10新特性</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode10%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Tue, 02 Oct 2018 13:18:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode10%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>Xcode 10 Xcode 10在macOS Mojave的黑暗模式下看起来非常棒，也让你很容易在macOS应用程序中采用新的外观。Xcode 10测试版包括Swif</description>
    </item>
    
    <item>
      <title>SPM搭建Perfect模版服务器</title>
      <link>https://it-boyer.github.io/post/old/macos/spm%E6%90%AD%E5%BB%BAperfect%E6%A8%A1%E7%89%88%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Tue, 02 Oct 2018 11:13:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/spm%E6%90%AD%E5%BB%BAperfect%E6%A8%A1%E7%89%88%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>Perfect简介 {% github PerfectlySoft Perfect 60e44e4 width = 30% %} 目前比较流行服务端框架主要有Vapor、Perfect、Kitura和Zewo，他们各有长短，本人这次主</description>
    </item>
    
    <item>
      <title>使用SPM管理依赖库</title>
      <link>https://it-boyer.github.io/post/old/swift/%E4%BD%BF%E7%94%A8spm%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96%E5%BA%93/</link>
      <pubDate>Mon, 01 Oct 2018 23:57:27 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/%E4%BD%BF%E7%94%A8spm%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96%E5%BA%93/</guid>
      <description>概念概述 Package Manager {% github it-boyer PerfectTemplate 20294e56 width = 30% %} Modules模块 在 Swift 中我们使用模块来管理代码，每个模块指定一个命名空间并强制指定模块外哪些部分的代码是可以被</description>
    </item>
    
    <item>
      <title>Swift单文件相关命令行工具</title>
      <link>https://it-boyer.github.io/post/old/swift/swift%E5%8D%95%E6%96%87%E4%BB%B6%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 01 Oct 2018 21:02:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swift%E5%8D%95%E6%96%87%E4%BB%B6%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid>
      <description>直接用 swift 命令执行 xcrun swift可以直接将一个 .swift文件作为命令行工具的输入，这样里面的代码也会被自动地编译和执行。我们甚至还可以在 .swift 文件</description>
    </item>
    
    <item>
      <title>swift在终端使用LLDB调试</title>
      <link>https://it-boyer.github.io/post/old/swift/swift%E5%9C%A8%E7%BB%88%E7%AB%AF%E4%BD%BF%E7%94%A8lldb%E8%B0%83%E8%AF%95/</link>
      <pubDate>Mon, 01 Oct 2018 21:02:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swift%E5%9C%A8%E7%BB%88%E7%AB%AF%E4%BD%BF%E7%94%A8lldb%E8%B0%83%E8%AF%95/</guid>
      <description>Using the LLDB Debugger 使用LLDB调试器一步一步地运行Swift程序，通过设置断点调试运行状态。 创建一个名Factorial.swift，定义了一个fac</description>
    </item>
    
    <item>
      <title>SPM相关命令工具</title>
      <link>https://it-boyer.github.io/post/old/swift/spm%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 01 Oct 2018 14:52:23 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/spm%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7/</guid>
      <description>概念概述 getting-started {% github it-boyer PerfectTemplate 20294e56 width = 30% %} 使用Swift编译系统 Swift 编译系统为编译库、可执行文件和在不同工程之间共享代码提供了基本的约定。 swift 工具 swift package swift package generate-xcodeproj swift</description>
    </item>
    
    <item>
      <title>利用JavaScript构建OSX原生应用</title>
      <link>https://it-boyer.github.io/post/old/macos/%E5%88%A9%E7%94%A8javascript%E6%9E%84%E5%BB%BAosx%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sat, 29 Sep 2018 18:35:50 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E5%88%A9%E7%94%A8javascript%E6%9E%84%E5%BB%BAosx%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8/</guid>
      <description>利用JavaScript构建OSX应用 Example OS X applications written in JavaScript. JavaScript for Automation Cookbook 廖雪峰的JavaScript教程 W3Cschool javascript教程 JavaScript快</description>
    </item>
    
    <item>
      <title>修改Mac用户名导致丢失管理员权限问题修复</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%BF%AE%E6%94%B9mac%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%BC%E8%87%B4%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</link>
      <pubDate>Tue, 25 Sep 2018 19:16:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%BF%AE%E6%94%B9mac%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%BC%E8%87%B4%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</guid>
      <description>出现的问题主要有两点 数据恢复问题 1）修改用户名后，mac系统认为是创建了一个新的用户，这时候，之前管理员账号的数据在当前用户的finder里</description>
    </item>
    
    <item>
      <title>自定义Xcode支持Vim快捷键</title>
      <link>https://it-boyer.github.io/post/old/xcode/%E8%87%AA%E5%AE%9A%E4%B9%89xcode%E6%94%AF%E6%8C%81vim%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Thu, 20 Sep 2018 21:12:51 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/%E8%87%AA%E5%AE%9A%E4%B9%89xcode%E6%94%AF%E6%8C%81vim%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>使用了Vim之后，被其强大的文本编辑能力吸引, 于是每天都在寻找 Vim 插件, 试图用 Vim 代替 Xcode 进行日常开发. 直到有一天突然发现, 我想要的就是一个拥有强</description>
    </item>
    
    <item>
      <title>巡查自查整合类图</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%B7%A1%E6%9F%A5%E8%87%AA%E6%9F%A5%E6%95%B4%E5%90%88%E7%B1%BB%E5%9B%BE/</link>
      <pubDate>Thu, 13 Sep 2018 19:22:55 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%B7%A1%E6%9F%A5%E8%87%AA%E6%9F%A5%E6%95%B4%E5%90%88%E7%B1%BB%E5%9B%BE/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>在Codeanywhere上使用zsh终端及高亮样式</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%9C%A8codeanywhere%E4%B8%8A%E4%BD%BF%E7%94%A8zsh%E7%BB%88%E7%AB%AF%E5%8F%8A%E9%AB%98%E4%BA%AE%E6%A0%B7%E5%BC%8F/</link>
      <pubDate>Thu, 13 Sep 2018 11:25:14 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E5%9C%A8codeanywhere%E4%B8%8A%E4%BD%BF%E7%94%A8zsh%E7%BB%88%E7%AB%AF%E5%8F%8A%E9%AB%98%E4%BA%AE%E6%A0%B7%E5%BC%8F/</guid>
      <description>检查是否安装： 1 chsh 打印： 安装 Debian / Ubuntu 安装： 1 $ sudo apt-get install zsh zsh直接启动： 1 zsh 安装oh-my-zsh样式工具 在hexoDeploy项目根目录执行：</description>
    </item>
    
    <item>
      <title>Hexo开发文档及使用教程</title>
      <link>https://it-boyer.github.io/post/old/hexo/hexo%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
      <pubDate>Fri, 07 Sep 2018 15:08:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hexo%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
      <description>{% github hexojs hexo 0b26940 width = 30% %} 开始之前 请遵守以下准则： 遵守 Google JavaScript 代码风格。 使用 2 个空格缩排。 不要把逗号放在最前面。 工作流程 Fork hexojs/hexo 把库（repository）</description>
    </item>
    
    <item>
      <title>Hexo插件开发</title>
      <link>https://it-boyer.github.io/post/old/hexo/hexo%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
      <pubDate>Fri, 07 Sep 2018 15:08:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hexo%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
      <description>{% github hexojs site e1839be width = 30% %} Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件： 脚本（Scripts） 如果您的代码</description>
    </item>
    
    <item>
      <title>zeroTier内网穿透</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/zerotier%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Wed, 05 Sep 2018 18:29:50 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/zerotier%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>git-log的使用</title>
      <link>https://it-boyer.github.io/post/old/git/git-log%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 05 Sep 2018 15:52:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/git-log%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>trello 卡片 查看提交历史 来看一个实际的例子，如果要查看 Git 仓库中，2008 年 10 月期间，Junio Hamano 提交的但未合并的测试脚本（位于项目的 t/ 目录下的文件</description>
    </item>
    
    <item>
      <title>Jazzy生成Swift文档工具</title>
      <link>https://it-boyer.github.io/post/old/macos/jazzy%E7%94%9F%E6%88%90swift%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 05 Sep 2018 15:52:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/jazzy%E7%94%9F%E6%88%90swift%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/</guid>
      <description>{% github realm jazzy 6932e5e width = 30% %} demo {% github appcoda SwiftDocSample 24c1649 width = 30% %} 使用 Jazzy 产生代码文档 Jazzy 是一款可以为 Swift 和 Objective-C 代码产生具有 Apple 风格的代码文档工具。事实上，Jazzy 会为你创建一</description>
    </item>
    
    <item>
      <title>LaunchPad打击垫学习</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/launchpad%E6%89%93%E5%87%BB%E5%9E%AB%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 05 Sep 2018 15:52:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/launchpad%E6%89%93%E5%87%BB%E5%9E%AB%E5%AD%A6%E4%B9%A0/</guid>
      <description>trello卡片 第二期：Chain的选择与设置/页数的映射 分轨和音频采样 音频轨道 拖拽音频文件或视频文件到Simple采样轨道中，视频格式会生</description>
    </item>
    
    <item>
      <title>swift支持的正则（textKit）</title>
      <link>https://it-boyer.github.io/post/old/swift/swift%E6%94%AF%E6%8C%81%E7%9A%84%E6%AD%A3%E5%88%99textkit/</link>
      <pubDate>Wed, 05 Sep 2018 15:52:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swift%E6%94%AF%E6%8C%81%E7%9A%84%E6%AD%A3%E5%88%99textkit/</guid>
      <description>正则表达式语法 iOS开发之详解正则表达式原文：NSRegularExpression Tutorial: Getting Started nshipster文章NSPredicate iOS</description>
    </item>
    
    <item>
      <title>heroku的SSH终端命令</title>
      <link>https://it-boyer.github.io/post/old/hexo/heroku%E7%9A%84ssh%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 05 Sep 2018 14:03:39 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/heroku%E7%9A%84ssh%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/</guid>
      <description>启动heroku 终端 Heroku Exec (SSH Tunneling) 每个Heroku exec连接最多持续一个小时。一小时后，您可能需要重新连接。Heroku exec在对Shield</description>
    </item>
    
    <item>
      <title>使用LLDB独立调试APP</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8lldb%E7%8B%AC%E7%AB%8B%E8%B0%83%E8%AF%95app/</link>
      <pubDate>Wed, 05 Sep 2018 14:03:39 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8lldb%E7%8B%AC%E7%AB%8B%E8%B0%83%E8%AF%95app/</guid>
      <description>参考 lldb官方文档 苹果文档 LLDB调试器使用简介 南峰子译 调试：案例学习 系统翻译文章 Debugging iOS binaries with LLDB 高级LLDB调试 LLDB中使用python概览</description>
    </item>
    
    <item>
      <title>shadowrocket无需越狱重签翻墙</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/shadowrocket%E6%97%A0%E9%9C%80%E8%B6%8A%E7%8B%B1%E9%87%8D%E7%AD%BE%E7%BF%BB%E5%A2%99/</link>
      <pubDate>Wed, 05 Sep 2018 12:11:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/shadowrocket%E6%97%A0%E9%9C%80%E8%B6%8A%E7%8B%B1%E9%87%8D%E7%AD%BE%E7%BF%BB%E5%A2%99/</guid>
      <description>{% github it-boyer WCShadowrocket f101e23 width = 30% %} 一次讲透：IOS翻墙利器“小火箭（Shadowrocket）”上手、进阶、配合Workflow获取免费节点攻略 iOS版Sh</description>
    </item>
    
    <item>
      <title>playground运行慢问题解决办法</title>
      <link>https://it-boyer.github.io/post/old/swift/playground%E8%BF%90%E8%A1%8C%E6%85%A2%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 05 Sep 2018 11:46:05 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/playground%E8%BF%90%E8%A1%8C%E6%85%A2%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>在升级xcode之后，出现playground无法运行的情况，live view 不显示等问题。</description>
    </item>
    
    <item>
      <title>七个习惯附录一</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF%E9%99%84%E5%BD%95%E4%B8%80/</link>
      <pubDate>Tue, 04 Sep 2018 19:39:50 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF%E9%99%84%E5%BD%95%E4%B8%80/</guid>
      <description>七个习惯资源 {% github it-boyer 7HabitFiles ab2502a width = 30% %} 下载习惯的评估矫正.pages 下载七个习惯综合评估.numbers 生成markdown表格工具 你的生活中心 配偶</description>
    </item>
    
    <item>
      <title>习惯三要事第一自我管理原则</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B9%A0%E6%83%AF%E4%B8%89%E8%A6%81%E4%BA%8B%E7%AC%AC%E4%B8%80%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86%E5%8E%9F%E5%88%99/</link>
      <pubDate>Mon, 03 Sep 2018 15:01:52 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B9%A0%E6%83%AF%E4%B8%89%E8%A6%81%E4%BA%8B%E7%AC%AC%E4%B8%80%E8%87%AA%E6%88%91%E7%AE%A1%E7%90%86%E5%8E%9F%E5%88%99/</guid>
      <description>1）我的时间是怎样度过的 1.很不同意2.不同意3.略不同意4.略微同意5.同意6.很同意 问题 态度 1.我花了很多时间在重要而且需要立刻关注的活</description>
    </item>
    
    <item>
      <title>习惯二以终为始自我领导原则</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B9%A0%E6%83%AF%E4%BA%8C%E4%BB%A5%E7%BB%88%E4%B8%BA%E5%A7%8B%E8%87%AA%E6%88%91%E9%A2%86%E5%AF%BC%E5%8E%9F%E5%88%99/</link>
      <pubDate>Mon, 03 Sep 2018 14:26:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B9%A0%E6%83%AF%E4%BA%8C%E4%BB%A5%E7%BB%88%E4%B8%BA%E5%A7%8B%E8%87%AA%E6%88%91%E9%A2%86%E5%AF%BC%E5%8E%9F%E5%88%99/</guid>
      <description>1）检查你的愿景 现在是时候了，让我们对自己的愿景作一次检查。花一分钟思考下述问题，写下你的想法。 2）制定一份个人使命宣言 为了帮你制定自己的使</description>
    </item>
    
    <item>
      <title>习惯一积极主动个人愿景原则</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B9%A0%E6%83%AF%E4%B8%80%E7%A7%AF%E6%9E%81%E4%B8%BB%E5%8A%A8%E4%B8%AA%E4%BA%BA%E6%84%BF%E6%99%AF%E5%8E%9F%E5%88%99/</link>
      <pubDate>Mon, 03 Sep 2018 13:53:19 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B9%A0%E6%83%AF%E4%B8%80%E7%A7%AF%E6%9E%81%E4%B8%BB%E5%8A%A8%E4%B8%AA%E4%BA%BA%E6%84%BF%E6%99%AF%E5%8E%9F%E5%88%99/</guid>
      <description>怎么在影响圈内,做到积极主动? 行动建议 花一整天，听听你自己和周围人的语言，你使用“但愿”、“我办不到”、“我不得不”等消极回答的频率有多高？</description>
    </item>
    
    <item>
      <title>七个习惯概论</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF%E6%A6%82%E8%AE%BA/</link>
      <pubDate>Mon, 03 Sep 2018 10:11:38 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF%E6%A6%82%E8%AE%BA/</guid>
      <description>七个习惯概论 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @startsalt {# 高效能人士 | 低效能人士 习惯一 积极主动。积极主动的人绝不浅尝辄止。他们知道要为自己的抉择负责，|消</description>
    </item>
    
    <item>
      <title>七个习惯题由内而外全面造就自己</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF%E9%A2%98%E7%94%B1%E5%86%85%E8%80%8C%E5%A4%96%E5%85%A8%E9%9D%A2%E9%80%A0%E5%B0%B1%E8%87%AA%E5%B7%B1/</link>
      <pubDate>Mon, 03 Sep 2018 10:11:38 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF%E9%A2%98%E7%94%B1%E5%86%85%E8%80%8C%E5%A4%96%E5%85%A8%E9%9D%A2%E9%80%A0%E5%B0%B1%E8%87%AA%E5%B7%B1/</guid>
      <description>由内而外全面造就自己 你是否有过这种经验，做出推测时发现自己的判断过于匆忙？请对这种经验加以描述。 1 2 答: 你当时做出的推测是什么？ 1 2 答: 想一</description>
    </item>
    
    <item>
      <title>MPMoviePlayerController遇到的坑</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/mpmovieplayercontroller%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</link>
      <pubDate>Fri, 31 Aug 2018 16:58:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/mpmovieplayercontroller%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</guid>
      <description>问题 [MPMoviePlayerController播放过程中自动暂停的问题] 在使用系统播放器MPMoviePlayerController</description>
    </item>
    
    <item>
      <title>Thisdeviceisnotcurrentlyonline</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/thisdeviceisnotcurrentlyonline/</link>
      <pubDate>Fri, 31 Aug 2018 16:58:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/thisdeviceisnotcurrentlyonline/</guid>
      <description>参考 you can restart your device! then connect your device to your mac-&amp;gt;open Xcode-&amp;gt;press command + i I&amp;rsquo;ve encountered this issue today. The record button is disabled and the tooltip says &amp;ldquo;This device is not currently online&amp;rdquo;. However my iPhone is connecting with my Mac and can be debugged with Xcode without any problem.</description>
    </item>
    
    <item>
      <title>使用Instruments的工具</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8instruments%E7%9A%84%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Fri, 31 Aug 2018 16:58:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8instruments%E7%9A%84%E5%B7%A5%E5%85%B7/</guid>
      <description>检测app内存爆增代码，优化性能 Instruments工具使用办法 整理Demo，列出几种常用instrument的场景。来熟悉具体操作 demo</description>
    </item>
    
    <item>
      <title>Chisel-LLDB命令插件</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/chisel-lldb%E5%91%BD%E4%BB%A4%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Fri, 31 Aug 2018 16:20:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/chisel-lldb%E5%91%BD%E4%BB%A4%E6%8F%92%E4%BB%B6/</guid>
      <description>{% github facebook chisel 56d0e0d width = 30% %} LLDB 是一个有着 REPL 的特性和 C++ ,Python 插件的开源调试器。LLDB 绑定在 Xcode 内部，存在于主窗口底部的控制台中。调试器允许你在程序运行的特定</description>
    </item>
    
    <item>
      <title>LLDB命令使用</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/lldb%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 31 Aug 2018 16:20:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/lldb%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github it-boyer width = 30% %} help 最简单命令是 help，它会列举出所有的命令。如果你忘记了一个命令是做什么的，或者想知道更多的话，你可以通过 help 来了解更多细节，</description>
    </item>
    
    <item>
      <title>解决Xcode代码高亮提示功能失效</title>
      <link>https://it-boyer.github.io/post/old/xcode/%E8%A7%A3%E5%86%B3xcode%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD%E5%A4%B1%E6%95%88/</link>
      <pubDate>Fri, 31 Aug 2018 16:20:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/%E8%A7%A3%E5%86%B3xcode%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD%E5%A4%B1%E6%95%88/</guid>
      <description>方法一 打开失效的项目，选择菜单：Xcode-&amp;gt;File-&amp;gt;Project Settings -&amp;gt; Advanced..， 删除图上所示的位置目录，重启x</description>
    </item>
    
    <item>
      <title>RxSwift爬虫工具</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/rxswift%E7%88%AC%E8%99%AB%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 28 Aug 2018 12:03:26 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/rxswift%E7%88%AC%E8%99%AB%E5%B7%A5%E5%85%B7/</guid>
      <description>{% github it-boyer ReptileTool 60cac75 width = 30% %} 目的 实践大话设计模式/swift基础语法/函数响应式开发 正则表达式语法 iOS开发之详解正则表达式原文：NSRegularE</description>
    </item>
    
    <item>
      <title>使用Safari浏览器调试WebView</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8safari%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B0%83%E8%AF%95webview/</link>
      <pubDate>Thu, 23 Aug 2018 13:34:25 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E4%BD%BF%E7%94%A8safari%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B0%83%E8%AF%95webview/</guid>
      <description>{% github it-boyer width = 30% %} 使用RxSwift开发爬虫工具 设置真机 首先打开模拟器或者真机设置中&amp;quot;Safari浏览器&amp;quot;→&amp;quot;高级</description>
    </item>
    
    <item>
      <title>RxSwift函数响应式开发</title>
      <link>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/rxswift%E5%87%BD%E6%95%B0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%BC%80%E5%8F%91/</link>
      <pubDate>Thu, 23 Aug 2018 09:56:38 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/rxswift%E5%87%BD%E6%95%B0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%BC%80%E5%8F%91/</guid>
      <description>{% github beeth0ven RxSwift-Chinese-Documentation cbbc87e width = 30% %} RxSwift学习 RxSwift 中文文档 更多示例 RxExample 中包含许多具有代表性的示例。它们都是很好的学习材料。这里我们取出其中几个示例来展示如</description>
    </item>
    
    <item>
      <title>GitBook编辑器使用</title>
      <link>https://it-boyer.github.io/post/old/hexo/gitbook%E7%BC%96%E8%BE%91%E5%99%A8%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 22 Aug 2018 19:51:19 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/gitbook%E7%BC%96%E8%BE%91%E5%99%A8%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github GitbookIO gitbook 6efbb70 width = 30% %} GitBook Editor 个人中心 制作书籍 在github找到文档库，fork为自己的库 登录GitBook个人中心，点击+ New新建book 在建库</description>
    </item>
    
    <item>
      <title>SwiftLint检查代码使用</title>
      <link>https://it-boyer.github.io/post/old/shell/swiftlint%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 21 Aug 2018 17:02:47 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/swiftlint%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8/</guid>
      <description>{% github realm SwiftLint 8deb453 width = 30% %} 安装配置swiftlint语法矫正工具 安装包方式 brew install swiftlint 或下载[swiftlint.pkg][https://github.</description>
    </item>
    
    <item>
      <title>终端支持swift自动补齐</title>
      <link>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E6%94%AF%E6%8C%81swift%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90/</link>
      <pubDate>Tue, 21 Aug 2018 15:48:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E6%94%AF%E6%8C%81swift%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90/</guid>
      <description>终端支持swift自动补齐 keith/sourcekittendaemon.vim：这个插件提供了Vim集成SourceKittenDaem</description>
    </item>
    
    <item>
      <title>markdown-preview实现md预览</title>
      <link>https://it-boyer.github.io/post/old/shell/markdown-preview%E5%AE%9E%E7%8E%B0md%E9%A2%84%E8%A7%88/</link>
      <pubDate>Tue, 21 Aug 2018 10:40:31 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/markdown-preview%E5%AE%9E%E7%8E%B0md%E9%A2%84%E8%A7%88/</guid>
      <description>{% github iamcco markdown-preview.vim c09a1ca width = 30% %} nisha 命令行使用 1 2 3 4 5 MarkdownPreview &amp;#34; open preview window in markdown buffer MarkdownPreviewStop &amp;#34; close the preview window and server 插件运行效果预览</description>
    </item>
    
    <item>
      <title>图文组件及多媒体组件类图</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%9B%BE%E6%96%87%E7%BB%84%E4%BB%B6%E5%8F%8A%E5%A4%9A%E5%AA%92%E4%BD%93%E7%BB%84%E4%BB%B6%E7%B1%BB%E5%9B%BE/</link>
      <pubDate>Sat, 18 Aug 2018 14:36:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%9B%BE%E6%96%87%E7%BB%84%E4%BB%B6%E5%8F%8A%E5%A4%9A%E5%AA%92%E4%BD%93%E7%BB%84%E4%BB%B6%E7%B1%BB%E5%9B%BE/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>iCompleteMe支持swift语法提示</title>
      <link>https://it-boyer.github.io/post/old/shell/icompleteme%E6%94%AF%E6%8C%81swift%E8%AF%AD%E6%B3%95%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Fri, 10 Aug 2018 16:40:19 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/icompleteme%E6%94%AF%E6%8C%81swift%E8%AF%AD%E6%B3%95%E6%8F%90%E7%A4%BA/</guid>
      <description>{% github jerrymarino iCompleteMe ad0e1fe width = 30% %} iCompleteMe是基于YouCompleteMe。在花了一年多的时间试图实现对YouCompleteMe的快速支持之</description>
    </item>
    
    <item>
      <title>SwiftPlayground命令操作</title>
      <link>https://it-boyer.github.io/post/old/shell/swiftplayground%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 10 Aug 2018 15:50:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/swiftplayground%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</guid>
      <description>{% github jerrymarino SwiftPlayground.vim f603700 width = 30% %} 执行环境 在playgrounds后缀的目录中执行swift文件 熟悉vim快捷键用法 空格 + fs 保存文件：此时插件会自动运行pl</description>
    </item>
    
    <item>
      <title>FSCalendar支持自定义的日历开源库</title>
      <link>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/fscalendar%E6%94%AF%E6%8C%81%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E6%97%A5%E5%8E%86%E5%BC%80%E6%BA%90%E5%BA%93/</link>
      <pubDate>Tue, 17 Jul 2018 17:59:05 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/fscalendar%E6%94%AF%E6%8C%81%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E6%97%A5%E5%8E%86%E5%BC%80%E6%BA%90%E5%BA%93/</guid>
      <description>{% github it-boyer FSCalendar 1a026a4c width = 30% %} FSCalendar FSCalendar是一款开源iOS日历控件，支持横向、纵向滑动模式，全屏模式，带有子标题、事件设置等功能。以下是项目截</description>
    </item>
    
    <item>
      <title>高效人士的七个习惯</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E9%AB%98%E6%95%88%E4%BA%BA%E5%A3%AB%E7%9A%84%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF/</link>
      <pubDate>Tue, 03 Jul 2018 12:30:31 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E9%AB%98%E6%95%88%E4%BA%BA%E5%A3%AB%E7%9A%84%E4%B8%83%E4%B8%AA%E4%B9%A0%E6%83%AF/</guid>
      <description>豆瓣导图 豆瓣总结 前言 如何善用本书 第一部分 重新探索自我 第一章 由内而外全面造就自己 第二章 七个习惯——概论 第二部分 个人的成功：从依赖到独立 第三章 习</description>
    </item>
    
    <item>
      <title>程序员跳槽全攻略</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E7%A8%8B%E5%BA%8F%E5%91%98%E8%B7%B3%E6%A7%BD%E5%85%A8%E6%94%BB%E7%95%A5/</link>
      <pubDate>Mon, 02 Jul 2018 19:52:08 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E7%A8%8B%E5%BA%8F%E5%91%98%E8%B7%B3%E6%A7%BD%E5%85%A8%E6%94%BB%E7%95%A5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>书都不会读还想成功</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B9%A6%E9%83%BD%E4%B8%8D%E4%BC%9A%E8%AF%BB%E8%BF%98%E6%83%B3%E6%88%90%E5%8A%9F/</link>
      <pubDate>Mon, 02 Jul 2018 13:59:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%B9%A6%E9%83%BD%E4%B8%8D%E4%BC%9A%E8%AF%BB%E8%BF%98%E6%83%B3%E6%88%90%E5%8A%9F/</guid>
      <description>处境 人到中年，职场受排挤降级，情场被抛弃不如意，怨天尤人，自怨自艾，却不思进取，死扛着压力勉强养家糊口残喘于世。 心态转折 红皇后的故事：寓意为</description>
    </item>
    
    <item>
      <title>Framework实现使用swift开发</title>
      <link>https://it-boyer.github.io/post/old/swift/framework%E5%AE%9E%E7%8E%B0%E4%BD%BF%E7%94%A8swift%E5%BC%80%E5%8F%91/</link>
      <pubDate>Sat, 23 Jun 2018 16:41:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/framework%E5%AE%9E%E7%8E%B0%E4%BD%BF%E7%94%A8swift%E5%BC%80%E5%8F%91/</guid>
      <description>{% github it-boyer JHHomeAPP 813e4b width = 30% %} 在静态库组件中使用swift开发 基于静态库的开发，实现封装静态库/Framework并使用swiftOC混编开发 创建三个角</description>
    </item>
    
    <item>
      <title>使用CocoaPods开发静态库</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%BD%BF%E7%94%A8cocoapods%E5%BC%80%E5%8F%91%E9%9D%99%E6%80%81%E5%BA%93/</link>
      <pubDate>Thu, 21 Jun 2018 21:37:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%BD%BF%E7%94%A8cocoapods%E5%BC%80%E5%8F%91%E9%9D%99%E6%80%81%E5%BA%93/</guid>
      <description>Cocoapods作为OS X和iOS开发平台的类库管理工具，已经非常完善和强大。通常我们用pod来管理第三方开源类库，但我们也极有可能会开发</description>
    </item>
    
    <item>
      <title>使用tag管理多个相关组件的版本发布</title>
      <link>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8tag%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83/</link>
      <pubDate>Wed, 20 Jun 2018 17:22:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8tag%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83/</guid>
      <description>tag标签自增新建脚本 1 2 3 4 5 6 #!/bin/sh tag=$(git describe --tags `git rev-list --tags --max-count=1`) version=${tag##*.} let &amp;#34;version+=1&amp;#34; newTag=${tag%.*}.${version} echo &amp;#39;Create New Tag &amp;#39;$newTag 修改tag版本号的方法 方法一：覆盖 已有v1.0.2.8要覆盖该版本 1 git tag</description>
    </item>
    
    <item>
      <title>弧形表盘进度仪表</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%BC%A7%E5%BD%A2%E8%A1%A8%E7%9B%98%E8%BF%9B%E5%BA%A6%E4%BB%AA%E8%A1%A8/</link>
      <pubDate>Wed, 20 Jun 2018 15:31:52 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%BC%A7%E5%BD%A2%E8%A1%A8%E7%9B%98%E8%BF%9B%E5%BA%A6%E4%BB%AA%E8%A1%A8/</guid>
      <description>{% github it-boyer ArcProgressUI 4b9bc85 width = 30% %} ArcProgressUI Example To run the example project, clone the repo, and run pod install from the Example directory first. Requirements Installation ArcProgressUI is available through CocoaPods. To install it, simply add the following line to your Podfile: 1 pod &amp;#39;ArcProgressUI&amp;#39; API使用 独立进度表盘加载 1 2 3 4 5 #import &amp;#34;ArcProgressView.h&amp;#34; NSArray</description>
    </item>
    
    <item>
      <title>storyboard的几种方式</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/storyboard%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Wed, 20 Jun 2018 14:49:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/storyboard%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>通过IB（xib/storyboard）创建View的周期方法 loadView：加载View方法，UI是通过代码绘制时，初始化控制器的视图时</description>
    </item>
    
    <item>
      <title>使用curl命令管理远程github库</title>
      <link>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8curl%E5%91%BD%E4%BB%A4%E7%AE%A1%E7%90%86%E8%BF%9C%E7%A8%8Bgithub%E5%BA%93/</link>
      <pubDate>Wed, 20 Jun 2018 11:14:00 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8curl%E5%91%BD%E4%BB%A4%E7%AE%A1%E7%90%86%E8%BF%9C%E7%A8%8Bgithub%E5%BA%93/</guid>
      <description>使用curl命令管理远程github库 新建远程仓库 在本地准备工作 进入一个目录，这个目录是本地仓库的目录； 在本地建立仓库 1 git init &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m</description>
    </item>
    
    <item>
      <title>MacOS系统下运行exe小程序</title>
      <link>https://it-boyer.github.io/post/old/macos/macos%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BF%90%E8%A1%8Cexe%E5%B0%8F%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Tue, 19 Jun 2018 18:09:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/macos%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BF%90%E8%A1%8Cexe%E5%B0%8F%E7%A8%8B%E5%BA%8F/</guid>
      <description>场景 例如，当急需在Mac系统上，安装abletonLive，涉及到破解机exe小程序，使用文中提到的两种方法，就解了燃眉之急。 方法一 crossover Wra</description>
    </item>
    
    <item>
      <title>在GarageBand中使用LaunchPad</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E5%9C%A8garageband%E4%B8%AD%E4%BD%BF%E7%94%A8launchpad/</link>
      <pubDate>Tue, 19 Jun 2018 15:39:56 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E5%9C%A8garageband%E4%B8%AD%E4%BD%BF%E7%94%A8launchpad/</guid>
      <description>Garageband不支持控件表面，因此无法使用Launchpad/LaunchKey的全部功能。 在Garageband中，仅可以使用Lau</description>
    </item>
    
    <item>
      <title>AbletonLive10安装使用</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/abletonlive10%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 19 Jun 2018 14:23:13 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/abletonlive10%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid>
      <description>launchPad 设备官网 官方教程资源 官方工程试听资源支持下载 ableton live 软件 官网下载 中国社区 ABLETON LIVE 10.0.1 SUITE 破解版下载 WINDOWS &amp;amp; MAC ABLETON LIVE10.0.1破解机下载 下载 安装 {% post_path M</description>
    </item>
    
    <item>
      <title>LaunchPadMini说明书</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/launchpadmini%E8%AF%B4%E6%98%8E%E4%B9%A6/</link>
      <pubDate>Tue, 19 Jun 2018 14:23:13 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/launchpadmini%E8%AF%B4%E6%98%8E%E4%B9%A6/</guid>
      <description>工程demo 官方资源 Launchpad几种模式视频教程 硬件设置 贴纸：确保标签与相应的按钮对齐。 使用USB连接线将你的Launchpad Min</description>
    </item>
    
    <item>
      <title>Git如何永久删除文件(包括历史记录)</title>
      <link>https://it-boyer.github.io/post/old/git/git%E5%A6%82%E4%BD%95%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%8C%85%E6%8B%AC%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 11 Jun 2018 20:32:02 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/git%E5%A6%82%E4%BD%95%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%8C%85%E6%8B%AC%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid>
      <description>有些时候不小心上传了一些敏感文件(例如密码), 或者不想上传的文件(没及时或忘了加到.gitignore里的), 而且上传的文件又特别大的时候,</description>
    </item>
    
    <item>
      <title>5个图表解决工作中的12大难题</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/5%E4%B8%AA%E5%9B%BE%E8%A1%A8%E8%A7%A3%E5%86%B3%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%8412%E5%A4%A7%E9%9A%BE%E9%A2%98/</link>
      <pubDate>Mon, 11 Jun 2018 19:43:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/5%E4%B8%AA%E5%9B%BE%E8%A1%A8%E8%A7%A3%E5%86%B3%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%8412%E5%A4%A7%E9%9A%BE%E9%A2%98/</guid>
      <description>导图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 title 图表活用教学 left header 使用5种类型的图表 1. 掌握状况图解法 2. 检讨对策图解法 3. 掌握状况图</description>
    </item>
    
    <item>
      <title>执法巡查开发状态总结</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E6%89%A7%E6%B3%95%E5%B7%A1%E6%9F%A5%E5%BC%80%E5%8F%91%E7%8A%B6%E6%80%81%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 05 Jun 2018 10:18:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E6%89%A7%E6%B3%95%E5%B7%A1%E6%9F%A5%E5%BC%80%E5%8F%91%E7%8A%B6%E6%80%81%E6%80%BB%E7%BB%93/</guid>
      <description>UML状态图 使用状态图，查漏补觉，梳理相关业务流程。 建议：优化流程，使用流程图（活动图）/时序图来完善流程 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17</description>
    </item>
    
    <item>
      <title>uml活动图常用语法</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/uml%E6%B4%BB%E5%8A%A8%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 04 Jun 2018 21:27:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/uml%E6%B4%BB%E5%8A%A8%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 start :ClickServlet.handleRequest(); :new page; if (Page.onSecurityCheck) then (true) :Page.onInit(); if (isForward?) then (no) :Process controls; if (continue processing?) then (no) stop endif if (isPost?) then (yes) :Page.onPost(); else (no) :Page.onGet(); endif :Page.onRender(); endif else (false) endif if (do redirect?)</description>
    </item>
    
    <item>
      <title>uml用例图常用语法</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/uml%E7%94%A8%E4%BE%8B%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 04 Jun 2018 21:20:41 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/uml%E7%94%A8%E4%BE%8B%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 :Main Admin: as Admin (Use the application) as (Use) User -&amp;gt; (Start) User --&amp;gt; (Use) Admin ---&amp;gt; (Use) note right of Admin : This is an example. note right of (Use) A note can also be on several lines end note note &amp;#34;This note is connected\nto several objects.&amp;#34; as N2 (Start) .. N2</description>
    </item>
    
    <item>
      <title>uml类图常用语法</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/uml%E7%B1%BB%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 04 Jun 2018 20:49:36 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/uml%E7%B1%BB%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 class BaseClass namespace net.dummy #DDDDDD { .BaseClass &amp;lt;|-- Person Meeting o-- Person .BaseClass &amp;lt;|- Meeting } namespace net.foo { net.dummy.Person &amp;lt;|- Person .BaseClass &amp;lt;|-- Person net.dummy.Meeting o-- Person } BaseClass &amp;lt;|-- net.unused.Person 效果图： 1 2 3 4 5 6 7 8 9 10 11 12 class BaseClass namespace net.dummy #DDDDDD { .BaseClass &amp;lt;|-- Person Meeting</description>
    </item>
    
    <item>
      <title>在Mac安装Fiddler</title>
      <link>https://it-boyer.github.io/post/old/macos/%E5%9C%A8mac%E5%AE%89%E8%A3%85fiddler/</link>
      <pubDate>Thu, 31 May 2018 16:38:52 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E5%9C%A8mac%E5%AE%89%E8%A3%85fiddler/</guid>
      <description>安装Mono Mac下需要使用.Net编译后的程序，首先需要用到跨平台的方案Mono(现阶段微软已推出跨平台的方案.Net Core，不过暂时只</description>
    </item>
    
    <item>
      <title>hexo博文置顶方法</title>
      <link>https://it-boyer.github.io/post/old/hexo/hexo%E5%8D%9A%E6%96%87%E7%BD%AE%E9%A1%B6%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 31 May 2018 11:44:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hexo%E5%8D%9A%E6%96%87%E7%BD%AE%E9%A1%B6%E6%96%B9%E6%B3%95/</guid>
      <description>修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js 内的代码替换为： 1 2</description>
    </item>
    
    <item>
      <title>&#43;0800格式转NSDate</title>
      <link>https://it-boyer.github.io/post/old/ios/&#43;0800%E6%A0%BC%E5%BC%8F%E8%BD%ACnsdate/</link>
      <pubDate>Wed, 30 May 2018 18:42:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/&#43;0800%E6%A0%BC%E5%BC%8F%E8%BD%ACnsdate/</guid>
      <description>1 2 3 4 NSString *timstr = [resData objectForKey:@&amp;#34;Data&amp;#34;]; timstr = [timstr stringByReplacingOccurrencesOfString:@&amp;#34;/Date(&amp;#34; withString:@&amp;#34;&amp;#34;]; timstr = [timstr stringByReplacingOccurrencesOfString:@&amp;#34;+0800)/&amp;#34; withString:@&amp;#34;&amp;#34;]; model.time = [NSDate dateWithTimeIntervalSince1970:timstr.longLongValue/1000];</description>
    </item>
    
    <item>
      <title>高德地图API使用</title>
      <link>https://it-boyer.github.io/post/old/ios/%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BEapi%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 30 May 2018 14:40:56 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BEapi%E4%BD%BF%E7%94%A8/</guid>
      <description>引入头文件 1 2 #import &amp;lt;AMapFoundationKit/AMapFoundationKit.h&amp;gt; #import &amp;lt;AMapLocationKit/AMapLocationKit.h&amp;gt; 调用方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 NSString</description>
    </item>
    
    <item>
      <title>使用nvm或n管理node和npm版本</title>
      <link>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8nvm%E6%88%96n%E7%AE%A1%E7%90%86node%E5%92%8Cnpm%E7%89%88%E6%9C%AC/</link>
      <pubDate>Tue, 29 May 2018 12:06:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E4%BD%BF%E7%94%A8nvm%E6%88%96n%E7%AE%A1%E7%90%86node%E5%92%8Cnpm%E7%89%88%E6%9C%AC/</guid>
      <description>问题 1 2 3 Fatal error in , line 0 # Check failed: !value_obj-&amp;gt;IsJSReceiver() || value_obj-&amp;gt;IsTemplateInfo(). #FailureMessage Object: 0x7ffeefbf25c0[1] 22749 illegal hardware instruction he 参考Fatal error in ../deps/v8/src/api.cc, line 1197 when gulp watch,需要降级node版本。 nvm工具 nvm是node版</description>
    </item>
    
    <item>
      <title>终端实现预览plantuml的插件</title>
      <link>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E5%AE%9E%E7%8E%B0%E9%A2%84%E8%A7%88plantuml%E7%9A%84%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 29 May 2018 11:32:04 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E7%BB%88%E7%AB%AF%E5%AE%9E%E7%8E%B0%E9%A2%84%E8%A7%88plantuml%E7%9A%84%E6%8F%92%E4%BB%B6/</guid>
      <description>{% github weirongxu plantuml-previewer.vim bf4b3e5 width = 30% %} 安装依赖 1 2 3 Plug &amp;#39;it-boyer/plantuml-syntax&amp;#39; &amp;#34;plantuml语法高亮 Plug &amp;#39;aklt/plantuml-syntax&amp;#39; Plug &amp;#39;tyru/open-browser.vim&amp;#39; Plug &amp;#39;weirongxu/plantuml-previewer.vim&amp;#39; &amp;#34;在线工具：http://sujoyu.githu</description>
    </item>
    
    <item>
      <title>pyenv切换python的版本</title>
      <link>https://it-boyer.github.io/post/old/hexo/pyenv%E5%88%87%E6%8D%A2python%E7%9A%84%E7%89%88%E6%9C%AC/</link>
      <pubDate>Tue, 29 May 2018 10:33:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/pyenv%E5%88%87%E6%8D%A2python%E7%9A%84%E7%89%88%E6%9C%AC/</guid>
      <description>问题引入 在hexo 项目中使用npm 配置环境，出现错误：gyp ERR! configure error pyenv是python的多版本管理包，实现互相独立、互不干扰的pytho</description>
    </item>
    
    <item>
      <title>汉字拼音排序方法</title>
      <link>https://it-boyer.github.io/post/old/ios/%E6%B1%89%E5%AD%97%E6%8B%BC%E9%9F%B3%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 17 May 2018 10:46:57 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E6%B1%89%E5%AD%97%E6%8B%BC%E9%9F%B3%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/</guid>
      <description>{% github it-boyer sortChinese 2deab8b width = 30% %} 方法一 实现模型对象排序，当万条数据时，出现卡顿问题。 方法二 实现字符串数组的排序，暂时没有验证大量排序情况，尝试优化第一种方</description>
    </item>
    
    <item>
      <title>Git工具交互式暂存</title>
      <link>https://it-boyer.github.io/post/old/git/git%E5%B7%A5%E5%85%B7%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9A%82%E5%AD%98/</link>
      <pubDate>Thu, 12 Apr 2018 19:41:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/git%E5%B7%A5%E5%85%B7%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9A%82%E5%AD%98/</guid>
      <description>交互式暂存 Git 自带的一些脚本可以使在命令行下工作更容易。 本节的几个互交命令可以帮助你将文件的特定部分组合成提交。 当你修改一组文件后，希望这些改</description>
    </item>
    
    <item>
      <title>Otherlinkerflags设置ld命令执行的参数</title>
      <link>https://it-boyer.github.io/post/old/xcode/otherlinkerflags%E8%AE%BE%E7%BD%AEld%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8F%82%E6%95%B0/</link>
      <pubDate>Wed, 11 Apr 2018 16:42:57 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/otherlinkerflags%E8%AE%BE%E7%BD%AEld%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8F%82%E6%95%B0/</guid>
      <description>Other linker flags设置的值实际上就是ld命令执行时后面所加的参数。 3个常用参数： -ObjC：加了这个参数后，链接器就会把静态库中所有的Objec</description>
    </item>
    
    <item>
      <title>iOS插件化开发之Small</title>
      <link>https://it-boyer.github.io/post/old/xcode/ios%E6%8F%92%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%B9%8Bsmall/</link>
      <pubDate>Wed, 11 Apr 2018 16:42:17 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/ios%E6%8F%92%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%B9%8Bsmall/</guid>
      <description>{% github it-boyer SmallDemo 5931b43 width = 30% %} 官网 small是android与iOS平台比较出名的轻巧的跨平台插件化框架，也正是被这一点吸引，决定将small应用到集团</description>
    </item>
    
    <item>
      <title>当项目过大需要通过SSH方式Clone</title>
      <link>https://it-boyer.github.io/post/old/git/%E5%BD%93%E9%A1%B9%E7%9B%AE%E8%BF%87%E5%A4%A7%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87ssh%E6%96%B9%E5%BC%8Fclone/</link>
      <pubDate>Wed, 04 Apr 2018 17:44:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E5%BD%93%E9%A1%B9%E7%9B%AE%E8%BF%87%E5%A4%A7%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87ssh%E6%96%B9%E5%BC%8Fclone/</guid>
      <description>设置全局提交信息 1 2 git config --global user.email &amp;#34;you@example.com&amp;#34; git config --global user.name &amp;#34;Your Name&amp;#34; 修改最后一次提交的用户名信息 ``git git config user.name &amp;lsquo;wangz&amp;rsquo; git config user.email &amp;lsquo;wangz@alib.com&amp;rsquo; git commit &amp;ndash;amend &amp;ndash;author=wangz 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ### 项目过大问题</description>
    </item>
    
    <item>
      <title>隐藏导航条底部黑线</title>
      <link>https://it-boyer.github.io/post/old/ios/%E9%9A%90%E8%97%8F%E5%AF%BC%E8%88%AA%E6%9D%A1%E5%BA%95%E9%83%A8%E9%BB%91%E7%BA%BF/</link>
      <pubDate>Mon, 12 Mar 2018 13:51:07 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E9%9A%90%E8%97%8F%E5%AF%BC%E8%88%AA%E6%9D%A1%E5%BA%95%E9%83%A8%E9%BB%91%E7%BA%BF/</guid>
      <description>当需要导航条为透明色，与背景色一体时，需要去除底边线： 如下代码：使用空图片设置背景图，并指定bar的样式。 1 2 self.navigationController.navigationBar setBackgroundImage:[UIImage new] forBarMetrics:UIBarMetricsDefault]; self.navigationController.navigationBar.barStyle = UIBarStyleBlackTranslucent;</description>
    </item>
    
    <item>
      <title>Objective-C的运行时库</title>
      <link>https://it-boyer.github.io/post/old/swift/objective-c%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E5%BA%93/</link>
      <pubDate>Mon, 25 Sep 2017 20:01:36 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/objective-c%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E5%BA%93/</guid>
      <description>Objective-C 运行时 Objective-C 是一门基于运行时的编程语言，这意味着所有方法、变量、类之间的链接，都会推迟到应用实际运行的最后一刻才会建立。这将给开发人员极高的灵</description>
    </item>
    
    <item>
      <title>MVVM介绍</title>
      <link>https://it-boyer.github.io/post/old/ios/mvvm%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 24 Sep 2017 19:26:28 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/mvvm%E4%BB%8B%E7%BB%8D/</guid>
      <description>MVVM 所以，MVVM 到底是什么？与其专注于说明 MVVM 的来历，不如让我们看一个典型的 iOS 是如何构建的，并从那里了解 MVVM： 我们看到的是一个典型的 MVC 设置</description>
    </item>
    
    <item>
      <title>线程安全类的设计</title>
      <link>https://it-boyer.github.io/post/old/ios/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%B1%BB%E7%9A%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 24 Sep 2017 19:06:03 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%B1%BB%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>这篇文章将专注于实用技巧，设计模式，以及对于写出线程安全类和使用 GCD 来说所特别需要注意的一些反面模式。 线程安全 Apple 的框架 首先让我们来看看 Apple 的框架</description>
    </item>
    
    <item>
      <title>GCD底层并发API</title>
      <link>https://it-boyer.github.io/post/old/ios/gcd%E5%BA%95%E5%B1%82%E5%B9%B6%E5%8F%91api/</link>
      <pubDate>Sun, 24 Sep 2017 18:21:38 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/gcd%E5%BA%95%E5%B1%82%E5%B9%B6%E5%8F%91api/</guid>
      <description>这篇文章里，我们将会讨论一些 iOS 和 OS X 都可以使用的底层 API。除了 dispatch_once ，我们一般不鼓励使用其中的任何一种技术。 但是我们想要揭示出表面之下深层次的</description>
    </item>
    
    <item>
      <title>常见的后台实现</title>
      <link>https://it-boyer.github.io/post/old/ios/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%90%8E%E5%8F%B0%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 24 Sep 2017 11:03:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%90%8E%E5%8F%B0%E5%AE%9E%E7%8E%B0/</guid>
      <description>概览 本文主要探讨一些常用后台任务的最佳实践： 如何做异步网络请求 如何异步处理大型文件，以保持较低的内存占用 操作队列 (Operation Queues) 还是 GCD ? 操作队列提供了在</description>
    </item>
    
    <item>
      <title>iOS多线程API介绍</title>
      <link>https://it-boyer.github.io/post/old/ios/ios%E5%A4%9A%E7%BA%BF%E7%A8%8Bapi%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 24 Sep 2017 09:18:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ios%E5%A4%9A%E7%BA%BF%E7%A8%8Bapi%E4%BB%8B%E7%BB%8D/</guid>
      <description>并发所描述的概念就是同时运行多个任务。这些任务可能是以在单核 CPU 上分时（时间共享）的形式同时运行，也可能是在多核 CPU 上以真正的并行方式来运行。 OS</description>
    </item>
    
    <item>
      <title>iOS视图渲染</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/ios%E8%A7%86%E5%9B%BE%E6%B8%B2%E6%9F%93/</link>
      <pubDate>Sat, 23 Sep 2017 14:51:07 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/ios%E8%A7%86%E5%9B%BE%E6%B8%B2%E6%9F%93/</guid>
      <description>图形堆栈 当像素映射到屏幕上的时候，后台发生了很多事情。但一旦他们显示到屏幕上，每一个像素均由三个颜色组件构成：红，绿，蓝。三个独立的颜色单元</description>
    </item>
    
    <item>
      <title>iResearcher简介</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/iresearcher%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Sun, 10 Sep 2017 14:09:39 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/iresearcher%E7%AE%80%E4%BB%8B/</guid>
      <description>简介 iResearcher是一款科研/研发领域大数据分析系统+应用。旨在为科研/技术研发工作者提供 资源直达服务。iResearcher计划提</description>
    </item>
    
    <item>
      <title>NSURLSession的使用说明</title>
      <link>https://it-boyer.github.io/post/old/ios/nsurlsession%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Fri, 08 Sep 2017 18:48:43 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/nsurlsession%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>iOS 7 和 Mac OS X 10.9 Mavericks 中一个显著的变化就是对 Foundation URL 加载系统的彻底重构。 现在已经有人在深入苹果的网络层基础架构的地方做研究了，所以我想是时候来分享一些</description>
    </item>
    
    <item>
      <title>支持OSX浏览PDF简单视图</title>
      <link>https://it-boyer.github.io/post/old/macos/%E6%94%AF%E6%8C%81osx%E6%B5%8F%E8%A7%88pdf%E7%AE%80%E5%8D%95%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Fri, 08 Sep 2017 18:48:43 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E6%94%AF%E6%8C%81osx%E6%B5%8F%E8%A7%88pdf%E7%AE%80%E5%8D%95%E8%A7%86%E5%9B%BE/</guid>
      <description>运行scheme： PDFReaderForOSX 即可 {% github it-boyer PDFReader 737a7e %} 支持iOS pageViewController: pdf翻页效果视图控制器 startingViewController:DataViewCon</description>
    </item>
    
    <item>
      <title>ngrok使用</title>
      <link>https://it-boyer.github.io/post/old/hexo/ngrok%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 06 Sep 2017 12:23:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/ngrok%E4%BD%BF%E7%94%A8/</guid>
      <description>注册 1.注册https://ngrok.com/signup Start by downloading ngrok. Install your authtoken 1 ./ngrok authtoken 2tpoyojTzL5w55Y4na5DY_3shJgaMVzjJ***** Create your first secure tunnel 1 ./ngrok http 80 Open the web interface at http://localhost:4040 to inspect and replay requests Read the documentation for instructions on advanced features like</description>
    </item>
    
    <item>
      <title>搞定III目录笔记</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9Aiii%E7%9B%AE%E5%BD%95%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 17 Aug 2017 15:41:11 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9Aiii%E7%9B%AE%E5%BD%95%E7%AC%94%E8%AE%B0/</guid>
      <description>11个模型 《搞定III》 第1章 GTD现象 几类读者：似懂非懂型，止步于列举清单等 第二类：很难坚持 第三类：学以致用型 如何阅读本书： 手头备小本子，</description>
    </item>
    
    <item>
      <title>在space-vim平台安装若干插件</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%9C%A8space-vim%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%E8%8B%A5%E5%B9%B2%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Thu, 17 Aug 2017 14:26:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E5%9C%A8space-vim%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%E8%8B%A5%E5%B9%B2%E6%8F%92%E4%BB%B6/</guid>
      <description>space-vim 首次启用一个 layer，需要执行 SPC f R, 或者 :so $MYVIMRC, 重新加载 .vimrc 并执行 :PlugInstall 安装所需的相关插件 。或者退出重新打开 vim, vim-plug 将会检测并自动安装缺失的插件。 基于</description>
    </item>
    
    <item>
      <title>PBBReader项目重构模型</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/pbbreader%E9%A1%B9%E7%9B%AE%E9%87%8D%E6%9E%84%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Tue, 25 Jul 2017 17:06:47 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/pbbreader%E9%A1%B9%E7%9B%AE%E9%87%8D%E6%9E%84%E6%A8%A1%E5%9E%8B/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>WKWebView控件和JS脚本传参及交互</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/wkwebview%E6%8E%A7%E4%BB%B6%E5%92%8Cjs%E8%84%9A%E6%9C%AC%E4%BC%A0%E5%8F%82%E5%8F%8A%E4%BA%A4%E4%BA%92/</link>
      <pubDate>Fri, 07 Jul 2017 09:54:41 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/wkwebview%E6%8E%A7%E4%BB%B6%E5%92%8Cjs%E8%84%9A%E6%9C%AC%E4%BC%A0%E5%8F%82%E5%8F%8A%E4%BA%A4%E4%BA%92/</guid>
      <description>WebKit简介 {% github it-boyer WKWebView-JS d03bc0e width = 30% %} 自iOS8 以后，苹果推出了新框架 WebKit，提供了替换 UIWebView 的组件 WKWebView。各种 UIWebView 的性能问题没有了</description>
    </item>
    
    <item>
      <title>vim编辑器键盘映射命令map</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%91%BD%E4%BB%A4map/</link>
      <pubDate>Tue, 04 Jul 2017 15:06:52 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%91%BD%E4%BB%A4map/</guid>
      <description>使用:map命令，可以将键盘上的某个按键与Vim的命令绑定起来。 例如使用以下命令，可以通过F5键将单词用花括号括起来： 1 :map &amp;lt;F5&amp;gt; i{e&amp;lt;Esc&amp;gt;a}&amp;lt;Esc&amp;gt; 执行过程：i{</description>
    </item>
    
    <item>
      <title>vim编辑器的基本用法</title>
      <link>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 04 Jul 2017 10:09:29 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/vim%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>参考 基本操作 基本概念 动作：是指移动光标的操作，你肯定很熟悉 h、j、k 和 l，以及 w 和 b。但其实，/ 也是一个动作。 1 :h navigation 操作符： 对某个区域文本执</description>
    </item>
    
    <item>
      <title>SourceKittenSwift语法自动补齐工具</title>
      <link>https://it-boyer.github.io/post/old/shell/sourcekittenswift%E8%AF%AD%E6%B3%95%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 29 Jun 2017 10:08:50 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/sourcekittenswift%E8%AF%AD%E6%B3%95%E8%87%AA%E5%8A%A8%E8%A1%A5%E9%BD%90%E5%B7%A5%E5%85%B7/</guid>
      <description>vim插件工具：Vundle 主题色： |组合键 | Description| 空格 + T + n| 随机切换颜色主题。 SPC T s |使用unite buffer方式切换一个主题 插件 Unite 预定义</description>
    </item>
    
    <item>
      <title>在slack上实现实时绘UML图</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E5%9C%A8slack%E4%B8%8A%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E7%BB%98uml%E5%9B%BE/</link>
      <pubDate>Wed, 28 Jun 2017 15:57:00 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E5%9C%A8slack%E4%B8%8A%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E7%BB%98uml%E5%9B%BE/</guid>
      <description>umlbot源码库 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 title 部署一台heroku机器人\n支持在slack窗口实时</description>
    </item>
    
    <item>
      <title>PBBReader阅读器解析</title>
      <link>https://it-boyer.github.io/post/old/ios/pbbreader%E9%98%85%E8%AF%BB%E5%99%A8%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Mon, 26 Jun 2017 17:02:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/pbbreader%E9%98%85%E8%AF%BB%E5%99%A8%E8%A7%A3%E6%9E%90/</guid>
      <description>支持OS X浏览PDF简单视图 运行scheme： PDFReaderForOSX 即可 支持iOS pageViewController: pdf翻页效果视图控制器 startingViewController:Dat</description>
    </item>
    
    <item>
      <title>Perfect开发天气接口API</title>
      <link>https://it-boyer.github.io/post/old/macos/perfect%E5%BC%80%E5%8F%91%E5%A4%A9%E6%B0%94%E6%8E%A5%E5%8F%A3api/</link>
      <pubDate>Mon, 26 Jun 2017 17:01:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/perfect%E5%BC%80%E5%8F%91%E5%A4%A9%E6%B0%94%E6%8E%A5%E5%8F%A3api/</guid>
      <description>Perfect介绍 Perfect提供一系列代表请求和响应的对象组件，并允许在服务器上增加管理句柄用于产生页面内容。 所有对象都是在服务器对象创</description>
    </item>
    
    <item>
      <title>搞定2提升工作与生活效率的52项原则</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9A2%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E4%B8%8E%E7%94%9F%E6%B4%BB%E6%95%88%E7%8E%87%E7%9A%8452%E9%A1%B9%E5%8E%9F%E5%88%99/</link>
      <pubDate>Mon, 26 Jun 2017 10:41:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9A2%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E4%B8%8E%E7%94%9F%E6%B4%BB%E6%95%88%E7%8E%87%E7%9A%8452%E9%A1%B9%E5%8E%9F%E5%88%99/</guid>
      <description>《搞定II》 前言 轻松实现轻松做事 第一部分 理清头绪，发挥创造力 第1章 理清思路，确立新方向 第2章 知道哪些事情自己尚未做，你才会为之心安 第3章 理清</description>
    </item>
    
    <item>
      <title>CoreML机器学习初级教程</title>
      <link>https://it-boyer.github.io/post/old/ios/coreml%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%9D%E7%BA%A7%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 24 Jun 2017 22:10:44 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/coreml%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%9D%E7%BA%A7%E6%95%99%E7%A8%8B/</guid>
      <description>资源 Core ML开发文档 ML模型资源页面 在Working with Models中包含有几个常用的模型模板，例如用于在图片中检测物体——树、动物、人等等。 Integrating</description>
    </item>
    
    <item>
      <title>iOS11ARKit初探</title>
      <link>https://it-boyer.github.io/post/old/ios/ios11arkit%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Sat, 24 Jun 2017 19:46:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ios11arkit%E5%88%9D%E6%8E%A2/</guid>
      <description>iOS11新技术 ARKit教程 增强现实(AR)描述用户体验，将2D或3D元素从设备的摄像头中添加到实时视图中，从而使这些元素出现在真实世界中</description>
    </item>
    
    <item>
      <title>plantuml语法概览</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/plantuml%E8%AF%AD%E6%B3%95%E6%A6%82%E8%A7%88/</link>
      <pubDate>Sat, 24 Jun 2017 18:08:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/plantuml%E8%AF%AD%E6%B3%95%E6%A6%82%E8%A7%88/</guid>
      <description>{% pdf http://p27uwfdhv.bkt.clouddn.com/static/pdf/PlantUML_Language_Reference_Guide_ZH.pdf %}</description>
    </item>
    
    <item>
      <title>序列图sequence语法插件</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E5%BA%8F%E5%88%97%E5%9B%BEsequencediagram%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sat, 24 Jun 2017 16:00:03 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E5%BA%8F%E5%88%97%E5%9B%BEsequencediagram%E8%AF%AD%E6%B3%95/</guid>
      <description>MarkDown插件 {% github bubkoo hexo-filter-sequence 4ab9c15 width = 30% %} 这个插件在markdown暂时无法渲染出图像，不建议使用。 官方 序列图预览工具 概述 序列图(sequenc</description>
    </item>
    
    <item>
      <title>flowchart流程图语法</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/flowchart%E6%B5%81%E7%A8%8B%E5%9B%BE%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sat, 24 Jun 2017 15:32:41 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/flowchart%E6%B5%81%E7%A8%8B%E5%9B%BE%E8%AF%AD%E6%B3%95/</guid>
      <description>基本格式 http://blog.csdn.net/KimBing/article/details/52934959?locationNum=2&amp;amp;fps=1 对象 六种对象：开始对象，结束对象，操作对象，条件对象，输入对象，子任务对象 1 对象变量=&amp;gt;[start|end|operati</description>
    </item>
    
    <item>
      <title>Hexo功能插件</title>
      <link>https://it-boyer.github.io/post/old/hexo/hexo%E5%8A%9F%E8%83%BD%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Sat, 24 Jun 2017 11:59:03 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hexo%E5%8A%9F%E8%83%BD%E6%8F%92%E4%BB%B6/</guid>
      <description>安装插件 //保证格式正确：&amp;ldquo;插件名&amp;rdquo;: &amp;ldquo;^版本号&amp;rdquo;, 方式一通过package.json 新增插</description>
    </item>
    
    <item>
      <title>shell命令处理字符串</title>
      <link>https://it-boyer.github.io/post/old/shell/shell%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Fri, 23 Jun 2017 10:32:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/shell%E5%91%BD%E4%BB%A4%E5%A4%84%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>截取字符串 %+字符+正则表达式 删除字符及右边内容，从源字符串右边开始匹配 % 单井号表示一旦匹配成功立即删除 %% 双井号表示一直等相匹配到最后一个字</description>
    </item>
    
    <item>
      <title>个人项目概览及环境搭建</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%A7%88%E5%8F%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Thu, 22 Jun 2017 11:25:08 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%A7%88%E5%8F%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>环境搭建说明 迁出项目 mupdf已合并到PBBReader_Mac项目中，迁出库即可 1 https://192.168.81.13/svn/PBBReader_Mac 运行PBB Reader项目 发布pkg包 运行target</description>
    </item>
    
    <item>
      <title>mupdf使用说明</title>
      <link>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/mupdf%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 19 Jun 2017 18:25:32 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/mupdf%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>需求描述 目前手机端使用mupdf，通过在底层添加加密方法实现定制pbb阅读器功能。 资源获取如下： {% blockquote %} Download packages of the latest release for your system: Source code for all platforms. Windows viewer and tools. Android</description>
    </item>
    
    <item>
      <title>米粉卡的区别参考办理</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E7%B1%B3%E7%B2%89%E5%8D%A1%E7%9A%84%E5%8C%BA%E5%88%AB%E5%8F%82%E8%80%83%E5%8A%9E%E7%90%86/</link>
      <pubDate>Sat, 17 Jun 2017 21:44:31 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E7%B1%B3%E7%B2%89%E5%8D%A1%E7%9A%84%E5%8C%BA%E5%88%AB%E5%8F%82%E8%80%83%E5%8A%9E%E7%90%86/</guid>
      <description>米粉卡：联通/电信 办卡需要实名制，可以根据情况办理： 米粉卡分为三种： 日租无限流量卡，1元/天 3G流量套餐 ，3元/天无限流量卡 如果平时在外不常</description>
    </item>
    
    <item>
      <title>使用Numbers做导图</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E4%BD%BF%E7%94%A8numbers%E5%81%9A%E5%AF%BC%E5%9B%BE/</link>
      <pubDate>Fri, 16 Jun 2017 17:43:31 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E4%BD%BF%E7%94%A8numbers%E5%81%9A%E5%AF%BC%E5%9B%BE/</guid>
      <description>Pages文档、Numbers电子表格 和 Keynote演示文稿无不集思广益， 是创建精彩作品的理想工具。利用实时协作功能，你的团队成员可通过 M</description>
    </item>
    
    <item>
      <title>Xcode9新特性</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode9%E6%96%B0%E7%89%B9%E6%80%A7/</link>
      <pubDate>Thu, 15 Jun 2017 16:54:38 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode9%E6%96%B0%E7%89%B9%E6%80%A7/</guid>
      <description>无线调试 升级设备系统 体验iOS11系统需要几步操作： 下载配置文件：iOS_11_beta_Configuration_Profile，在手机</description>
    </item>
    
    <item>
      <title>Xcode8中SB适配横竖屏按钮VaryforTraits</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode8%E4%B8%ADsb%E9%80%82%E9%85%8D%E6%A8%AA%E7%AB%96%E5%B1%8F%E6%8C%89%E9%92%AEvaryfortraits/</link>
      <pubDate>Tue, 13 Jun 2017 17:33:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode8%E4%B8%ADsb%E9%80%82%E9%85%8D%E6%A8%AA%E7%AB%96%E5%B1%8F%E6%8C%89%E9%92%AEvaryfortraits/</guid>
      <description>升级xcode8之后，打开storyboard发现xcode7适配界面的size class被Trait Variations所取代: Trait Vari</description>
    </item>
    
    <item>
      <title>搞定1无压工作的艺术</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9A1%E6%97%A0%E5%8E%8B%E5%B7%A5%E4%BD%9C%E7%9A%84%E8%89%BA%E6%9C%AF/</link>
      <pubDate>Tue, 13 Jun 2017 10:34:26 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9A1%E6%97%A0%E5%8E%8B%E5%B7%A5%E4%BD%9C%E7%9A%84%E8%89%BA%E6%9C%AF/</guid>
      <description>前言 第一部分 通向从容之道 第1章 新情况，新做法 如何回归“心如止水”的境界 在知识工作的环境下（信息大爆炸，事物繁杂的特点），传统时间管理法逐渐无</description>
    </item>
    
    <item>
      <title>WacomSlate笔记本使用</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/wacomslate%E7%AC%94%E8%AE%B0%E6%9C%AC%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 03 Jun 2017 23:32:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/wacomslate%E7%AC%94%E8%AE%B0%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid>
      <description>使用场景 梳理任务列表，整理阅读笔记和思维导图，来配合iPad完成每日工作任务 使用效率 按时出图，分解任务，规划职业 带来的回报 Starter.playgroundbook iPad学习开发</description>
    </item>
    
    <item>
      <title>麦步第一天体验</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E9%BA%A6%E6%AD%A5%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Fri, 02 Jun 2017 14:39:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E9%BA%A6%E6%AD%A5%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%BD%93%E9%AA%8C/</guid>
      <description>开源 开发文档 gitHub源码库 效率 可用功能 滴答清单，同步神速，可以使用麦步来标记完成任务 表盘：纯黑背景比较适合，内置白底表盘无法卸载 工具：计</description>
    </item>
    
    <item>
      <title>swift开发macOS系统的终端命令行应用</title>
      <link>https://it-boyer.github.io/post/old/macos/swift%E5%BC%80%E5%8F%91macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 29 May 2017 13:00:08 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/swift%E5%BC%80%E5%8F%91macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BA%94%E7%94%A8/</guid>
      <description>教程 命令行程序MacOS的教程 使用swift创建一个命令行程序，相比其他语言如C、Perl、Ruby或java。 选用SWIFT的理由： Swi</description>
    </item>
    
    <item>
      <title>如何阅读一本书目录</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Sun, 28 May 2017 12:04:28 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6%E7%9B%AE%E5%BD%95/</guid>
      <description>脑图 {% iframe http://naotu.baidu.com/file/3cd277713d4ebb210443ffaf9c8f38e6?token=9200f134c9b8f825 700 300 %} 第一篇 阅读的层次 第一章 阅读的活力与艺术 第二章 阅读的层次 第三章 阅读的第一个层次：基础阅读 第四章 阅读的第二个层次：检视阅读 第五章</description>
    </item>
    
    <item>
      <title>搞定书籍目录</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9A%E4%B9%A6%E7%B1%8D%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Sun, 28 May 2017 12:04:28 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9A%E4%B9%A6%E7%B1%8D%E7%9B%AE%E5%BD%95/</guid>
      <description>《搞定I》 前言 第一部分 通向从容之道？ 第1章 新情况，新做法？ 收集存档清空大脑，万物皆于此， 2分钟法则整理可立刻执行的有效清单，不做材料清单 第2</description>
    </item>
    
    <item>
      <title>痛定思痛的项目管理弊病</title>
      <link>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%97%9B%E5%AE%9A%E6%80%9D%E7%97%9B%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BC%8A%E7%97%85/</link>
      <pubDate>Sat, 27 May 2017 15:06:17 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%97%9B%E5%AE%9A%E6%80%9D%E7%97%9B%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BC%8A%E7%97%85/</guid>
      <description>问题 现状：两个项目源码存在八成为同样的代码，管理在两个SVN库中。 背景：从一个SVN项目分裂成两个独立项目（PBB_2/Reader_v2）</description>
    </item>
    
    <item>
      <title>升职必备的技能修炼二 以道御术</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%BF%AE%E7%82%BC%E5%8D%87%E8%81%8C%E5%BF%85%E5%A4%87%E7%9A%84%E6%8A%80%E8%83%BD%E4%BA%8C/</link>
      <pubDate>Thu, 25 May 2017 18:09:00 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%BF%AE%E7%82%BC%E5%8D%87%E8%81%8C%E5%BF%85%E5%A4%87%E7%9A%84%E6%8A%80%E8%83%BD%E4%BA%8C/</guid>
      <description>“老付”谈论的是目标，所有的方法都是为目标服务的，目标统率人的行为。 怎样规划自己的人生？ 怎样树立自己的目标？ 怎样把目标转化成实际的行动？ 怎样</description>
    </item>
    
    <item>
      <title>修炼升职必备的技能</title>
      <link>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%BF%AE%E7%82%BC%E5%8D%87%E8%81%8C%E5%BF%85%E5%A4%87%E7%9A%84%E6%8A%80%E8%83%BD/</link>
      <pubDate>Thu, 25 May 2017 16:40:42 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E9%98%85%E8%AF%BB/%E4%BF%AE%E7%82%BC%E5%8D%87%E8%81%8C%E5%BF%85%E5%A4%87%E7%9A%84%E6%8A%80%E8%83%BD/</guid>
      <description>焦虑是由于缺乏控制力，以及组织管理、准备和行动不足所造成的。 四象限 走出第三象限，将工作重心放进第二象限 第二象限法则 猴子法则：屏蔽干扰的伎俩 项</description>
    </item>
    
    <item>
      <title>calibre一站式电子书解决方案</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/calibre%E4%B8%80%E7%AB%99%E5%BC%8F%E7%94%B5%E5%AD%90%E4%B9%A6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 25 May 2017 14:26:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/calibre%E4%B8%80%E7%AB%99%E5%BC%8F%E7%94%B5%E5%AD%90%E4%B9%A6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>Calibre，是一个免费的开源的“一站式”的电子书解决方案，它可以全面满足你的电子书需求。Calibre 是免费的，源代码开放，拥有跨平台的</description>
    </item>
    
    <item>
      <title>远程操作mysql数据库</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9Cmysql%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Wed, 24 May 2017 17:07:47 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9Cmysql%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>腾讯云服务器 申请账户，体验5天，搭建一个jira服务，还有微信小程序服务 需要在服务器上安装docker （腾讯服务器提供了一款支持docker</description>
    </item>
    
    <item>
      <title>iOS和OSX集成gitAPI</title>
      <link>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/ios%E5%92%8Cosx%E9%9B%86%E6%88%90gitapi/</link>
      <pubDate>Wed, 17 May 2017 17:33:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/ios%E5%92%8Cosx%E9%9B%86%E6%88%90gitapi/</guid>
      <description>在项目中使用git submodule工具集成子项目ObjectiveGit 在新项目中使用git submodule集成gitAPI 参考官方提供</description>
    </item>
    
    <item>
      <title>SubModule与SubTree的差异</title>
      <link>https://it-boyer.github.io/post/old/git/submodule%E4%B8%8Esubtree%E7%9A%84%E5%B7%AE%E5%BC%82/</link>
      <pubDate>Wed, 17 May 2017 11:23:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/submodule%E4%B8%8Esubtree%E7%9A%84%E5%B7%AE%E5%BC%82/</guid>
      <description>核心区别 git submodule类似于引用，而git subtree类似于拷贝，比如你在一篇博客中想用到你另一篇博客的内容，git submodul</description>
    </item>
    
    <item>
      <title>开发思想模式总结</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E5%BC%80%E5%8F%91%E6%80%9D%E6%83%B3%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 15 May 2017 16:14:07 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E5%BC%80%E5%8F%91%E6%80%9D%E6%83%B3%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/</guid>
      <description>OOP面向对象编程：1. 封装，2，继承，3. 多态 五大原则： SRP单一职责原则：一个类的功能要单一，表现突出的VIPER模式 OCP开放封闭原则</description>
    </item>
    
    <item>
      <title>Xcode8插件制作替代Alcatraz</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcode8%E6%8F%92%E4%BB%B6%E5%88%B6%E4%BD%9C%E6%9B%BF%E4%BB%A3alcatraz/</link>
      <pubDate>Mon, 15 May 2017 14:09:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcode8%E6%8F%92%E4%BB%B6%E5%88%B6%E4%BD%9C%E6%9B%BF%E4%BB%A3alcatraz/</guid>
      <description>背景 Xcode7插件工具Alcatraz 开发者可以在Xcode运行的时候通过注入代码去实现插件的功能。插件可以在一个Alcatraz这个优秀</description>
    </item>
    
    <item>
      <title>从UIKit到AppKit</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%BB%8Euikit%E5%88%B0appkit/</link>
      <pubDate>Fri, 03 Mar 2017 17:55:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%BB%8Euikit%E5%88%B0appkit/</guid>
      <description>不同点 NSWindowController 在Mac上应用都支持多窗口（NSWindowController），AppKit 中都有 NSWindowController担当着类似</description>
    </item>
    
    <item>
      <title>RxSwift基本概念</title>
      <link>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/rxswift%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Fri, 03 Mar 2017 13:01:41 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/rxswift%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>FRP函数式反应型编程 Functional Reactive Programming ， 缩写为 FRP 函数编程 函数是第一等公民 所谓 第一等公民 (first class) ，指的是函数与其他数据类型一样，处于平等地位。既可以赋值给其</description>
    </item>
    
    <item>
      <title>互动性的教学工具XCPlayground</title>
      <link>https://it-boyer.github.io/post/old/swift/%E4%BA%92%E5%8A%A8%E6%80%A7%E7%9A%84%E6%95%99%E5%AD%A6%E5%B7%A5%E5%85%B7xcplayground/</link>
      <pubDate>Wed, 01 Mar 2017 17:27:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/%E4%BA%92%E5%8A%A8%E6%80%A7%E7%9A%84%E6%95%99%E5%AD%A6%E5%B7%A5%E5%85%B7xcplayground/</guid>
      <description>Playground 展示语法和实时执行真实数据的特性，为编写方法和库接口提供了很好的机会，通过实时编译我们能了解语法、写出例子以及获得方法如何使用的说明，所有</description>
    </item>
    
    <item>
      <title>使用Cocoapods创建私有podspec</title>
      <link>https://it-boyer.github.io/post/old/macos/%E4%BD%BF%E7%94%A8cocoapods%E5%88%9B%E5%BB%BA%E7%A7%81%E6%9C%89podspec/</link>
      <pubDate>Tue, 28 Feb 2017 15:46:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E4%BD%BF%E7%94%A8cocoapods%E5%88%9B%E5%BB%BA%E7%A7%81%E6%9C%89podspec/</guid>
      <description>创建一个版本库来托管pod索引:pod repo add命令 第一步：在github登录个人账号，创建一个库作为pod索引托管库。也可根据具体情况可以选</description>
    </item>
    
    <item>
      <title>UIStackView教程了解StackView</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/uistackview%E6%95%99%E7%A8%8B%E4%BA%86%E8%A7%A3stackview/</link>
      <pubDate>Fri, 24 Feb 2017 18:12:14 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/uistackview%E6%95%99%E7%A8%8B%E4%BA%86%E8%A7%A3stackview/</guid>
      <description>原地址 UIStackView简单介绍 一个Stack View能够将它所含的View以各种方式沿其轴向进行分布，同时也可以将View沿某个方向等</description>
    </item>
    
    <item>
      <title>更改设备屏幕上显示的应用程序图标下方的名称</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/%E6%9B%B4%E6%94%B9%E8%AE%BE%E5%A4%87%E5%B1%8F%E5%B9%95%E4%B8%8A%E6%98%BE%E7%A4%BA%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87%E4%B8%8B%E6%96%B9%E7%9A%84%E5%90%8D%E7%A7%B0/</link>
      <pubDate>Fri, 24 Feb 2017 14:23:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/%E6%9B%B4%E6%94%B9%E8%AE%BE%E5%A4%87%E5%B1%8F%E5%B9%95%E4%B8%8A%E6%98%BE%E7%A4%BA%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87%E4%B8%8B%E6%96%B9%E7%9A%84%E5%90%8D%E7%A7%B0/</guid>
      <description>修改APP启动图标上的名称，需配置Info.plist文件，增加CFBundleDisplayName属性键值对。 进入到如下界面： 在Info</description>
    </item>
    
    <item>
      <title>高期望实现异步单元测试</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E9%AB%98%E6%9C%9F%E6%9C%9B%E5%AE%9E%E7%8E%B0%E5%BC%82%E6%AD%A5%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 20 Feb 2017 23:09:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/%E9%AB%98%E6%9C%9F%E6%9C%9B%E5%AE%9E%E7%8E%B0%E5%BC%82%E6%AD%A5%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid>
      <description>异步单元测试 在Xcode 6之前的版本里面并没有内置XCTest，只能是在主线程的RunLoop里面使用一个while循环,然后一直等待响应或</description>
    </item>
    
    <item>
      <title>自定义展示型控制器</title>
      <link>https://it-boyer.github.io/post/old/ios/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%95%E7%A4%BA%E5%9E%8B%E6%8E%A7%E5%88%B6%E5%99%A8/</link>
      <pubDate>Fri, 17 Feb 2017 12:26:11 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%95%E7%A4%BA%E5%9E%8B%E6%8E%A7%E5%88%B6%E5%99%A8/</guid>
      <description>{% github it-boyer PresentationsDemo 2cce4c908 width = 30% %} 触发转场的方式 官方支持的自定义转场 在 UINavigationController 中 push 和 pop; 在 UITabBarController 中切换 Tab; Modal 转场：presentation 和 dismissal，俗称视图控</description>
    </item>
    
    <item>
      <title>整理iOS中几种常用的展示型视图控制器</title>
      <link>https://it-boyer.github.io/post/old/ios/ios%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B1%95%E7%A4%BA%E6%8E%A7%E5%88%B6%E5%99%A8%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 16 Feb 2017 17:53:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ios%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B1%95%E7%A4%BA%E6%8E%A7%E5%88%B6%E5%99%A8%E4%BD%BF%E7%94%A8/</guid>
      <description>开始项目 完整项目 UIAlertController 在iOS8中，提供UIAlertController控制器代替UIAlertView和UIActionSheet两个控件。</description>
    </item>
    
    <item>
      <title>JavaScript自动化组件OC桥接</title>
      <link>https://it-boyer.github.io/post/old/macos/javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6oc%E6%A1%A5%E6%8E%A5/</link>
      <pubDate>Wed, 15 Feb 2017 17:19:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6oc%E6%A1%A5%E6%8E%A5/</guid>
      <description>文档 JavaScript自动化有一个内置的Objective-C Bridge，使您能够访问文件系统，创建Cocoa应用程序。 Objective-C Bridge的</description>
    </item>
    
    <item>
      <title>macOS支持JavaScript自动化组件基础</title>
      <link>https://it-boyer.github.io/post/old/macos/macos%E6%94%AF%E6%8C%81javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 15 Feb 2017 17:19:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/macos%E6%94%AF%E6%8C%81javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</guid>
      <description>苹果 OS X Yosemite系统把 JavaScript作为 AppleScript的另一选择。Automation 是 OS X 10.10版本中的新特性，</description>
    </item>
    
    <item>
      <title>通过沙盒中JS脚本访问其他APP</title>
      <link>https://it-boyer.github.io/post/old/macos/%E9%80%9A%E8%BF%87%E6%B2%99%E7%9B%92%E4%B8%ADjs%E8%84%9A%E6%9C%AC%E8%AE%BF%E9%97%AE%E5%85%B6%E4%BB%96app/</link>
      <pubDate>Tue, 14 Feb 2017 18:25:29 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E9%80%9A%E8%BF%87%E6%B2%99%E7%9B%92%E4%B8%ADjs%E8%84%9A%E6%9C%AC%E8%AE%BF%E9%97%AE%E5%85%B6%E4%BB%96app/</guid>
      <description>如何使用脚本字典里的命令和对象来与其他的应用进行通讯? 这个教程将向您展示现在使用 AppleScript 来控制别的应用的最佳方式。我也会告诉您一些小技巧以帮助您和</description>
    </item>
    
    <item>
      <title>macOS之PDFKit基础</title>
      <link>https://it-boyer.github.io/post/old/macos/macos%E4%B9%8Bpdfkit%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 14 Feb 2017 14:29:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/macos%E4%B9%8Bpdfkit%E5%9F%BA%E7%A1%80/</guid>
      <description>一个PDF的基本构建块是Documents本身。Documents通常作为文件存储在磁盘上。 作为文件版本，可以支持元数据标记如作者，创建日期</description>
    </item>
    
    <item>
      <title>Fabric对macOS系统的支持</title>
      <link>https://it-boyer.github.io/post/old/macos/fabric%E5%AF%B9macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%94%AF%E6%8C%81%E8%B0%83%E7%A0%94/</link>
      <pubDate>Tue, 14 Feb 2017 11:14:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/fabric%E5%AF%B9macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%94%AF%E6%8C%81%E8%B0%83%E7%A0%94/</guid>
      <description>Fabric Fabric 是Twitter的移动应用开发平台，一个模块化、跨平台的移动开发套件，该博文主要研究crashlytics在app中的运用。 注册新的账户</description>
    </item>
    
    <item>
      <title>思维导图之开发实践篇</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E4%B9%8B%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%E7%AF%87/</link>
      <pubDate>Mon, 13 Feb 2017 17:11:26 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E4%B9%8B%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%E7%AF%87/</guid>
      <description>阅读书籍 5种图表解决工作中的12大难题 你的第一本思维导图操作书 5分钟手绘彩色圆珠笔涂鸦集 如果阅读一本书 使用思维导图的场景无处不在，无论是做产</description>
    </item>
    
    <item>
      <title>使用JavaScript把JSON数据定义对象</title>
      <link>https://it-boyer.github.io/post/old/swift/%E4%BD%BF%E7%94%A8javascript%E6%8A%8Ajson%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sun, 12 Feb 2017 14:41:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/%E4%BD%BF%E7%94%A8javascript%E6%8A%8Ajson%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E5%AF%B9%E8%B1%A1/</guid>
      <description>将JSON数据序列化为代码实例 定义一个继承自 JSExport 子协议 PersonJSExports 定义一个遵守PersonJSExports协议的Person数据模 使用 JavaScript 把JSON转为</description>
    </item>
    
    <item>
      <title>Java​Script​Core实现swift混编</title>
      <link>https://it-boyer.github.io/post/old/swift/javascriptcore%E5%AE%9E%E7%8E%B0swift%E6%B7%B7%E7%BC%96/</link>
      <pubDate>Sun, 12 Feb 2017 13:34:06 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/javascriptcore%E5%AE%9E%E7%8E%B0swift%E6%B7%B7%E7%BC%96/</guid>
      <description>OS X Mavericks 和 iOS 7 引入了 JavaScriptCore 库，它把 WebKit 的 JavaScript 引擎用 Objective-C 封装，提供了简单，快速以及安全的方式接入世界上最流行的语言。不管你爱它还是恨它，JavaScrip</description>
    </item>
    
    <item>
      <title>用Git将代码恢复到一个历史的版本</title>
      <link>https://it-boyer.github.io/post/old/git/%E7%94%A8git%E5%B0%86%E4%BB%A3%E7%A0%81%E6%81%A2%E5%A4%8D%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8E%86%E5%8F%B2%E7%9A%84%E7%89%88%E6%9C%AC/</link>
      <pubDate>Fri, 10 Feb 2017 18:19:48 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E7%94%A8git%E5%B0%86%E4%BB%A3%E7%A0%81%E6%81%A2%E5%A4%8D%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8E%86%E5%8F%B2%E7%9A%84%E7%89%88%E6%9C%AC/</guid>
      <description>经历：将代码全提交到默认的head分支中，切换分支后，无法找到分支的严重后果： 目的：在当前分支上，将代码恢复到一个历史的提交版本上。 暴力的方</description>
    </item>
    
    <item>
      <title>bilibiliForMac版之mpv依赖编译</title>
      <link>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/bilibili%E4%B9%8Bmac%E7%89%88ffmpeg%E4%BE%9D%E8%B5%96%E7%BC%96%E8%AF%91/</link>
      <pubDate>Fri, 10 Feb 2017 10:45:03 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/bilibili%E4%B9%8Bmac%E7%89%88ffmpeg%E4%BE%9D%E8%B5%96%E7%BC%96%E8%AF%91/</guid>
      <description>Bilibili Mac Client 一款基于mpv和ffmpeg底层库实现的播放器. 项目依赖库 编译在项目中所需的相关依赖库 下载资源 下载mpv-build {% codeblock lang:git %} git clone https://github.com/mpv-player/mpv-build.git {% endcodeblock</description>
    </item>
    
    <item>
      <title>Crash文件分析方法</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/crash%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 07 Feb 2017 12:38:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/crash%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/</guid>
      <description>第一步：在任意目录创建调试crash的目录 第二步：将之前Archive的文件copy到crash目录里面,其中包括两个文件.app和.app</description>
    </item>
    
    <item>
      <title>开发Mac上的App插件</title>
      <link>https://it-boyer.github.io/post/old/macos/%E5%BC%80%E5%8F%91mac%E4%B8%8A%E7%9A%84app%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 07 Feb 2017 12:38:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/%E5%BC%80%E5%8F%91mac%E4%B8%8A%E7%9A%84app%E6%8F%92%E4%BB%B6/</guid>
      <description>在以前的 OS X 系统中，给你的 App 在运行时动态载入可执行代码比较困难。现在可以通过NSBundle和 plug-ins插件,可以很方便的向原有APP</description>
    </item>
    
    <item>
      <title>Hexo标签插件</title>
      <link>https://it-boyer.github.io/post/old/hexo/hexo%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 23 Jan 2017 15:17:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hexo%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6/</guid>
      <description>&lt;p&gt;标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。&lt;/p&gt;
&lt;h2 id=&#34;引用块&#34;&gt;引用块&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;在文章中插入引言，可包含作者、来源和标题。&lt;/p&gt;
&lt;h3 id=&#34;别号-quote&#34;&gt;别号： quote&lt;/h3&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;blockquote&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;link&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;source_link_title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;endblockquote&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;样例&#34;&gt;样例&lt;/h4&gt;
&lt;hr&gt;
&lt;h5 id=&#34;无参普通blockquote&#34;&gt;无参普通blockquote&lt;/h5&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;blockquote&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;Lorem&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ipsum&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dolor&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;amet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;consectetur&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;adipiscing&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;elit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Pellentesque&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hendrerit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lacus&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ut&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;purus&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;iaculis&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;feugiat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Sed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nec&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tempor&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;elit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;quis&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;aliquam&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;neque&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Curabitur&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;diam&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eget&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dolor&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fermentum&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;semper&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;at&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eu&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lorem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;endblockquote&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;{% blockquote %}
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.
{% endblockquote %}&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kindle114 资源集[转]</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/kindle%E8%B5%84%E6%BA%90/</link>
      <pubDate>Mon, 23 Jan 2017 12:49:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/kindle%E8%B5%84%E6%BA%90/</guid>
      <description>鸣谢 hi-pda dtgc Kindle115 综合类 青风乘翼 最近出版的译著 更新中 周旋久 按字母排列的书籍 提取码：djhp F、H、J、R字母 提取码 39bd S、T、Y字母 提取码 42b1 烫伤关东煮</description>
    </item>
    
    <item>
      <title>Kindle之ResilioSync索引</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/kindle%E4%B9%8Bresiliosync%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Mon, 23 Jan 2017 12:49:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/kindle%E4%B9%8Bresiliosync%E7%B4%A2%E5%BC%95/</guid>
      <description>Kindle伴侣精品书库 Kindle伴原文 Resilio Sync同步密钥 {% codeblock lang:basnh %} BOC3NIGPF2DOKETOF2FAHXJXE2HF24QWC {% endcodeblock %} 精品书库 精品库 {% iframe https://kindlefere.github.io/share/ebook/ 800 400 %} 每周一书 每周一书 {% iframe https://kindlefere.github.io/share/weekly/index.html 800 400 %} 国外书籍 国</description>
    </item>
    
    <item>
      <title>AR 开发资料汇</title>
      <link>https://it-boyer.github.io/post/old/swift/ar%E5%BC%80%E5%8F%91%E8%B5%84%E6%96%99%E6%B1%87/</link>
      <pubDate>Sun, 22 Jan 2017 18:55:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/ar%E5%BC%80%E5%8F%91%E8%B5%84%E6%96%99%E6%B1%87/</guid>
      <description>总结了AR开发的平台汇总，AR视频经典教程，AR主流资讯网站，Vuforia，EasyAR一些实例教程以及AR精选应用。 AR 平台 Vuforia</description>
    </item>
    
    <item>
      <title>Awsome Apple Develop Guide[转]</title>
      <link>https://it-boyer.github.io/post/old/swift/awsomeappledevelopguide/</link>
      <pubDate>Sun, 22 Jan 2017 18:55:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/awsomeappledevelopguide/</guid>
      <description>此文档是Apple平台开发所使用语言的主流学习资源 iOS开发者博客 使用 iOSBlogCN添加或者订阅 从社区学习知识 iOS技术周报 objc中国</description>
    </item>
    
    <item>
      <title>iOS面试题大集合[转]</title>
      <link>https://it-boyer.github.io/post/old/swift/ios%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E9%9B%86%E5%90%88/</link>
      <pubDate>Sun, 22 Jan 2017 18:55:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/ios%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E9%9B%86%E5%90%88/</guid>
      <description>面试题从何处得来 招聘一个靠谱的 iOS 知乎－如何面试 iOS 工程师？ 阅读面试题之前 在正式开始之前，我期望你能对iOS/Mac OS X平台开发有所了解，在iO</description>
    </item>
    
    <item>
      <title>腾讯云之小直播开发</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%B9%8B%E5%B0%8F%E7%9B%B4%E6%92%AD%E5%BC%80%E5%8F%91/</link>
      <pubDate>Sun, 22 Jan 2017 18:55:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%B9%8B%E5%B0%8F%E7%9B%B4%E6%92%AD%E5%BC%80%E5%8F%91/</guid>
      <description>视频服务 直播LVB 开发指南 移动直播MLVB 开发指南 移动直播是一套移动终端直播解决方案的集合，它以免费源码的形式向您展示：如何利用腾讯云直播(</description>
    </item>
    
    <item>
      <title>迁移SVN库到git库保留branchs和tags</title>
      <link>https://it-boyer.github.io/post/old/git/%E8%BF%81%E7%A7%BBsvn%E5%BA%93%E5%88%B0git%E5%BA%93%E4%BF%9D%E7%95%99branchs%E5%92%8Ctags/</link>
      <pubDate>Wed, 18 Jan 2017 12:21:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E8%BF%81%E7%A7%BBsvn%E5%BA%93%E5%88%B0git%E5%BA%93%E4%BF%9D%E7%95%99branchs%E5%92%8Ctags/</guid>
      <description>SVN was a great advance in its day, but it’s now clear that distributed version control systems are the way forward and that Git is the de facto standard. Having helped many clients migrate from SVN to Git, here are my notes for a pain-free transition that will preserve the tags and branches in your SVN repository. 首先导入一个本地存储</description>
    </item>
    
    <item>
      <title>swift错误处理</title>
      <link>https://it-boyer.github.io/post/old/swift/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 11 Jan 2017 17:04:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid>
      <description>&lt;p&gt;Error handling is the process of responding to and recovering from error conditions in your program. Swift provides first-class support for throwing, catching, propagating, and manipulating recoverable errors at runtime.
Some operations aren’t guaranteed to always complete execution or produce a useful output. Optionals are used to represent the absence of a value, but when an operation fails, it’s often useful to understand what caused the failure, so that your code can respond accordingly.
As an example, consider the task of reading and processing data from a file on disk. There are a number of ways this task can fail, including the file not existing at the specified path, the file not having read permissions, or the file not being encoded in a compatible format. Distinguishing among these different situations allows a program to resolve some errors and to communicate to the user any errors it can’t resolve.
举例，在读取和处理磁盘上的一个文件的数据时，会有有许多方法失败，包括指定的文件路径找不到，没有文件的读取权限，或文件编码格式不兼容。在这些不同情况下，就可以让程序提示用户导致程序无法执行的具体原因。&lt;/p&gt;
&lt;h1 id=&#34;representing-and-throwing-errors&#34;&gt;Representing and Throwing Errors&lt;/h1&gt;
&lt;p&gt;In Swift, errors are represented by values of types that conform to the Error protocol. This empty protocol indicates that a type can be used for error handling.
在swift中，错误类型是遵循Error 协议。&lt;/p&gt;
&lt;p&gt;Swift enumerations are particularly well suited to modeling a group of related error conditions, with associated values allowing for additional information about the nature of an error to be communicated. For example, here’s how you might represent the error conditions of operating a vending machine inside a game:
swift枚举类型特别适合为一组错误条件建模，用来关联导致错误的真正原因的相关信息。例如：
一个在操作一台游戏机时的会出现的错误枚举类：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span class=&#34;kd&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;VendingMachineError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;invalidSelection&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;insufficientFunds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coinsNeeded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;outOfStock&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Throwing an error lets you indicate that something unexpected happened and the normal flow of execution can’t continue. You use a throw statement to throw an error. For example, the following code throws an error to indicate that five additional coins are needed by the vending machine:
抛出错误说明游戏出现异常，导致其他操作无法进行。这是需要通过Throw语句来抛出这个错误。例如，以下代码抛出了一个错误表明需要five：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VendingMachineError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insufficientFunds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coinsNeeded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;handling-errors&#34;&gt;Handling Errors&lt;/h1&gt;
&lt;p&gt;When an error is thrown, some surrounding piece of code must be responsible for handling the error—for example, by correcting the problem, trying an alternative approach, or informing the user of the failure.
当错误抛出后，这段代码必须来处理这个错误。例如：通过纠正问题，尝试其他方式实现，或通知用户的失败。&lt;/p&gt;
&lt;p&gt;There are four ways to handle errors in Swift. You can propagate the error from a function to the code that calls that function, handle the error using a do-catch statement, handle the error as an optional value, or assert that the error will not occur. Each approach is described in a section below.
在swift中有四种处理错误机制:
1. 向调用方法中传递这个错误
2. 使用do-catch语句处理
3. 把错误设置为可选型
4.断言不会出现异常的情况下，使用try!禁止异常抛出&lt;/p&gt;
&lt;p&gt;When a function throws an error, it changes the flow of your program, so it’s important that you can quickly identify places in your code that can throw errors. To identify these places in your code, write the try keyword—or the try? or try! variation—before a piece of code that calls a function, method, or initializer that can throw an error. These keywords are described in the sections below.
当一个方法抛出错误时，会打断程序正常的工作流，必须快速定位到可能抛出错误的代码。可以使用关键字&lt;code&gt;try&lt;/code&gt; 要注意 &lt;code&gt;try?&lt;/code&gt;或&lt;code&gt;try!&lt;/code&gt;之间的差异。在调用一个函数，方法或者构造器之前，来抛出异常。&lt;/p&gt;
&lt;h2 id=&#34;propagating-errors-using-throwing-functions&#34;&gt;Propagating Errors Using Throwing Functions&lt;/h2&gt;
&lt;p&gt;To indicate that a function, method, or initializer can throw an error, you write the throws keyword in the function’s declaration after its parameters. A function marked with throws is called a throwing function. If the function specifies a return type, you write the throwskeyword before the return arrow (-&amp;gt;).
函数，方法或构造器都可以抛出异常，只需要在声明它们时添加关键字：&lt;code&gt;throws&lt;/code&gt;即可，这种方法被称为&lt;code&gt;throws&lt;/code&gt;函数，&lt;code&gt;throws&lt;/code&gt;关键字位置在参数之后，返回值(-&amp;gt;)之前&lt;/p&gt;
&lt;p&gt;A throwing function propagates errors that are thrown inside of it to the scope from which it’s called.
抛出函数会把错误抛给调用它的函数周期中去。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在OC和swift中区分多个targets</title>
      <link>https://it-boyer.github.io/post/old/ios/%E5%9C%A8oc%E5%92%8Cswift%E4%B8%AD%E5%8C%BA%E5%88%86%E5%A4%9A%E4%B8%AAtargets/</link>
      <pubDate>Wed, 11 Jan 2017 13:49:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E5%9C%A8oc%E5%92%8Cswift%E4%B8%AD%E5%8C%BA%E5%88%86%E5%A4%9A%E4%B8%AAtargets/</guid>
      <description>build setting预编译位置 Preprocessor Macros Other Swift Flags 为生产和开发target配置预处理宏/编译器标识。之后我们就可以使用该标识在我们的代码来检测应用程序正在</description>
    </item>
    
    <item>
      <title>Swift 语言指南[转]</title>
      <link>https://it-boyer.github.io/post/old/swift/swiftguide/</link>
      <pubDate>Tue, 03 Jan 2017 17:05:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swiftguide/</guid>
      <description>Swift 语言指南 @SwiftLanguage 更新于 2016-6-6，更新内容详见 Issue 55。往期更新回顾详见《收录周报》 这份指南汇集了 Swift 语言主流学习资源，并以开发者的视角整理编</description>
    </item>
    
    <item>
      <title>Docker使用</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/docker%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 21 Dec 2016 21:25:29 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/docker%E4%BD%BF%E7%94%A8/</guid>
      <description>安装Docker for Mac 在Mac上运行Docker。系统要求，OS X 10.10.3 或者更高版本，至少4G内存，4.3.30版本以前的VirtualBox会与</description>
    </item>
    
    <item>
      <title>hackmd使用</title>
      <link>https://it-boyer.github.io/post/old/hexo/hackmd%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 21 Dec 2016 10:49:32 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hackmd%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h1 id=&#34;編輯&#34;&gt;編輯&lt;/h1&gt;
&lt;h2 id=&#34;快速鍵&#34;&gt;快速鍵&lt;/h2&gt;
&lt;p&gt;跟又快又方便的Sublime text很像&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更多訊息請至 &lt;a href=&#34;https://codemirror.net/demo/sublime.html&#34;&gt;這裡&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;自動完成&#34;&gt;自動完成&lt;/h2&gt;
&lt;p&gt;提供完整的 Markdown 自動完成與提示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表情符號：輸入 &lt;code&gt;:&lt;/code&gt; 顯示提示&lt;/li&gt;
&lt;li&gt;程式碼區塊：輸入 &lt;code&gt; 3个&lt;/code&gt; ` 加上一個字元 顯示提示&lt;/li&gt;
&lt;li&gt;標頭：輸入 &lt;code&gt;#&lt;/code&gt; 顯示提示&lt;/li&gt;
&lt;li&gt;參考：輸入 &lt;code&gt;[]&lt;/code&gt; 顯示提示&lt;/li&gt;
&lt;li&gt;外部：輸入 &lt;code&gt;{}&lt;/code&gt; 顯示提示&lt;/li&gt;
&lt;li&gt;圖片：輸入 &lt;code&gt;!&lt;/code&gt; 顯示提示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;標題&#34;&gt;標題&lt;/h2&gt;
&lt;p&gt;會使用 &lt;strong&gt;第一個第一級標頭&lt;/strong&gt; 作為筆記標題&lt;/p&gt;
&lt;h2 id=&#34;標籤&#34;&gt;標籤&lt;/h2&gt;
&lt;p&gt;如同以下方式來使用標籤，它們會顯示在您的 &lt;strong&gt;歷史紀錄&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&#34;tags-功能-酷-更新&#34;&gt;tags: &lt;code&gt;功能&lt;/code&gt; &lt;code&gt;酷&lt;/code&gt; &lt;code&gt;更新&lt;/code&gt;&lt;/h6&gt;
&lt;h2 id=&#34;yaml-metadatayaml-metadata&#34;&gt;&lt;a href=&#34;./yaml-metadata&#34;&gt;YAML metadata&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;提供描述筆記的資訊，以進階設定瀏覽行為，詳細請至上連結&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;robots: 設定網路機器人 meta&lt;/li&gt;
&lt;li&gt;lang: 設定瀏覽器顯示語言&lt;/li&gt;
&lt;li&gt;dir: 設定文字方向&lt;/li&gt;
&lt;li&gt;breaks: 設定是否使用分行&lt;/li&gt;
&lt;li&gt;mathjax: 設定是否使用 mathjax&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;表情符號&#34;&gt;表情符號&lt;/h2&gt;
&lt;p&gt;您可以像是這樣使用表情符號 😄 😃 😢 😉&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;完整的表情符號列表 &lt;a href=&#34;http://www.emoji-cheat-sheet.com/&#34;&gt;在這裡&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;待辦清單&#34;&gt;待辦清單&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 待辦
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 買些沙拉&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 刷牙&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 喝水&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Hexo-hello-world</title>
      <link>https://it-boyer.github.io/post/old/hexo/hexo-hello-world/</link>
      <pubDate>Tue, 20 Dec 2016 18:02:13 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/hexo-hello-world/</guid>
      <description>什么是 Hexo？ Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成</description>
    </item>
    
    <item>
      <title>微信小程序开发-一</title>
      <link>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91-%E4%B8%80/</link>
      <pubDate>Mon, 19 Dec 2016 22:59:10 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%85%B6%E4%BB%96/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91-%E4%B8%80/</guid>
      <description>&lt;h3 id=&#34;创建项目&#34;&gt;创建项目&lt;/h3&gt;
&lt;p&gt;我们需要通过&lt;a href=&#34;https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/devtools.html?t=20161122&#34;&gt;开发者工具&lt;/a&gt;，来完成小程序创建和代码编辑。&lt;/p&gt;
&lt;p&gt;开发者工具安装完成后，打开并使用微信扫码登录。选择创建“项目”，填入上文获取到的 AppID ，设置一个本地项目的名称（非小程序名称），比如“我的第一个项目”，并选择一个本地的文件夹作为代码存储的目录，点击“新建项目”就可以了。&lt;/p&gt;
&lt;p&gt;为方便初学者了解微信小程序的基本代码结构，在创建过程中，如果选择的本地文件夹是个空文件夹，开发者工具会提示，是否需要创建一个 quick start 项目。选择“是”，开发者工具会帮助我们在开发目录里生成一个简单的 demo。&lt;/p&gt;
&lt;p&gt;项目创建成功后，我们就可以点击该项目，进入并看到完整的开发者工具界面，点击左侧导航，在“编辑”里可以查看和编辑我们的代码，在“调试”里可以测试代码并模拟小程序在微信客户端效果，在“项目”里可以发送到手机里预览实际效果。&lt;/p&gt;
&lt;h3 id=&#34;编写代码&#34;&gt;编写代码&lt;/h3&gt;
&lt;p&gt;点击开发者工具左侧导航的“编辑”，看到这个项目文件结构。&lt;/p&gt;
&lt;p&gt;三个必不可少的&lt;code&gt;app.js、app.json、app.wxss&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.js&lt;/code&gt;后缀的是脚本文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.json&lt;/code&gt;后缀的文件是配置文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.wxss&lt;/code&gt;后缀的是样式表文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微信小程序会读取这些文件，并生成小程序实例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GTD任务清单整理技巧</title>
      <link>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/gtd%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95%E6%95%B4%E7%90%86%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 07 Jan 2016 16:00:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%AF%BC%E5%9B%BE/gtd%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95%E6%95%B4%E7%90%86%E6%8A%80%E5%B7%A7/</guid>
      <description>什么是GTD？ GTD 的基本理论是把一个人所要要完成的任务和事件全部从大脑中移出来，记录到纸上。这样，大脑便会不被多余的事情打搅而集中于现在所需完</description>
    </item>
    
    <item>
      <title>git svn桥接命令的基础</title>
      <link>https://it-boyer.github.io/post/old/git/gitsvn%E6%A1%A5%E6%8E%A5%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 05 Jan 2016 14:18:00 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/gitsvn%E6%A1%A5%E6%8E%A5%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E7%A1%80/</guid>
      <description>git svn 通过几个简单的工作流程了解到git svn常见命令： 值得警戒的是，在使用 git svn 的时候，你实际是在与 Subversion 交互，Git 比它要高级复杂的多。尽管可以</description>
    </item>
    
    <item>
      <title>文档库</title>
      <link>https://it-boyer.github.io/idocs/</link>
      <pubDate>Tue, 22 Dec 2015 12:39:04 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/idocs/</guid>
      <description>读书笔记 kindle笔记 swift-zh文档 下载mobi 项目文档 猜字游戏终端demo 智能设备文档 网络引擎文档 弱网暂存机制 工具文档 自动布局UI</description>
    </item>
    
    <item>
      <title>Realm数据库引擎-swift</title>
      <link>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/realm%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%95%E6%93%8E-swift/</link>
      <pubDate>Wed, 16 Dec 2015 05:56:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/realm%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%95%E6%93%8E-swift/</guid>
      <description>中心思想： 继承RLMObject新建数据模型，添加相应属性，即可使用realm数据库引擎，对用户数据创建持久化，更新，删除等操作。 简介： Realm 是</description>
    </item>
    
    <item>
      <title>OC与swift相互调用</title>
      <link>https://it-boyer.github.io/post/old/swift/oc%E4%B8%8Eswift%E7%9B%B8%E4%BA%92%E8%B0%83%E7%94%A8/</link>
      <pubDate>Tue, 01 Dec 2015 11:42:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/oc%E4%B8%8Eswift%E7%9B%B8%E4%BA%92%E8%B0%83%E7%94%A8/</guid>
      <description>Swift中使用OC的类声明 &amp;ndash; 实现配置 桥接的头文件 方式一：自动添加桥接头文件 在一个全新的Swift，利用第一次新建提示的方式自动添加桥接头文</description>
    </item>
    
    <item>
      <title>Swift入门</title>
      <link>https://it-boyer.github.io/post/old/swift/swift%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 27 Nov 2015 17:18:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/swift%E5%85%A5%E9%97%A8/</guid>
      <description>苹果官方 中文版 背景 Apple基于已有的编译器、调试器、框架作为其基础架构。通过ARC(Automatic Reference Counting，自动引用计数)来</description>
    </item>
    
    <item>
      <title>UIImage的渲染模式</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/uiimage%E7%9A%84%E6%B8%B2%E6%9F%93%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 26 Nov 2015 16:15:11 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/uiimage%E7%9A%84%E6%B8%B2%E6%9F%93%E6%A8%A1%E5%BC%8F/</guid>
      <description>设置UIImage的渲染模式：UIImage.renderingMode 在 iOS 7 中 UIImage 添加了一个 renderingMode 属性。我们可以使用 imageWithRende</description>
    </item>
    
    <item>
      <title>使用SmartSVN创建版本库</title>
      <link>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8smartsvn%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93/</link>
      <pubDate>Mon, 05 Oct 2015 19:16:47 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/%E4%BD%BF%E7%94%A8smartsvn%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93/</guid>
      <description>&lt;p&gt;SmartSVN有以下版本：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SmartSVN enterprise 9 企业版&lt;/li&gt;
&lt;li&gt;SmartSVN foundation 8 基础版&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于企业版只能建立本地的版本库，无法创建&amp;amp;使用svn://localhost方式。&lt;/p&gt;
&lt;h4 id=&#34;用基础版来说明创建版本库&#34;&gt;用基础版来说明创建版本库。&lt;/h4&gt;
&lt;p&gt;参考：&lt;a href=&#34;http://hammadk.com/how-to-create-repository-in-smartsvn-tutorial/&#34;&gt;Create Repository in SmartSVN – Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启动SmartSVN SmartSVN foundation 8 基础版&lt;/li&gt;
&lt;li&gt;菜单栏Project-&amp;gt; set up Local Repository&amp;hellip;   &lt;br&gt;
需要设置如下两个参数：&lt;br&gt;
3. svnadmin 在终端执行： whereis svnadmin&lt;br&gt;
4. svnserve 在终端执行： whereis svnserve&lt;br&gt;
￼&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/adeb039a-b429-481a-ac25-2044b871e45e/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;li&gt;指定版本库的目录位置：&lt;br&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/a3f00903-101c-4848-a10a-3479643baea7/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;li&gt;初始化账户密码：&lt;br&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/140f257e-e452-47ea-8317-34a5ed8d6c7f/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;li&gt;完成。&lt;br&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/ed975623-72bb-4132-8d04-ac9a7b1d2fc9/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/53306789-9d97-485c-a54d-a143e7b078f1/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>[转]Swift最佳实践</title>
      <link>https://it-boyer.github.io/post/old/swift/%E8%BD%ACswift%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 29 Sep 2015 17:05:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/swift/%E8%BD%ACswift%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>[英文][SwiftCommunityBestPractices] [SwiftCommunityBestPractices]: https://github.com/schwa/Swift-Community-Best-Practices [SwiftCommunity]: http://swift-lang.schwa.io/ [swiftCaptureLists]: http://www.russbishop.net/swift-capture-lists [SwiftURL]: https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/index.html [驼峰命名法URL]: http://www.wikiwand.com/en/Studly_caps [匈牙利命名法URL]: http://www.wikiwand.com/en/Hungarian_notation 黄金法则</description>
    </item>
    
    <item>
      <title>Mac安装gitLab服务器</title>
      <link>https://it-boyer.github.io/post/old/git/mac%E5%AE%89%E8%A3%85gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Sun, 27 Sep 2015 19:25:38 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/mac%E5%AE%89%E8%A3%85gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>必要配置 *创建一个名称为&amp;quot;gitlab&amp;quot;管理员用户，然后再创建一个名称为&amp;quot;gitlab&amp;quot;的群组 *开启</description>
    </item>
    
    <item>
      <title>小米路由常用操作</title>
      <link>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 25 Sep 2015 23:59:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;h4 id=&#34;常用命令&#34;&gt;常用命令&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ssh登录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 局域网登录:
 ssh [user@]hostname [command]
  例如：ssh root@192.168.31.1  或  远程登录：ssh root@222.35.145.28 -p 2195
 回车
 输入密码

 **修改密码：**
 root@xiaoqiang:~#passwd   
 回车
 输入新密码
 回车
 再次输入新密码
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;远程拷贝数据&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; scp Desktop/ar71xx/* root@192.168.31.1:/userdisk/myWorkspace/ar71xx
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每次重启路由获取IP:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; vi /etc/rc.local
 sh /etc/getIP.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;//启动后，等待20秒，然后，获取当前时间作为文件名称
//使用ifconfig 获取路由器的ip信息
//使用 | grep 通道，和grep正则来过滤出，wan口的ip所在行
// &amp;gt; 使用重定向，将过滤的ip行，写入路由硬盘/userdisk/data/my/ip目录中
//通过小米路由手机客户端，找到该txt文件，并下载到手机sd卡中
//查看该文件，既有路由重启后的当前IP&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Xcode7编译发布问题</title>
      <link>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/xcode7%E7%BC%96%E8%AF%91%E5%8F%91%E5%B8%83%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 25 Sep 2015 15:58:17 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E7%BC%96%E8%AF%91/xcode7%E7%BC%96%E8%AF%91%E5%8F%91%E5%B8%83%E9%97%AE%E9%A2%98/</guid>
      <description>Xcode7编译发布问题 ERROR ITMS-90535: &amp;ldquo;Unexpected CFBundleExecutable Key. The bundle at &amp;lsquo;Payload/PBBReader.app/TencentOpenApi_IOS_Bundle.bundle&amp;rsquo; does not contain a bundle executable. If this bundle intentionally does not contain an executable, consider removing the CFBundleExecutable key from its Info.plist and using a CFBundlePackageType of BNDL. If this bundle is part of a third-party framework, consider contacting the developer of the framework for an update to</description>
    </item>
    
    <item>
      <title>Xcode和Jenkins持续集成的几种实现方式</title>
      <link>https://it-boyer.github.io/post/old/macos/xcode%E5%92%8Cjenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Fri, 18 Sep 2015 23:52:06 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/macos/xcode%E5%92%8Cjenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;h2 id=&#34;ci服务器&#34;&gt;CI服务器&lt;/h2&gt;
&lt;p&gt;写到这儿，对于iOS开发者来说，需要准备好：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个比较容易获取的源代码仓库(包含源代码)&lt;/li&gt;
&lt;li&gt;一套自动化构建脚本&lt;/li&gt;
&lt;li&gt;一系列围绕构建的可执行测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来就需要一个CI服务器来根据源代码的变更触发构建，监控测试结果。&lt;/p&gt;
&lt;p&gt;目前，业界比较流行的，支持iOS构建的CI服务器有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://travis-ci.org&#34;&gt;Travis CI&lt;/a&gt;：是一个免费的云服务平台，基本上支持所有目前主流的语言，Object-C自然也在其中，但是只支持github极大的限制了其应用场景。目前国内无法访问，&lt;a href=&#34;http://www.infoq.com/cn/articles/build-ios-continuous-integration-platform-part3&#34;&gt;详见&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jenkins&lt;/strong&gt;：经过多年的发展，其活跃的社区和丰富的插件让其成为了业界最受欢迎的CI服务器。通过使用Xcode插件，可以非常方便在Jenkins中运行iOS项目的构建脚本。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>快速正确的安装Ruby,Rails运行环境</title>
      <link>https://it-boyer.github.io/post/old/shell/%E5%BF%AB%E9%80%9F%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%89%E8%A3%85rubyrails%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 21 Jan 2015 23:00:39 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/shell/%E5%BF%AB%E9%80%9F%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%89%E8%A3%85rubyrails%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</guid>
      <description>&lt;p&gt;安装ruby环境：
方法一：下载源码，编译安装：&lt;a href=&#34;http://fsjoy.blog.51cto.com/318484/115045/&#34;&gt;配置中制定安装目录&lt;/a&gt;&lt;br&gt;
方法二：使用rvm安装：&lt;a href=&#34;https://ruby-china.org/wiki/rvm-guide&#34;&gt;可以提供一个便捷的多版本 Ruby 环境的管理和切换&lt;/a&gt;&lt;br&gt;
方法三：使用macport安装 &lt;code&gt;port install ruby&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ruby-china.org/wiki/install_ruby_guide&#34;&gt;详细教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;br&gt;
&lt;code&gt;ERROR: While executing gem ... (Errno::EPERM) Operation not permitted - /usr/bin/rake&lt;/code&gt;
&lt;a href=&#34;http://stackoverflow.com/questions/30812777/cannot-install-cocoa-pods-after-uninstalling-results-in-error/30851030#30851030&#34;&gt;stackoverflow方法&lt;/a&gt;测试结果没走通。&lt;br&gt;
最终通过&lt;a href=&#34;http://tadaland.com/os-x-rootless.html&#34;&gt;OS X 10.11中Rootless的实现与解释以及关闭方法&lt;/a&gt;解决.&lt;/p&gt;
&lt;h4 id=&#34;gem介绍&#34;&gt;Gem介绍&lt;/h4&gt;
&lt;p&gt;Gem是一个ruby库和程序的标准包，它通过RubyGem来定位、安装、升级和卸载，非常的便捷。&lt;/p&gt;
&lt;p&gt;Ruby 1.9.2版本默认安装RubyGem，如果你使用其它版本，请参考如何安装RubyGem。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git中的储藏工具stash</title>
      <link>https://it-boyer.github.io/post/old/git/git%E4%B8%AD%E7%9A%84%E5%82%A8%E8%97%8F%E5%B7%A5%E5%85%B7stash/</link>
      <pubDate>Mon, 19 Jan 2015 19:57:04 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/git/git%E4%B8%AD%E7%9A%84%E5%82%A8%E8%97%8F%E5%B7%A5%E5%85%B7stash/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;Stashing&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;储藏工作&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;应用储藏&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;被暂存的文件重新暂存&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;应用后，移除储藏的内容&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;取消储藏(Un-applying a Stash)&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;新建stash-unapply别名&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;从储藏中创建分支&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;a-namestashinggit工具---储藏stashingagit&#34;&gt;&lt;!-- raw HTML omitted --&gt;Git工具 - 储藏（Stashing）&lt;!-- raw HTML omitted --&gt;git&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%82%A8%E8%97%8F%E4%B8%8E%E6%B8%85%E7%90%86&#34;&gt;原文&lt;/a&gt;
场景：当项目中某一部分正在编码中，突然接到新任务，又必须换至其他分支去完成。&lt;/p&gt;
&lt;p&gt;问题：你不想提交进行了一半的工作，否则以后你无法回到这个工作点。&lt;/p&gt;
&lt;p&gt;解决：**&lt;!-- raw HTML omitted --&gt;git stash &lt;!-- raw HTML omitted --&gt;**命令。&lt;/p&gt;
&lt;p&gt;“Stashing”可以获取工作目录的中间状态，即：将修改过的被追踪的文件和暂存的变更，保存到一个未完结变更的堆栈中，随时可以重新应用。&lt;/p&gt;
&lt;h3 id=&#34;a-namework储藏工作a&#34;&gt;&lt;!-- raw HTML omitted --&gt;储藏工作&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;进入项目目录，修改某个文件，有可能还暂存其中的一个变更。&lt;/li&gt;
&lt;li&gt;**&lt;!-- raw HTML omitted --&gt;git status &lt;!-- raw HTML omitted --&gt;**命令,查看中间状态：
{%codeblock lang:bash %}
$ git status&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;on-branch-master&#34;&gt;On branch master&lt;/h1&gt;
&lt;h1 id=&#34;changes-to-be-committed&#34;&gt;Changes to be committed:&lt;/h1&gt;
&lt;h1 id=&#34;use-git-reset-head-file-to-unstage&#34;&gt;(use &amp;ldquo;git reset HEAD &lt;!-- raw HTML omitted --&gt;&amp;hellip;&amp;rdquo; to unstage)&lt;/h1&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;modified---indexhtml&#34;&gt;modified:   index.html&lt;/h1&gt;
&lt;h1 id=&#34;heading-1&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;changes-not-staged-for-commit&#34;&gt;Changes not staged for commit:&lt;/h1&gt;
&lt;h1 id=&#34;use-git-add-file-to-update-what-will-be-committed&#34;&gt;(use &amp;ldquo;git add &lt;!-- raw HTML omitted --&gt;&amp;hellip;&amp;rdquo; to update what will be committed)&lt;/h1&gt;
&lt;h1 id=&#34;heading-2&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;modified---libsimplegitrb&#34;&gt;modified:   lib/simplegit.rb&lt;/h1&gt;
&lt;h1 id=&#34;heading-3&#34;&gt;&lt;/h1&gt;
&lt;p&gt;{%endcodeblock%}
3. 切换分支，但不提交step 1 中的变更，所以储藏这些变更。
执行**&lt;!-- raw HTML omitted --&gt;git stash &lt;!-- raw HTML omitted --&gt;**命令，往堆栈中推送一个新的储藏：
{%codeblock lang:bash %}
$ git stash
Saved working directory and index state&lt;br&gt;
&amp;ldquo;WIP on master: 049d078 added the index file&amp;rdquo;
HEAD is now at 049d078 added the index file
(To restore them type &amp;ldquo;git stash apply&amp;rdquo;)
{%endcodeblock%}
4. 执行step 2查看目录库，中间状态就不见了：
{%codeblock lang:bash %}
$ git status
#######On branch master
nothing to commit, working directory clean
{%endcodeblock%}
这时，你可以方便地切换到其他分支工作；你的变更都保存在栈上。
5. 使用**&lt;!-- raw HTML omitted --&gt;git stash list&lt;!-- raw HTML omitted --&gt;**要查看现有的储藏：
{%codeblock lang:bash%}
$ git stash list
stash@{0}: WIP on master: 049d078 added the index file
stash@{1}: WIP on master: c264051 Revert &amp;ldquo;added file_size&amp;rdquo;
stash@{2}: WIP on master: 21d80a5 added number to log
{%endcodeblock%}
在这个案例中，之前已经进行了两次储藏，所以你可以访问到三个不同的储藏。&lt;/p&gt;
&lt;h3 id=&#34;a-nameapply应用储藏a&#34;&gt;&lt;!-- raw HTML omitted --&gt;应用储藏&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;执行**&lt;!-- raw HTML omitted --&gt;git stash apply&lt;!-- raw HTML omitted --&gt;**命令, 可以重新应用最近的一次储藏；
执行**&lt;!-- raw HTML omitted --&gt;git stash apply stash@{2}&lt;!-- raw HTML omitted --&gt;**命令，即通过指定储藏的名字，来应用更早的储藏。
{%codeblock lang:bash%}
$ git stash apply&lt;/p&gt;
&lt;h1 id=&#34;on-branch-master-1&#34;&gt;On branch master&lt;/h1&gt;
&lt;h1 id=&#34;changes-not-staged-for-commit-1&#34;&gt;Changes not staged for commit:&lt;/h1&gt;
&lt;h1 id=&#34;use-git-add-file-to-update-what-will-be-committed-1&#34;&gt;(use &amp;ldquo;git add &lt;!-- raw HTML omitted --&gt;&amp;hellip;&amp;rdquo; to update what will be committed)&lt;/h1&gt;
&lt;h1 id=&#34;heading-4&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;modified---indexhtml-1&#34;&gt;modified:   index.html&lt;/h1&gt;
&lt;h1 id=&#34;modified---libsimplegitrb-1&#34;&gt;modified:   lib/simplegit.rb&lt;/h1&gt;
&lt;h1 id=&#34;heading-5&#34;&gt;&lt;/h1&gt;
&lt;p&gt;{%endcodeblock%}&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>XMPP简单研究[转]</title>
      <link>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/xmpp%E7%AE%80%E5%8D%95%E7%A0%94%E7%A9%B6%E8%BD%AC/</link>
      <pubDate>Tue, 06 Jan 2015 14:36:06 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E5%BC%80%E6%BA%90%E5%BA%93/xmpp%E7%AE%80%E5%8D%95%E7%A0%94%E7%A9%B6%E8%BD%AC/</guid>
      <description>最近想做一个游戏服务器和 IM 互通的服务。最初的想法是可以增进游戏帐号的安全，比如游戏用户可以通过绑定一个 IM 帐号，从而不用登陆游戏就向游戏服务器</description>
    </item>
    
    <item>
      <title>代码实现AutoLayout相关特性</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0autolayout%E7%9B%B8%E5%85%B3%E7%89%B9%E6%80%A7/</link>
      <pubDate>Tue, 02 Sep 2014 15:53:11 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0autolayout%E7%9B%B8%E5%85%B3%E7%89%B9%E6%80%A7/</guid>
      <description>&lt;h2 id=&#34;按比例缩放&#34;&gt;按比例缩放&lt;/h2&gt;
&lt;p&gt;按比例缩放，这是在Interface Builder中无法设置的内容。&lt;br&gt;
而在代码中，有如下两种实现方式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;NSLayoutConstraint&lt;/code&gt;类型的初始化函数中的&lt;code&gt;multiplier&lt;/code&gt;参数就可以非常简单的设置按比例缩放。&lt;/li&gt;
&lt;li&gt;同时也可以设置不同&lt;code&gt;NSLayoutAttribute&lt;/code&gt;参数来达到意想不到的效果，比如“A的Width等于B的Height的2倍”这样的效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在就拿一个简单的**&lt;code&gt;UIButton&lt;/code&gt;**做示例，在ViewController中创建一个UIButton字段：&lt;br&gt;
{%codeblock lang:objc%}
UIButton *btn;&lt;br&gt;
{%endcodeblock%}&lt;/p&gt;
&lt;h4 id=&#34;需求-1&#34;&gt;需求 1：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;要求**&lt;code&gt;UIButton&lt;/code&gt;**水平居中，始终距离父View底部**20**单位，其高度是父View高度的三分之一。&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;KVO&lt;/strong&gt;来监控**&lt;code&gt;UIButton&lt;/code&gt;**的大小并实时输出到屏幕上。&lt;br&gt;
{%codeblock lang:objc%}&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(void)viewDidLoad
{
[super viewDidLoad];&lt;/p&gt;
&lt;p&gt;//创建UIButton，不需要设置frame
btn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
[btn setTitle:@&amp;ldquo;mgen&amp;rdquo; forState:UIControlStateNormal];
btn.backgroundColor = [UIColor greenColor];
[self.view addSubview:btn];&lt;/p&gt;
&lt;p&gt;//禁止自动转换AutoresizingMask
btn.translatesAutoresizingMaskIntoConstraints = NO;&lt;/p&gt;
&lt;p&gt;//居中
[self.view addConstraint:[NSLayoutConstraint
constraintWithItem:btn
attribute:NSLayoutAttributeCenterX
relatedBy:NSLayoutRelationEqual
toItem:self.view
attribute:NSLayoutAttributeCenterX
multiplier:1
constant:0]];&lt;/p&gt;
&lt;p&gt;//距离底部20单位
//注意NSLayoutConstraint创建的constant是加在toItem参数的，所以需要-20。
[self.view addConstraint:[NSLayoutConstraint
constraintWithItem:btn
attribute:NSLayoutAttributeBottom
relatedBy:NSLayoutRelationEqual
toItem:self.view
attribute:NSLayoutAttributeBottom
multiplier:1
constant:-20]];&lt;/p&gt;
&lt;p&gt;//定义高度是父View的三分之一
[self.view addConstraint:[NSLayoutConstraint
constraintWithItem:btn
attribute:NSLayoutAttributeHeight
relatedBy:NSLayoutRelationEqual
toItem:self.view
attribute:NSLayoutAttributeHeight
multiplier:0.3
constant:0]];&lt;/p&gt;
&lt;p&gt;//注册KVO方法
[btn addObserver:self forKeyPath:@&amp;ldquo;bounds&amp;rdquo; options:NSKeyValueObservingOptionNew | NSKeyValueObservingOptionInitial context:nil]; &lt;br&gt;
}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>在IOS中自定义URLSchemes教程</title>
      <link>https://it-boyer.github.io/post/old/ios/%E5%9C%A8ios%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89urlschemes%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 28 Aug 2014 20:32:48 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E5%9C%A8ios%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89urlschemes%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;h4 id=&#34;url-schemes&#34;&gt;URL Schemes&lt;/h4&gt;
&lt;p&gt;iPhone SDK中最酷的功能之一是一个应用程序能够把自己和自定义的URL协议绑定，这个URL协议可用于启动该应用程序（通过浏览器或者iPhone上的另一个程序）。创建这样的绑定并不难，难得的是你忍不住要在你的程序里用它！&lt;/p&gt;
&lt;p&gt;首先，你需要说明你想如何在程序中响应这个URL。最简单的自定义协议的方法是“唤醒”，而且可以通过URL把数据信息传递给程序，这样，程序被唤醒后能做更多的事情。&lt;/p&gt;
&lt;h4 id=&#34;注册自定义url协议&#34;&gt;注册自定义URL协议&lt;/h4&gt;
&lt;p&gt;首先需要向iPhone注册一个自定义URL协议。这是在你的项目文件夹的info.plist文件进行的（就是你改变应用程序图标的同一个文件）。&lt;/p&gt;
&lt;p&gt;默认，Xcode在图形窗口中打开info.pllist，当然也可以直接用文本模式打开——对有的人来说这反而更简单。&lt;/p&gt;
&lt;h6 id=&#34;step1-右键选择add-row在下拉选框中选择url-types类型为array&#34;&gt;Step1. 右键，选择“Add Row”,在下拉选框中选择“&lt;strong&gt;URL types&lt;/strong&gt;”，类型为Array:&lt;/h6&gt;
&lt;h6 id=&#34;step2-打开item-0类型为dic添加新key为url-identifier类型为string可以是任何值但建议用反域名例如-commyapp&#34;&gt;Step2. 打开“Item 0″类型为Dic,添加新key为&amp;quot;URL identifier&amp;quot;,类型为String。可以是任何值，但建议用“反域名”(例如 “com.myapp”)。&lt;/h6&gt;
&lt;h5 id=&#34;step3-打开item-0类型为dic添加新key为url-schemes类型为array&#34;&gt;Step3. 打开“Item 0″类型为Dic,添加新key为“URL Schemes”,类型为Array:&lt;/h5&gt;</description>
    </item>
    
    <item>
      <title>XcodeHeaderDoc教程</title>
      <link>https://it-boyer.github.io/post/old/xcode/xcodeheaderdoc%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 28 Aug 2014 15:18:41 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/xcode/xcodeheaderdoc%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;HeaderDoc 是在Xcode 5 和 iOS7 发布时，新增的一个命令行工具，功能：可以从代码中自动生成格式良好的HTML文档——当然，必须依赖于特定格式的注释来完成的。&lt;/p&gt;
&lt;p&gt;另外，Xcode 还会在 quick look 面板中以&lt;strong&gt;HeaderDoc&lt;/strong&gt;风格显示你的注释。&lt;/p&gt;
&lt;p&gt;通过本教程，将学习如下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何书写 HeaderDoc 风格的注释&lt;/li&gt;
&lt;li&gt;分如何在 Xcode 中预览文档&lt;/li&gt;
&lt;li&gt;如何生成 HTML 文档&lt;/li&gt;
&lt;li&gt;如何使用 VVDocumenter-Xcode(一个易于使用的第3方文档制作工具)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;准备工作&#34;&gt;准备工作&lt;/h4&gt;
&lt;p&gt;下载本教程中用到的 &lt;a href=&#34;http://cdn2.raywenderlich.com/wp-content/uploads/2014/03/DocumentationExamples_Starter.zip&#34;&gt;示例项目&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个简单的示例程序只包含了两个类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Car: 包含几个属性及一个 “drive” 方法以及一个 completion 块。&lt;/li&gt;
&lt;li&gt;MathAPI: 包含了1个方法，用于累加两个数。
现在，这两个类还没有任何注释。以便演示如何通过 &lt;strong&gt;HeaderDoc&lt;/strong&gt; 为这两个类创建文档。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Storyboard之Segue</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/storyboard%E4%B9%8Bsegue/</link>
      <pubDate>Tue, 22 Jul 2014 10:59:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/storyboard%E4%B9%8Bsegue/</guid>
      <description>&lt;h5 id=&#34;segue原理&#34;&gt;Segue原理:&lt;/h5&gt;
&lt;p&gt;在iOS开发中，segue用来实现storyboard中源视图控制器和目标视图控制器连接，当segue被触发时，系统将完成下列操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;实例化目标视图控制器&lt;/li&gt;
&lt;li&gt;实例化一个新segue对象，该对象持有所有的信息&lt;/li&gt;
&lt;li&gt;调用源视图控制器的prepareForSegue:sender:方法，&lt;/li&gt;
&lt;li&gt;调用segue的 perform 方法将目标控制器带到屏幕上。&lt;br&gt;
这个动作行为依赖segue的类型如modal,push,custom,modal segue告诉源视图控制器present目标视图控制器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在源视图控制器的prepareForSegue:sender:的方法中，执行对目标视图控制器所有必要的属性配置，包括委托设置（如目标视图控制器有协议）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TextKit之便笺实战</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/textkit%E4%B9%8B%E4%BE%BF%E7%AC%BA%E5%AE%9E%E6%88%98/</link>
      <pubDate>Thu, 03 Jul 2014 17:29:00 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/textkit%E4%B9%8B%E4%BE%BF%E7%AC%BA%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;h2 id=&#34;便笺练习功能点&#34;&gt;便笺练习功能点:&lt;/h2&gt;
&lt;p&gt;通过实现以下特效，练习并掌握布局管理器（layout manger），文本容器（text containers）和文本存储器（text storage）等用法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态样式（Dynamic type）&lt;/li&gt;
&lt;li&gt;凸版印刷效果（Letterpress effects）&lt;/li&gt;
&lt;li&gt;环绕路径（Exclusion paths）&lt;/li&gt;
&lt;li&gt;动态文本格式及存储（Dynamic text formatting and storage）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个应用中我们将实现回流文本，字体大小的动态变换，以及闪回文本等效果。
效果图:&lt;br&gt;
&lt;img src=&#34;https://it-boyer.github.io/images/bianqian.png&#34; alt=&#34;image&#34;&gt;&lt;br&gt;
App开始运行后自动生成一组便笺实例并利用&lt;code&gt;tableViewController&lt;/code&gt;显示出来。&lt;code&gt;Storyboards&lt;/code&gt;和&lt;code&gt;segues&lt;/code&gt;会将被选中的单元格所对应的便笺内容显示出来以供用户编辑。
项目开发包：&lt;a href=&#34;http://cdn4.raywenderlich.com/wp-content/uploads/2013/09/TextKitNotepad-starter.zip&#34;&gt;Notepad.zip&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;动态样式&#34;&gt;动态样式&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;动态样式（Dynamic type）&lt;/code&gt;是iOS 7里面变化最大的特性之一; 它使得app可以遵从用户选择的字体大小和粗细。
选择 &lt;strong&gt;通用-&amp;gt;文字大小&lt;/strong&gt; 或 &lt;strong&gt;通用-&amp;gt;辅助功能&lt;/strong&gt; 来查看app中的字体设置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://it-boyer.github.io/images/UserTextPreferences.png&#34; alt=&#34;image&#34;&gt;&lt;br&gt;
iOS 7 支持通过&lt;code&gt;粗体&lt;/code&gt;、&lt;code&gt;设置字体大小&lt;/code&gt;等方式提高支持动态文本的应用的易读性。
例如**&lt;code&gt;UIFont&lt;/code&gt;**新增的一个方法： **&lt;code&gt;preferredFontForTextStyle&lt;/code&gt;** 用来根据用户对字体大小的设置来自动制定字体样式。&lt;br&gt;
下面表格中是六种可用字体样式的示例：&lt;br&gt;
&lt;img src=&#34;https://it-boyer.github.io/images/TextStyles.png&#34; alt=&#34;image&#34;&gt;&lt;br&gt;
最左边一列是最小字体；中间一列是最大字体；最右边一列是粗体效果。&lt;/p&gt;
&lt;h3 id=&#34;使用系统动态字体样式&#34;&gt;使用系统动态字体样式&lt;/h3&gt;
&lt;p&gt;使用动态文本，是通过给&lt;code&gt;文本字体&lt;/code&gt;设置字体样式&lt;strong&gt;style&lt;/strong&gt;而不是指定具体的&lt;code&gt;字体名称&lt;/code&gt;和&lt;code&gt;大小&lt;/code&gt;。这样，系统会在运行时自动根据这一样式以及用户的字体大小设置来选择使用合适的字体。&lt;/p&gt;
&lt;h4 id=&#34;preferredfontfortextstyle方法设置字体样式&#34;&gt;&lt;code&gt;preferredFontForTextStyle:&lt;/code&gt;方法设置字体样式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;打开 &lt;code&gt;NoteEditorViewController.m/swift&lt;/code&gt; 在&lt;code&gt;viewDidLoad：&lt;/code&gt;方法实现的最后面加入以下代码：
{%codeblock lang:objc%}
self.textView.font = [UIFont preferredFontForTextStyle:UIFontTextStyleBody];
{%endcodeblock%}
{% codeblock  lang:swift %}
self.textView.font = UIFont.preferredFont(forTextStyle: .body)
{% endcodeblock %}&lt;/li&gt;
&lt;li&gt;打开 &lt;code&gt;NotesListViewController.m/swift&lt;/code&gt; 在 &lt;code&gt;tableView:cellForRowAtIndexPath:&lt;/code&gt; 方法中增加如下代码:
{%codeblock lang:objc%}
cell.textLabel.font = [UIFont preferredFontForTextStyle:UIFontTextStyleHeadline];
{%endcodeblock%}
{% codeblock  lang:swift %}
cell.textLabel?.font = UIFont.preferredFont(forTextStyle: .headline)
{% endcodeblock %}
上面两行代码都用到了新版iOS的字体样式.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;字体样式：通过语义法命名字体，例如 &lt;code&gt;UIFontTextStyleSubHeadline&lt;/code&gt;, 可以避免在代码里每一处都指定具体的字体名称和样式， 而且确保app能对用户的字体大小设置做出恰当的回应。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;app响应用户字体设置&#34;&gt;APP响应用户字体设置&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;设置系统字体
返回到&lt;strong&gt;通用-&amp;gt;文字大小&lt;/strong&gt;重新修改字体设置.
再运行App, &lt;strong&gt;Note&lt;/strong&gt;页面的文字大小是当前设定的字体大小；前后截屏对比,分辨率小了一半。&lt;br&gt;
&lt;img src=&#34;https://it-boyer.github.io/images/NotepadWithDynamicType.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt;
&lt;li&gt;设置系统字体生效
当我们返回到&lt;strong&gt;通用-&amp;gt;文字大小&lt;/strong&gt;重新修改字体设置. 再打开&lt;strong&gt;Note&lt;/strong&gt;页面, 会发现app并没有&lt;strong&gt;立即&lt;/strong&gt;对字体设置的变化做出相应反应。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;监听系统通知实现app响应用户字体设置&#34;&gt;监听系统通知：实现APP响应用户字体设置&lt;/h5&gt;
&lt;p&gt;当用户修改了他们的字体大小设置之后，这一样式对应的字体并不会自动更新，必须重新请求才能获取新的值。用户设置变化后，&lt;code&gt;preferredFontForTextStyle:&lt;/code&gt;方法返回的字体也会变化。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加监听系统通知&lt;code&gt;UIContentSizeCategoryDidChangeNotification&lt;/code&gt;通知APP响应用户字体设置的变化
打开 &lt;code&gt;NoteEditorViewController.m&lt;/code&gt; 并在 &lt;code&gt;viewDidLoad&lt;/code&gt; 方法的实现的最后加入以下代码：
{%codeblock lang:objc%}
[[NSNotificationCenter defaultCenter]
addObserver:self
selector:@selector(preferredContentSizeChanged:)
name:UIContentSizeCategoryDidChangeNotification
object:nil];
{%endcodeblock%}
{%codeblock lang:swift%}
//字体变化通知:调用preferredContentSizeChanged:方法
NotificationCenter.default.addObserver(self, selector: #selector(NoteEditorViewController.preferredContentSizeChanged(_:)), name: NSNotification.Name.UIContentSizeCategoryDidChange, object: nil)
{%endcodeblock%}&lt;/li&gt;
&lt;li&gt;添加系统通知响应事件
收到用于指定本类接收字体设定变化的通知后，调用&lt;code&gt;preferredContentSizeChanged:&lt;/code&gt;方法
在&lt;code&gt;NoteEditorViewController.m&lt;/code&gt;中&lt;code&gt;viewDidLoad&lt;/code&gt;方法之后紧接着添加以下方法：
{%codeblock lang:objc%}&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;(void)preferredContentSizeChanged:(NSNotification *)notification
{
self.textView.font = [UIFont preferredFontForTextStyle:UIFontTextStyleBody];
}
{%endcodeblock%}
{%codeblock lang:swift %}
//字体变化通知时调用
func preferredContentSizeChanged(_ notification:NSNotification)
{
self.textView.font = UIFont.preferredFont(forTextStyle: .body)
}
{%endcodeblock%}
这一方法作用是根据新的字体设置来设定&lt;code&gt;textView&lt;/code&gt;中的字体。 &lt;br&gt;
Build并运行app，修改字体大小设置，Note页面就可以即时更新字体大小了。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>iOS Document Interaction 编程指南</title>
      <link>https://it-boyer.github.io/post/old/ios/iosdocumentinteraction%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 01 Jul 2014 23:12:01 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/iosdocumentinteraction%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h4 id=&#34;关于-document-interaction&#34;&gt;关于 Document Interaction&lt;/h4&gt;
&lt;p&gt;iOS支持在你的app中通过调用其他app来预览和显示文档。iOS还支持文件关联，允许其他app调用你的app打开文件。这些技术包括了UIKit中提供的&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDocumentInteractionController_class/Reference/Reference.html&#34;&gt;UIDocumentInteractionController&lt;/a&gt;类，以及&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/QuickLook/Reference/QuickLookFrameworkReference_iPhoneOS/_index.html&#34;&gt;Quick Look&lt;/a&gt;框架。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;######预览文档和呈现选项菜单&lt;br&gt;
如果app需要打开自身并不支持的文件时，就需要使用&lt;strong&gt;UIDocumentInteractionController&lt;/strong&gt;。一个&lt;strong&gt;document interaction controller&lt;/strong&gt;通过&lt;strong&gt;Quick Look框架&lt;/strong&gt;判断文档是否能被另一个app打开和预览。也就是说，app可以通过&lt;strong&gt;documentinteraction controller&lt;/strong&gt;提供一些支持打开该文件方式的菜单。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体实现需要以下步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;需要通过其他APP打开的文件，来实例化&lt;code&gt;UIDocumentInteractionController&lt;/code&gt;实例对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;在自己的APP UI中提供一个代表这种文件的图像标（一般显示文件名或者图标）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;用户交互，如触摸这个控件，则调用&lt;code&gt;documentinteractioncontroller&lt;/code&gt;对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三种交互界面:
1. 预览文件的内容。
2. 一个包含预览和打开操作的菜单。可以通过实现某些委托方法，向菜单中加入其他操作，比如复制、打印。
3. 一个菜单，仅包含“以其它方式打开”操作。&lt;/p&gt;
&lt;p&gt;同时，&lt;code&gt;documentinteractioncontroller&lt;/code&gt;内置了一些手势，必要时可以直接实现它们。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;######使用&lt;code&gt;documentinteractioncontroller&lt;/code&gt;的场景:&lt;strong&gt;与文件交互的app都可以使用。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;需要从网络下载文件的APP:&lt;br&gt;
例如，email程序需要打开和预览邮件附件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;不下载文件的APP:&lt;br&gt;
例如，APP需要支持文件共享（参考“File-Sharing Support” in &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/Miscellaneous/Conceptual/iPhoneOSTechOverview/Introduction/Introduction.html#//apple_ref/doc/uid/TP40007898&#34;&gt;iOS Technology Overview&lt;/a&gt;), 即可以对同步到app Documents/Shared目录下的文件使用&lt;code&gt;documentinteractioncontroller&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>instrument之Zombie工具</title>
      <link>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/instrument%E4%B9%8Bzombie%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 01 Jul 2014 19:54:02 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/%E8%B0%83%E8%AF%95/instrument%E4%B9%8Bzombie%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;Zombie:针对&lt;strong&gt;僵尸对象&lt;/strong&gt;导致应用程序崩溃，即已经&lt;code&gt;deallocated&lt;/code&gt;的对象，它们的&lt;code&gt;retainCount&lt;/code&gt;计数器已经为0，通过正常的手段是无法在&lt;code&gt;debug&lt;/code&gt;中跟踪和观察到的。&lt;/p&gt;
&lt;p&gt;如果你开启了 &lt;code&gt;Zombie Enabled&lt;/code&gt; ，则当 Zombie 问题出现时，控制台会输出 Zombie 对象的地址，且程序会在此处产生断点：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; -[CALayer retainCount]: message sent to deallocated instance &amp;lt;memoryaddress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>UIDevice类介绍</title>
      <link>https://it-boyer.github.io/post/old/ios/uidevice%E7%B1%BB%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 17 Jun 2014 15:12:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/uidevice%E7%B1%BB%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h3 id=&#34;uideviceh&#34;&gt;UIDevice.h&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-objc&#34; data-lang=&#34;objc&#34;&gt;&lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UIDevice&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;currentDevice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 		  &lt;span class=&#34;c1&#34;&gt;// 获取当前设备
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;NSString&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;               	  &lt;span class=&#34;c1&#34;&gt;// e.g. &amp;#34;My iPhone&amp;#34;  
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NSString&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;              	  &lt;span class=&#34;c1&#34;&gt;// e.g. @&amp;#34;iPhone&amp;#34;, @&amp;#34;iPod touch&amp;#34;  
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NSString&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localizedModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;     	  &lt;span class=&#34;c1&#34;&gt;// localized version of model  
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NSString&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;systemName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;     		  &lt;span class=&#34;c1&#34;&gt;// e.g. @&amp;#34;iOS&amp;#34;  
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NSString&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;systemVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   	  &lt;span class=&#34;c1&#34;&gt;// e.g. @&amp;#34;4.0&amp;#34;  
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UIDeviceOrientation&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;orientation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//除非正在生成设备方向的通知，否则返回UIDeviceOrientationUnknown  
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NSUUID&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;identifierForVendor&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;//可用于唯一标识该设备，同一供应商不同应用具有相同的UUID
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-objc&#34; data-lang=&#34;objc&#34;&gt;    &lt;span class=&#34;n&#34;&gt;UIDeviceOrientationUnknown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;UIDeviceOrientationPortrait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;// 竖向，头向上
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;UIDeviceOrientationPortraitUpsideDown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  		&lt;span class=&#34;c1&#34;&gt;// 竖向，头向下
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;UIDeviceOrientationLandscapeLeft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;         		&lt;span class=&#34;c1&#34;&gt;// 横向，头向左
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;UIDeviceOrientationLandscapeRight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;       		&lt;span class=&#34;c1&#34;&gt;// 横向，头向右
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;UIDeviceOrientationFaceUp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                  	&lt;span class=&#34;c1&#34;&gt;// 平放，屏幕朝下
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;UIDeviceOrientationFaceDown&lt;/span&gt;                	 &lt;span class=&#34;c1&#34;&gt;// 平放，屏幕朝下
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;//使用内置的宏定义的函数，根据&lt;strong&gt;orientation&lt;/strong&gt;判断设备方向,返回值类型&lt;strong&gt;BOOL&lt;/strong&gt;.&lt;br&gt;
{%codeblock lang:java 纵向宏定义,返回YES:纵向%}
#define UIDeviceOrientationIsPortrait(orientation)  ((orientation) == UIDeviceOrientationPortrait || (orientation) == UIDeviceOrientationPortraitUpsideDown)
{%endcodeblock %}
{%codeblock lang:java 横向宏定义,返回YES:横向%}
#define UIDeviceOrientationIsLandscape(orientation) ((orientation) == UIDeviceOrientationLandscapeLeft || (orientation) == UIDeviceOrientationLandscapeRight)
{%endcodeblock%}&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IOS7新宠TextKit</title>
      <link>https://it-boyer.github.io/post/old/ios/ui/ios7%E6%96%B0%E5%AE%A0textkit/</link>
      <pubDate>Mon, 16 Jun 2014 22:24:48 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ui/ios7%E6%96%B0%E5%AE%A0textkit/</guid>
      <description>&lt;h2 id=&#34;text-kit&#34;&gt;Text Kit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Text Kit&lt;/code&gt;&lt;/strong&gt;：是个庞大的framework，继承了&lt;code&gt;Core Text&lt;/code&gt;的全部功能，构建了快速、先进的文本排版和渲染引擎，更让开发者们高兴的是，设计者把它封装在了一个面向对象的API中。并且与UIKit框架很好的集成，它让程序能够通过&lt;strong&gt;NSTextStorage&lt;/strong&gt;对象存储文本排版和显示文本等主要信息，并支持排版所需要的所有特性，包括字距调整、连写、换行和对齐等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;更直观的理解，&lt;strong&gt;UITextView&lt;/strong&gt;，&lt;strong&gt;UITextField&lt;/strong&gt;、&lt;strong&gt;UILabel&lt;/strong&gt;等UIKit控件都已经基于&lt;strong&gt;Text Kit&lt;/strong&gt;重新构建，是为UIKit框架提供高质量排版服务而扩展的一些类和协议.&lt;br&gt;
例如：NSTextStorage对象，它本身是&lt;strong&gt;NSMutableAttributedString&lt;/strong&gt;的子类，支持分批编辑，这就意味着在改变一个范围内的字符样式时，不用整体替换文本内容，就能完成排版效果。其中支持分页文本、文本包装、富文本编辑、交互式文本着色、文本折叠和自定义截取等特性。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;IOS6之前，想实现一些丰富的文本排版，例如在textView中显示不同样式的文本，或者图片和文字混排等，就需要借助于UIWebView或者深入研究一下&lt;code&gt;Core Text&lt;/code&gt;。后来iOS6，增加一个很棒的属性:&lt;code&gt;NSAttributedString&lt;/code&gt;，主要用于支持UILabel、UITextField、UITextView等UIKit控件自主排版的功能。很显然，IOS7并没有满足于这一改进，同时推出一款功能更为齐全，易用的&lt;code&gt;Text Kit&lt;/code&gt;新宠。&lt;br&gt;
在iOS 6中, 用于文本的UIKit控件是基于WebKit和Core Graphics的字符串绘制方法来实现的。如下面层级体系图所示：&lt;br&gt;
iOS 7的整体构架要更清晰，所有基于文本的UIKit控件（除了UIWebView）现在都可以使用Text Kit，如下图所示：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IOS7的变革</title>
      <link>https://it-boyer.github.io/post/old/ios/ios7%E7%9A%84%E5%8F%98%E9%9D%A9/</link>
      <pubDate>Wed, 11 Jun 2014 10:17:19 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ios7%E7%9A%84%E5%8F%98%E9%9D%A9/</guid>
      <description>性能提高以及被遗弃的功能 新增截屏通知:UIApplicationUserDidTakeScreenshotNotification 在IOS 7</description>
    </item>
    
    <item>
      <title>在IOS中像SnapChat一样监控screenshots</title>
      <link>https://it-boyer.github.io/post/old/ios/%E5%9C%A8ios%E4%B8%AD%E5%83%8Fsnapchat%E4%B8%80%E6%A0%B7%E7%9B%91%E6%8E%A7screenshots/</link>
      <pubDate>Tue, 10 Jun 2014 18:45:37 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/%E5%9C%A8ios%E4%B8%AD%E5%83%8Fsnapchat%E4%B8%80%E6%A0%B7%E7%9B%91%E6%8E%A7screenshots/</guid>
      <description>A number of Stack Overflowquestions were having issues with this, so I figured I’d explain. From reverse engineering, this is the exact method used by SnapChat, but it’s also pretty much what I’d have done myself. The process is pretty simple, and relies on a quirk of iOS: taking a screenshot cancels all touches on the screen. Because of that, anything that you</description>
    </item>
    
    <item>
      <title>IOS7截屏问题</title>
      <link>https://it-boyer.github.io/post/old/ios/ios7%E6%88%AA%E5%B1%8F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 10 Jun 2014 18:29:31 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/ios/ios7%E6%88%AA%E5%B1%8F%E9%97%AE%E9%A2%98/</guid>
      <description>iOS 7截图最新变化: 不再影响用户其他操作 在 iOS 7 中，截图动作已经发生了变化，就如苹果在版本说明中描述的那样：用户截图时，有效点击不会再失效了。这</description>
    </item>
    
    <item>
      <title>初步搭建Octopress</title>
      <link>https://it-boyer.github.io/post/old/hexo/%E5%88%9D%E6%AD%A5%E6%90%AD%E5%BB%BAoctopress/</link>
      <pubDate>Mon, 09 Jun 2014 23:26:22 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/old/hexo/%E5%88%9D%E6%AD%A5%E6%90%AD%E5%BB%BAoctopress/</guid>
      <description>软件支持： Github:后台新建项目，点击下载 iTerm2:可以替代mac终端，相当强大。下载 ruby:ruby安装包 下载 Mou:MarkD</description>
    </item>
    
  </channel>
</rss>
